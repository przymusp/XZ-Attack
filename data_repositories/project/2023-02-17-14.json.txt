{"id":"27164598816","type":"IssueCommentEvent","actor":{"id":5265893,"login":"vfazio","display_login":"vfazio","gravatar_id":"","url":"https://api.github.com/users/vfazio","avatar_url":"https://avatars.githubusercontent.com/u/5265893?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/events","html_url":"https://github.com/tukaani-project/xz/pull/32","id":1574672110,"node_id":"PR_kwDOIQBEvs5Jcyc6","number":32,"title":"Detect symver attribute support","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":5016626567,"node_id":"LA_kwDOIQBEvs8AAAABKwOlhw","url":"https://api.github.com/repos/tukaani-project/xz/labels/5.4.2","name":"5.4.2","color":"006b75","default":false,"description":"Item earmarked for 5.4.2 release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-02-07T16:47:02Z","updated_at":"2023-02-17T14:31:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/32","html_url":"https://github.com/tukaani-project/xz/pull/32","diff_url":"https://github.com/tukaani-project/xz/pull/32.diff","patch_url":"https://github.com/tukaani-project/xz/pull/32.patch","merged_at":null},"body":"On Microblaze builds will fail when trying to add symver information because  `__attribute__((symver ..))` is not supported even though `__has_attribute(__symver__)` returns true.\r\n\r\nSupport for symver needs to be detected via a compile test since `__has_attribute` can report false positives [0].\r\n\r\nAdd a configure compile check for `__attribute__((symver ..))` to ensure it is supported and define a variable to advertise support.\r\n\r\n[0] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766#c1\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [ ] Build was run locally and without warnings or errors\r\n- [ ] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\nbuilds targeting the microblaze fail\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\n- Builds now succeed\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI tested compiles via GCC 12 and 9 for x86_64 and microblaze targets and didn't encounter issues.\r\n\r\n<!-- Any other information that is important to this PR. -->","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1434728885","html_url":"https://github.com/tukaani-project/xz/pull/32#issuecomment-1434728885","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/32","id":1434728885,"node_id":"IC_kwDOIQBEvs5VhDm1","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"created_at":"2023-02-17T14:31:08Z","updated_at":"2023-02-17T14:31:08Z","author_association":"NONE","body":"\r\n> The linked GCC bug 101766 gives an impression that `__has_attribute` is fairly broken and not usable without extra care. However, perhaps it's not the real problem in this case. I need to understand the big picture better first.\r\n> \r\n> The `__symver__` attribute is used when possible because with the traditional `asm(\".symver...\")` method link-time optimization (LTO, `-flto`) with GCC breaks in a way that isn't obvious. The build will succeed without warnings but the shared library will have issues which sometimes won't be immediately visible.\r\n> \r\n> It's confusing if GCC doesn't support `__symver__` attribute but the platform still supports `.symver` in the assembly code. Are the binaries in the ELF format? What does `file src/liblzma/.libs/liblzma.*` say about the shared library after a successful build with your patch?\r\n```\r\nvfazio@vfazio2 ~/development/buildroot $ file output/build/xz-5.2.10/src/liblzma/.libs/liblzma.*\r\noutput/build/xz-5.2.10/src/liblzma/.libs/liblzma.la:        symbolic link to ../liblzma.la\r\noutput/build/xz-5.2.10/src/liblzma/.libs/liblzma.lai:       libtool library file, ASCII text\r\noutput/build/xz-5.2.10/src/liblzma/.libs/liblzma.so:        symbolic link to liblzma.so.5.2.10\r\noutput/build/xz-5.2.10/src/liblzma/.libs/liblzma.so.5:      symbolic link to liblzma.so.5.2.10\r\noutput/build/xz-5.2.10/src/liblzma/.libs/liblzma.so.5.2.10: ELF 32-bit LSB shared object, Xilinx MicroBlaze 32-bit RISC, version 1 (SYSV), dynamically linked, with debug_info, not stripped\r\n\r\n```\r\n> \r\n> If it is in ELF, what does this print?\r\n> \r\n> ```\r\n> readelf -W --dyn-syms src/liblzma/.libs/liblzma.so.5 | grep lzma_stream_encoder_mt_memusage\r\n> ```\r\n> \r\n```\r\nvfazio@vfazio2 ~/development/buildroot $ readelf -W --dyn-syms output/build/xz-5.2.10/src/liblzma/.libs/liblzma.so.5.2.10 | grep lzma_stream_encoder_mt_memusage\r\n   121: 0000f11c   676 FUNC    GLOBAL DEFAULT   12 lzma_stream_encoder_mt_memusage@@XZ_5.2\r\n   122: 0000f11c   676 FUNC    GLOBAL DEFAULT   12 lzma_stream_encoder_mt_memusage@XZ_5.1.2alpha\r\n   123: 0000f11c   676 FUNC    GLOBAL DEFAULT   12 lzma_stream_encoder_mt_memusage@XZ_5.2.2\r\n```\r\n> It should print three lines whose rightmost column looks like this:\r\n> \r\n> ```\r\n> lzma_stream_encoder_mt_memusage@@XZ_5.2\r\n> lzma_stream_encoder_mt_memusage@XZ_5.1.2alpha\r\n> lzma_stream_encoder_mt_memusage@XZ_5.2.2\r\n> ```\r\n> \r\n> If there are no `@@XZ...` or `@XZ...` then the platform doesn't support symbol versioning and the next few paragraphs aren't interesting.\r\n> \r\n> XZ Utils currently has two variants of symbol versioning:\r\n> \r\n> (1) A GNU/Linux-specific version with extra symbols for compatibility with a broken patch in RHEL/CentOS 7 which has also been copied to a few other places. The `@XZ_5.1.2alpha` and `@XZ_5.2.2` above exist due to this.\r\n> \r\n> (2) A generic version that works on GNU/Linux (without RHEL/CentOS 7 symbols) and FreeBSD (possibly also Solaris but not sure, it's not enabled by default on Solaris). With this the above list only has `@@XZ_5.2`. You can test this (without your patch) by omitting the `linux*)` section in configure.ac (lines 668-700 in XZ Utils 5.2.10; lines 723-755 in XZ Utils 5.4.1).\r\n> \r\n> It sounds very likely that the patch from RHEL/CentOS 7 (which was used somewhere else too) doesn't affect Microblaze users and thus (2) could be good **if** symbol versions are supported. The (2) method doesn't require anything in the C code, so no `__symver__` attribute or `asm(\".symver...\")` and thus no LTO build issues.\r\n> \r\n> On the other hand, if symbol versioning isn't supported at all, then the default in configure.ac should be changed so that on Microblaze it's equivalent to `--disable-symbol-versions`. This is easy to do with `case $host_cpu in microblaze*)`. I base this on the configure message `checking host system type... microblaze-buildroot-linux-gnu` from your build log.\r\n> \r\n> The proposed patch has subtle problems:\r\n> \r\n> (1) Autoconf tests that require `-Werror` should be written very carefully. In this case if user has specified enough warning flags in `CFLAGS` (for example, `-Wmissing-prototypes`) then the test will fail even if the compiler supports the `__symver__` attribute. This means that an innocent extra warning flag in `CFLAGS` can silently break `-flto` with GCC!\r\n\r\nThe patch was largely based on how the check has been adapted other places:\r\nhttps://github.com/libfuse/libfuse/pull/620/commits/3aba09a5c56e017746c5c1652dbc845f4db7374a\r\n\r\nhttps://gitlab.com/cryptsetup/cryptsetup/-/merge_requests/275/diffs?commit_id=5f71b3d63181aa88a68f7f71eab8801f2d8d2cde\r\n\r\nhttps://github.com/smuellerDD/libkcapi/blob/master/m4/ac_check_attribute_symver.m4\r\n\r\nI'm open to doing this an alternative way if it's more appropriate\r\n> \r\n> When writing this kind of tests, Clang's `-Weverything` is convenient for catching many issues like this. (Clang doesn't support `__symver__` so the test will fail for that reason still. `-flto` works with Clang with the traditional `.symver` method already.)\r\n> \r\n> While not too important for this particular test, `clang -Weverything` includes `-Wreserved-macro-identifier` which will warn about the macros added by `AC_LANG_SOURCE`. The test doesn't need anything from `AC_LANG_SOURCE` so it's better to avoid it when `-Werror` is needed. See also how support for `__constructor__` attribute is detected in configure.ac.\r\n> \r\n> (2) The CMake build isn't updated so with this patch CMake-based build will never use the `__symver__` attribute and thus `-flto` with GCC is silently broken again. While CMake-based build is not the primary build method on GNU/Linux, I want to keep the liblzma part of it working well at least on the most common platforms.\r\n> \r\n> Anyway, I want to understand the issue better before worrying about patches. Once the problem is understood, a patch is probably fairly easy to write.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1434728885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-17T14:31:09Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27164781608","type":"IssueCommentEvent","actor":{"id":5265893,"login":"vfazio","display_login":"vfazio","gravatar_id":"","url":"https://api.github.com/users/vfazio","avatar_url":"https://avatars.githubusercontent.com/u/5265893?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/events","html_url":"https://github.com/tukaani-project/xz/pull/32","id":1574672110,"node_id":"PR_kwDOIQBEvs5Jcyc6","number":32,"title":"Detect symver attribute support","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":5016626567,"node_id":"LA_kwDOIQBEvs8AAAABKwOlhw","url":"https://api.github.com/repos/tukaani-project/xz/labels/5.4.2","name":"5.4.2","color":"006b75","default":false,"description":"Item earmarked for 5.4.2 release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-02-07T16:47:02Z","updated_at":"2023-02-17T14:38:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/32","html_url":"https://github.com/tukaani-project/xz/pull/32","diff_url":"https://github.com/tukaani-project/xz/pull/32.diff","patch_url":"https://github.com/tukaani-project/xz/pull/32.patch","merged_at":null},"body":"On Microblaze builds will fail when trying to add symver information because  `__attribute__((symver ..))` is not supported even though `__has_attribute(__symver__)` returns true.\r\n\r\nSupport for symver needs to be detected via a compile test since `__has_attribute` can report false positives [0].\r\n\r\nAdd a configure compile check for `__attribute__((symver ..))` to ensure it is supported and define a variable to advertise support.\r\n\r\n[0] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766#c1\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [ ] Build was run locally and without warnings or errors\r\n- [ ] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\nbuilds targeting the microblaze fail\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\n- Builds now succeed\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI tested compiles via GCC 12 and 9 for x86_64 and microblaze targets and didn't encounter issues.\r\n\r\n<!-- Any other information that is important to this PR. -->","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1434738096","html_url":"https://github.com/tukaani-project/xz/pull/32#issuecomment-1434738096","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/32","id":1434738096,"node_id":"IC_kwDOIQBEvs5VhF2w","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"created_at":"2023-02-17T14:38:44Z","updated_at":"2023-02-17T14:38:44Z","author_association":"NONE","body":"Again, i'm not totally convinced the gcc toolchain itself shouldn't be fixed to include `elfos.h` if it's generating ELF binaries.\r\n\r\nhttps://github.com/gcc-mirror/gcc/blob/master/gcc/config.gcc#L2369\r\n\r\nI do not see \"elfos.h\" in any of the microblaze targets","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1434738096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-17T14:38:44Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
