commit cd9c5c4c9f41b8f5d4afc1e8bf4a44bee1b4e6b3
Author: JiaT75 <jiat0218@gmail.com>
Date:   Thu Jan 6 17:44:50 2022 +0800

    Fixed filtering for fixtures and tests

diff --git a/src/stest.c b/src/stest.c
index afcfbc3..099cd52 100644
--- a/src/stest.c
+++ b/src/stest.c
@@ -112,9 +112,9 @@ void stest_teardown(void) {
 
 char *test_file_name(char *path) {
   char *file = path + strlen(path);
-  while(file != path && *file != '\\')
+  while(file != path && *file != '\\' && *file != '/')
     file--;
-  if(*file == '\\')
+  if(*file == '\\' || *file == '/')
     file++;
   return file;
 }
@@ -296,6 +296,11 @@ void stest_header_printer(char *s, int s_len, int length, char f) {
 void stest_test_fixture_start(char *filepath) {
   stest_current_fixture_path = filepath;
   stest_current_fixture = test_file_name(filepath);
+
+  if(!stest_should_run_fixture(stest_current_fixture)) {
+    return;
+  }
+
   if(stest_is_display_only()) {
     printf("Fixture: %s\n", stest_current_fixture);
   }
@@ -333,33 +338,40 @@ void set_magic_marker(char *marker) {
   strcpy(stest_magic_marker, marker);
 }
 
-void stest_display_test(char *fixture_name, char *test_name) {
-  if(test_name == NULL)
-    return;
-  printf("%s,%s\r\n", fixture_name, test_name);
-}
-
-int stest_should_run(char *fixture, char *test) {
+int stest_should_run_test(char *test) {
   int run = 1;
 
   if(stest_fixture_filter) {
-    if(strncmp(stest_fixture_filter, fixture, strlen(stest_fixture_filter)) !=
-       0)
+    if(strncmp(stest_fixture_filter, stest_current_fixture,
+               strlen(stest_fixture_filter)) != 0)
       run = 0;
   }
+
   if(stest_test_filter && test != NULL) {
     if(strncmp(stest_test_filter, test, strlen(stest_test_filter)) != 0)
       run = 0;
   }
 
-  if(run && stest_display_only) {
-    stest_display_test(fixture, test);
-    run = 0;
+  return run;
+}
+
+int stest_should_run_fixture(char *fixture) {
+  int run = 1;
+
+  if(stest_fixture_filter) {
+    if(strncmp(stest_fixture_filter, fixture, strlen(stest_fixture_filter)) !=
+       0)
+      run = 0;
   }
+
   return run;
 }
 
 void stest_test(char *fixture, char *test, void (*test_function)(void)) {
+  if(!stest_should_run_test(test)) {
+    return;
+  }
+
   if(stest_is_display_only()) {
     printf("%s\n", test);
   }
@@ -424,8 +436,7 @@ int run_tests(stest_void_void tests) {
 
 void stest_show_help(void) {
   printf("Usage: [-t <testname>] [-f <fixturename>] [-d] [-h | --help] [-v] "
-         "[-m] [-k "
-         "<marker>]\r\n");
+         "[-m] [-k <marker>]\r\n");
   printf("Flags:\r\n");
   printf("\thelp:\twill display this help\r\n");
   printf("\t-t:\twill only run tests that match <testname>\r\n");
diff --git a/src/stest.h b/src/stest.h
index a0c6571..665bffe 100644
--- a/src/stest.h
+++ b/src/stest.h
@@ -55,7 +55,8 @@ void stest_assert_string_contains(const char *expected, const char *actual, cons
                                   unsigned int line);
 void stest_assert_string_not_contains(const char *expected, const char *actual,
                                       const char *function, unsigned int line);
-int stest_should_run(char *fixture, char *test);
+int stest_should_run_fixture(char *fixture);
+int stest_should_run_test(char *test);
 void stest_before_run(char *fixture, char *test);
 void stest_run_test(char *fixture, char *test);
 void stest_setup(void);