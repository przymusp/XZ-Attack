{"id":"39118442105","type":"PushEvent","actor":{"id":14246801,"login":"ahornby","display_login":"ahornby","gravatar_id":"","url":"https://api.github.com/users/ahornby","avatar_url":"https://avatars.githubusercontent.com/u/14246801?"},"repo":{"id":439094160,"name":"ahornby/folly","url":"https://api.github.com/repos/ahornby/folly"},"payload":{"repository_id":439094160,"push_id":18789500378,"size":507,"distinct_size":1,"ref":"refs/heads/sapling-pr-archive-ahornby","head":"48f477674935c6b1c56147a8c3e1e169437fb392","before":"36780dfdedff674ab85002c8d1d860087f76bb7d","commits":[{"sha":"9a4ece8899cce971497ab82ce69c7bc0fdeaa68d","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"basic_fbstring ctor from basic_string_view\n\nSummary: Converting constructors for `folly::basic_fbstring` from `std::bsaic_string_view` like the converting contsructors introduced for `std::basic_string` with C++17.\n\nReviewed By: ot\n\nDifferential Revision: D54417684\n\nfbshipit-source-id: c3ee21d60ffa2e6278c72e108218e122abd832ff","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/9a4ece8899cce971497ab82ce69c7bc0fdeaa68d"},{"sha":"843fa5f792011459243a59863d7f75b4d7420a87","author":{"email":"ott@meta.com","name":"Giuseppe Ottaviano"},"message":"Support rearming events inline for EventBasePoller epoll backend\n\nSummary:\nIn order to rearm events, `EventBasePoller` enqueues them into a queue that is processed by the poller thread, which may require waking it up.\n\n`epoll` supports concurrent submissions, but there was a concern that rearming the events inline could cause lock contention in the kernel. However, experiments with real workloads do not appear to support that.\n\nThis diff introduces an inline mode so we can experiment with both options. For `io_uring`, concurrent submissions are not supported so we cannot avoid the queue.\n\nReviewed By: dmm-fb\n\nDifferential Revision: D54308506\n\nfbshipit-source-id: b9e01a9505f1315d304c9e250d150da0737e8384","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/843fa5f792011459243a59863d7f75b4d7420a87"},{"sha":"c70c80d7a655549ba3a2554ad8b6c54e85d9fc54","author":{"email":"jdelliot@meta.com","name":"John Elliott"},"message":"Forward fix github build break due to D54280190\n\nSummary:\nX-link: https://github.com/facebookincubator/zstrong/pull/720\n\nWhen running getdeps as part of Github CI, the toolchains employed are found in \"C:\\Program Files\" or \"C:\\Program Files(x86)\" - both requiring quoting to execute.\n\nLets add quotes and fix tha.\n\nReviewed By: vitaut\n\nDifferential Revision: D54433098\n\nfbshipit-source-id: d3570486a2a2b12f4649becc987f9da1ca65c796","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/c70c80d7a655549ba3a2554ad8b6c54e85d9fc54"},{"sha":"058c6fcb24db4852b6497294ef9e78dab5f1c037","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"add StringPiece::substr\n\nSummary: To get closer to `std::string_view` which has member `std::string_view::substr` and not `std::string_view::subpiece`, add `StringPiece::substr`.\n\nReviewed By: dmm-fb\n\nDifferential Revision: D54401483\n\nfbshipit-source-id: 5e264398bc1237185767e028d9013e58b4ec1faf","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/058c6fcb24db4852b6497294ef9e78dab5f1c037"},{"sha":"af52134cf9aef941274d4bacedbefca9e59d08b9","author":{"email":"zeyi@meta.com","name":"Zeyi (Rice) Fan"},"message":"modernize Python packaging for pywatchman\n\nSummary:\nX-link: https://github.com/facebookincubator/zstrong/pull/721\n\nMostly following practice in: https://packaging.python.org/en/latest/tutorials/packaging-projects/\n\nSwitching pywatchman to be built with PEP517. After this we can publish new pywatchman packages to PyPI continuously.\n\nReviewed By: jdelliot\n\nDifferential Revision: D54343676\n\nfbshipit-source-id: 48a4538db4176662b8af189538dae32b9289d712","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/af52134cf9aef941274d4bacedbefca9e59d08b9"},{"sha":"5be0ebc14bed51557c1458f6a681162d604e0d73","author":{"email":"andrii@meta.com","name":"Andrii Grynenko"},"message":"Fix coro::Task co_yield destroying locals on a different executor\n\nSummary:\nIf a normal result is returned (co_return) or exception is thrown (throw) all the locals (e.g. guard) are destroyed before final_suspend coroutine is awaited.\nIf co_yield is called, all the locals are not destroyed before final_suspend coroutine is awaited (since final_suspend is called inline from co_yield), and they will only be destroyed when the coroutine frame gets destroyed.\nThe coroutine frame destruction happens from within an Awaiter (which is owned by whoever started the coroutine), when the result is extracted from that Awaiter (which may happen on a different thread).\n\nGiven the widespread usage of co_yield co_error/co_result, we have to make this pattern safe. This diff injects an additional coroutine whenever TaskWithExecutor is awaited from another Task to make sure that all the locals from the TaskWithExecutors are guaranteed to be destroyed on the correct executor. This will be a performance regression, but correctness is more important here.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D54130736\n\nfbshipit-source-id: b1a737dcac3f7e2370fb6f0bebac55aaa57cb8d6","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/5be0ebc14bed51557c1458f6a681162d604e0d73"},{"sha":"999a54ed0eff2d6b8f57901483e8b8a582f5a57e","author":{"email":"amethyst@meta.com","name":"Amethyst Reese"},"message":"apply Black 2024 style in fbcode (5/16)\n\nSummary:\nFormats the covered files with pyfmt.\n\npaintitblack\n\nReviewed By: aleivag\n\nDifferential Revision: D54447730\n\nfbshipit-source-id: 85ed104b2f8f5e26ae0dea9ee17392ecad8b9407","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/999a54ed0eff2d6b8f57901483e8b8a582f5a57e"},{"sha":"080d2a3b8229d80a93766899242e55b07bcabad1","author":{"email":"amethyst@meta.com","name":"Amethyst Reese"},"message":"apply Black 2024 style in fbcode (8/16)\n\nSummary:\nFormats the covered files with pyfmt.\n\npaintitblack\n\nReviewed By: aleivag\n\nDifferential Revision: D54447737\n\nfbshipit-source-id: 6c05d7941c6b4f1787b8da6cf810693f48a96c4e","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/080d2a3b8229d80a93766899242e55b07bcabad1"},{"sha":"49b252e64faaf89354df1270ac7691f876e39a67","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"cut lock_storage\n\nSummary: The storage detail base-class was oroginally split out to support MSVC 2017, which incorrectly failed the compile. But let us now assume a baseline of MSVC 2019.\n\nReviewed By: luciang\n\nDifferential Revision: D53543842\n\nfbshipit-source-id: 3ee8b65180b6d48daaa0e1f6ffab848b2c83acbb","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/49b252e64faaf89354df1270ac7691f876e39a67"},{"sha":"9b0fb7e1980e0824d0d2be8c7aa3a5fb4822a868","author":{"email":"generatedunixname89002005287564@meta.com","name":"generatedunixname89002005287564"},"message":"Pyre Configurationless migration for] [batch:45/244]\n\nReviewed By: connernilsen\n\nDifferential Revision: D54470813\n\nfbshipit-source-id: cf2bdc1e8053cbc8fcbb882818adbac02cd24405","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/9b0fb7e1980e0824d0d2be8c7aa3a5fb4822a868"},{"sha":"a8b223d43561aeb7c99c0fa18bcee0abbf19d8f4","author":{"email":"connernilsen@meta.com","name":"Conner Nilsen"},"message":"Pyre Configurationless migration for] [batch:88/244] (#723)\n\nSummary: Pull Request resolved: https://github.com/facebookincubator/zstrong/pull/723\n\nReviewed By: grievejia\n\nDifferential Revision: D54471437\n\nfbshipit-source-id: bc644553e31464ceb632034e4ce3f05ba30fbbcd","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/a8b223d43561aeb7c99c0fa18bcee0abbf19d8f4"},{"sha":"f646f958c782bc8dcd78faae49df42ef267d264b","author":{"email":"xiaofeidu@meta.com","name":"Xiaofei Du"},"message":"Delete an unnecessary function call\n\nSummary: see title\n\nReviewed By: dmm-fb\n\nDifferential Revision: D54516810\n\nfbshipit-source-id: b720c0bded208a6d52b668038e8ecd450bdc086c","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/f646f958c782bc8dcd78faae49df42ef267d264b"},{"sha":"0561b260d7a2a8641d2e27b80a0b78de47f629f3","author":{"email":"gargn@meta.com","name":"Nitin Garg"},"message":"kUseThreadLocal use in StaticMetaBase is prone to bug introduction.\n\nSummary:\nSee diff D53882742 which shows use of kUseThreadLocal is prone to buggy\nchanges. Adjust the logic to make it safe to more complex types in ThreadEntry.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D53882743\n\nfbshipit-source-id: 90ad5b17cfceeaca4d134bb94c9d656f433ad068","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/0561b260d7a2a8641d2e27b80a0b78de47f629f3"},{"sha":"7f6426fa24fc0c8712856844ff97c4604ff56df6","author":{"email":"liuyaoxin@bytedance.com","name":"liuyaoxin"},"message":"Fix a broken download link of xz (#2153)\n\nSummary:\nThe old download link [xz-5.2.5.tar.gz](https://tukaani.org/xz/xz-5.2.5.tar.gz) is broken, so replace it with a more stable one [xz-5.6.0.tar.gz](https://github.com/tukaani-project/xz/releases/download/v5.6.0/xz-5.6.0.tar.gz).\n\nPull Request resolved: https://github.com/facebook/folly/pull/2153\n\nReviewed By: Gownta\n\nDifferential Revision: D54324964\n\nPulled By: Orvid\n\nfbshipit-source-id: 7ab62323827d724d415bd61c59bf179518a47086","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/7f6426fa24fc0c8712856844ff97c4604ff56df6"},{"sha":"7182612f946d764089bc8112d3842c0e94e3f58d","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"add StringKeyedMap::try_emplace\n\nSummary: Add `StringKeyedMap::try_emplace` like `StringKeyedMap::emplace`, etc., now that C++17 ships `std::map::try_emplace`.\n\nReviewed By: dmm-fb\n\nDifferential Revision: D54417728\n\nfbshipit-source-id: 84453da683350059f1d080ce6e170cb2290fb5a0","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/7182612f946d764089bc8112d3842c0e94e3f58d"},{"sha":"8676c7b396e07753e84d208c80aae0bed8791c58","author":{"email":"mkatsev@meta.com","name":"Max Katsev"},"message":"Make folly::coro::merge() isolate RequestContext state of child tasks.\n\nSummary: Restore original RequestContext before starting the next task.\n\nReviewed By: andriigrynenko\n\nDifferential Revision: D54419917\n\nfbshipit-source-id: cde85128da62f8c2a4af7ac21f2d3e0cc886418e","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/8676c7b396e07753e84d208c80aae0bed8791c58"},{"sha":"0b960cfee6ad20a7d830ed16a59beb64cd4ba26d","author":{"email":"generatedunixname89002005287564@meta.com","name":"generatedunixname89002005287564"},"message":"Fix includes] fbcode/folly\n\nReviewed By: Orvid\n\nDifferential Revision: D54575219\n\nfbshipit-source-id: 01c1e502aab548b6b8fac32abbb3a147b23bbbb6","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/0b960cfee6ad20a7d830ed16a59beb64cd4ba26d"},{"sha":"4aeca3a9fb13bee2c3d4f59fdf529d1d82dfe50a","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"revise StringKeyedSet, StringKeyedMap\n\nSummary: Now that `std::set` and `std::map` support heterogeneous lookup with transparent key-compare functions, and now that `std::less<void>` is a canonical transparent key-compare function, just make `StringKeyedSet` an alias to `std::set` with key-compare `std::less<void>` and `StringKeyedMap` an alias to `std::map` with key-compare `std::less<void>`.\n\nReviewed By: bcardosolopes\n\nDifferential Revision: D54420400\n\nfbshipit-source-id: 34c502036a16988cc5d55543cd4b18c94f971687","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/4aeca3a9fb13bee2c3d4f59fdf529d1d82dfe50a"},{"sha":"7cb0a057c749eece734855416a58c39cfe0da4b6","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"cut tests for string-keyed container aliases\n\nSummary: The types `StringKeyedSet`, `StringKeyedMap`, `StringKeyedUnorderedSet`, and `StringKeyedUnorderedMap` are all, currently, just aliases to other containers, and these other containers are all well-tested. There is no longer a need for a test-suite for these string-keyed container aliases.\n\nReviewed By: bcardosolopes\n\nDifferential Revision: D54588252\n\nfbshipit-source-id: a68de160cd2ecaf4946215d63875ae4672af4246","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/7cb0a057c749eece734855416a58c39cfe0da4b6"},{"sha":"81de68225d97dacb869e75c6595884a750d21949","author":{"email":"yfeldblum@meta.com","name":"Yedidya Feldblum"},"message":"cut string-keyed container aliases\n\nSummary: The `StringKeyed...` types are aliases to other containers in folly or the standard library, and these aliases are now unused. Remove them.\n\nReviewed By: bcardosolopes\n\nDifferential Revision: D54589328\n\nfbshipit-source-id: ff908bdec6a992427ef7efe8fa7d2431fb0232c3","distinct":false,"url":"https://api.github.com/repos/ahornby/folly/commits/81de68225d97dacb869e75c6595884a750d21949"}]},"public":true,"created_at":"2024-06-08T14:01:22Z"}
