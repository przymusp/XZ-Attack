{"id":"32381357252","type":"CommitCommentEvent","actor":{"id":69727,"login":"mstorsjo","display_login":"mstorsjo","gravatar_id":"","url":"https://api.github.com/users/mstorsjo","avatar_url":"https://avatars.githubusercontent.com/u/69727?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/comments/129365498","html_url":"https://github.com/tukaani-project/xz/commit/0570308ddd9c0e39e85597ebc0e31d4fc81d436f#commitcomment-129365498","id":129365498,"node_id":"CC_kwDOIQBEvs4HtfX6","user":{"login":"mstorsjo","id":69727,"node_id":"MDQ6VXNlcjY5NzI3","avatar_url":"https://avatars.githubusercontent.com/u/69727?v=4","gravatar_id":"","url":"https://api.github.com/users/mstorsjo","html_url":"https://github.com/mstorsjo","followers_url":"https://api.github.com/users/mstorsjo/followers","following_url":"https://api.github.com/users/mstorsjo/following{/other_user}","gists_url":"https://api.github.com/users/mstorsjo/gists{/gist_id}","starred_url":"https://api.github.com/users/mstorsjo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mstorsjo/subscriptions","organizations_url":"https://api.github.com/users/mstorsjo/orgs","repos_url":"https://api.github.com/users/mstorsjo/repos","events_url":"https://api.github.com/users/mstorsjo/events{/privacy}","received_events_url":"https://api.github.com/users/mstorsjo/received_events","type":"User","site_admin":false},"position":null,"line":null,"path":null,"commit_id":"0570308ddd9c0e39e85597ebc0e31d4fc81d436f","created_at":"2023-10-06T20:34:05Z","updated_at":"2023-10-06T20:34:05Z","author_association":"NONE","body":"> > I'm not entirely 100% sure here, but I think MINGW OR CYGWIN might be the right thing; cygwin in general doesn't set WIN32 I think, as it's mostly considered unixy.\r\n> \r\n> It's unfortunate that it's not documented very clearly but it seems that [you are right](https://gitlab.kitware.com/cmake/cmake/-/commit/a429e4b9b1a56470c6c119a077910d2f090c21d0). So perhaps the CMake-based build has been broken on Cygwin for quite some time.\r\n> \r\n> (In C code, `_WIN32` is #defined on Cygwin, which slightly adds to the confusion.)\r\n\r\nActually, that doesn't match my experience (and I just rechecked just to be sure), AFAIK `_WIN32` isn't defined by the compiler in Cygwin. (And other than that, the basics are defined in a unixy way, like `sizeof(long) == sizeof(void*)`.)\r\n\r\n> Grepping the sources gave me a feeling that `MSYS` should be listed in addition to `CYGWIN` to cover MSYS and MSYS2.\r\n\r\nYep, that's probably true. (I wonder if the MSYS environment defines `CYGWIN` as well - I'm too lazy to check right now.) Overall very few programs care about how they work in MSYS as they primarily should be built for mingw instead. But I'm sure xz is relevant to have available in all environments.\r\n\r\n> I have committed a fix to master. Thanks!\r\n\r\nThanks!\r\n\r\n> Soname differences are hard to avoid with Libtool vs. anything else on certain platforms.\r\n\r\nYep; for one project that I maintain, I spent some extra effort in CMake to try to match the sonames that are produced with libtool closely.\r\n\r\n> I wonder if not supporting Meson is a problem in the long term. I have seen one or two quickly-written files for building liblzma with Meson which work for x86-64 and maybe something else but can be suboptimal or maybe even subtly broken in some other cases. Maybe it's just the way things are, upstreams cannot worry about everything.\r\n\r\nI've actually been faced with that decision as well.\r\n\r\nFor http://github.com/mstorsjo/fdk-aac, where I already have autotools and CMake, I got a PR to add Meson. Out of principle, I didn't want to merge it - it doesn't give any extra platform support over autotools and CMake. And if I'd do it, I'd want to spend the same level of effort as for CMake, making it match the autotools build both wrt soname and functionality across the main platforms. But even if I didn't merge it, the incomplete/unverified/possibly subtly incompatible Meson file lives on elsewhere in their wrapdb, unmaintained by me, used by some other Meson projects. So if I'd like to make sure it works properly, I guess I should take on the maintainance of that as well.\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/comments/129365498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}}},"public":true,"created_at":"2023-10-06T20:34:05Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
