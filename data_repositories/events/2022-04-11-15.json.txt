{"id":"21226159299","type":"PushEvent","actor":{"id":79421,"login":"maniac","display_login":"maniac","gravatar_id":"","url":"https://api.github.com/users/maniac","avatar_url":"https://avatars.githubusercontent.com/u/79421?"},"repo":{"id":345857619,"name":"maniac/libarchive","url":"https://api.github.com/repos/maniac/libarchive"},"payload":{"push_id":9596001235,"size":165,"distinct_size":9,"ref":"refs/heads/master","head":"042956b1b828d57f142f36ae8f27519c7700bb71","before":"dc321febde83dd0f31158e1be61a7aedda65e7a2","commits":[{"sha":"7befaaf3c3e52bce6d92b01759bb13bf5b4e2349","author":{"email":"kidandcat@gmail.com","name":"Jairo"},"message":"Windows support","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/7befaaf3c3e52bce6d92b01759bb13bf5b4e2349"},{"sha":"af8db99768722348ff1525260e91c6ed2181600c","author":{"email":"Alexander.Richardson@cl.cam.ac.uk","name":"Alex Richardson"},"message":"Reduce test_write_format_7zip_large_lzma1 buffer size\n\nSome of the test_write_format_7zip_large take longer than 10 minutes to\nrun on QEMU-RISC-V and therefore time out when run as part of the FreeBSD\ntest suite. This is even more noticeable when running on a CHERI-enabled\nQEMU since the emulation of tagged memory makes it run slower.\n\nOn my local machine the impact is not as extreme, but\ntest_write_format_7zip_large_lzma1 takes 375ms when TEST_SLOW_HOST is set\nand 8.2 seconds normally (i.e. 22 times slower).\n\nThe other alternative would be to skip these tests when not running on\nreal hardware, but it seems to me that compressing a smaller amount of\nrandom data is preferable.","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/af8db99768722348ff1525260e91c6ed2181600c"},{"sha":"b0ad184f6aea44e4a4d35487ccfc529eea3f5c6b","author":{"email":"81214276+jo620kix@users.noreply.github.com","name":"jo620kix"},"message":"ZIP reader: added support for Zstd decompression","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/b0ad184f6aea44e4a4d35487ccfc529eea3f5c6b"},{"sha":"9dee6275b9400617bf400f4d485cb69b9003631f","author":{"email":"81214276+jo620kix@users.noreply.github.com","name":"jo620kix"},"message":"Add offset variable to zip_read_data_zipx_zstd","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/9dee6275b9400617bf400f4d485cb69b9003631f"},{"sha":"4c29c07bd709587906459963e44523f067020edc","author":{"email":"IohannRabeson@users.noreply.github.com","name":"IohannRabeson"},"message":"Make all the implicit cast explicit.\n\nTo prevent conversion warning preventing to build on Windows.","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/4c29c07bd709587906459963e44523f067020edc"},{"sha":"01a2d329dfc71741892e2b590cf9fb25092474a0","author":{"email":"legnaleurc@gmail.com","name":"Wei-Cheng Pan"},"message":"support rar filters","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/01a2d329dfc71741892e2b590cf9fb25092474a0"},{"sha":"0f744f4e13721edf202f55bee73c73b267418d34","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"added missing checks for canLzip, canLzma, and canXz","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/0f744f4e13721edf202f55bee73c73b267418d34"},{"sha":"2684fcbba3ef77093fa21fe3f2eab7a3eadbfb86","author":{"email":"legnaleurc@gmail.com","name":"Wei-Cheng Pan"},"message":"add test","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/2684fcbba3ef77093fa21fe3f2eab7a3eadbfb86"},{"sha":"7c20f946d4a328bd73710be81b56537fb5b813a2","author":{"email":"joerg@bec.de","name":"Joerg Sonnenberger"},"message":"Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/7c20f946d4a328bd73710be81b56537fb5b813a2"},{"sha":"fc4aa72c9bda58931a03ece04841ef4064be8a45","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Added all exported but undocumented functions to man pages","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/fc4aa72c9bda58931a03ece04841ef4064be8a45"},{"sha":"d9acf3977948dbb3bf27b0f70b0ac476fc7ca448","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Removed unused function.","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/d9acf3977948dbb3bf27b0f70b0ac476fc7ca448"},{"sha":"54d2b66049cd25d60f84047c454b920702918cae","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Added bin folder to .gitignore","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/54d2b66049cd25d60f84047c454b920702918cae"},{"sha":"7c4825282663214ca7350dd87df0d813a396943e","author":{"email":"jfranklin13@protonmail.com","name":"JFranklin13"},"message":"Add support for rar5 sfx files","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/7c4825282663214ca7350dd87df0d813a396943e"},{"sha":"de366679572305bfa6c470c74af46c63f437192e","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Only use deflate when size is not set if the user did not specify a compression algorithm","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/de366679572305bfa6c470c74af46c63f437192e"},{"sha":"3ae7fb0ebdba8bcc3f36ca62b13526edc347f2d4","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Added test for writing an zip file without entry size and no compression","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/3ae7fb0ebdba8bcc3f36ca62b13526edc347f2d4"},{"sha":"dd98b0ba6ac7fdd9b961f51a0f74bd15d4d97669","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Added assertions for folder","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/dd98b0ba6ac7fdd9b961f51a0f74bd15d4d97669"},{"sha":"379769d04ea4abbb9cce50a16a4f2eec407170e3","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Added new test to cmake lists","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/379769d04ea4abbb9cce50a16a4f2eec407170e3"},{"sha":"1cfb5eaa5378878c132646b8654643ea7d05d0f0","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Added copyright to new test file.","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/1cfb5eaa5378878c132646b8654643ea7d05d0f0"},{"sha":"eecf295089c344a5003980acfc9330ca4240a2cb","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Adding test to Makefile.am","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/eecf295089c344a5003980acfc9330ca4240a2cb"},{"sha":"c53d2786d68f99ba149680b7e9d5ec6d59a87131","author":{"email":"emil.l.velikov@gmail.com","name":"Emil Velikov"},"message":"mtree reader: return early, remove fallthrough chain\n\nRemove the excessive fallthrough chain in parse_keyword(). Even though\nit is in the else/error path, there is no point in comparing the key\nanother dozen (or more) times when we know it will fail.\n\nJust use an early return (OK) or break respectively.\n\nSigned-off-by: Emil Velikov <emil.l.velikov@gmail.com>","distinct":false,"url":"https://api.github.com/repos/maniac/libarchive/commits/c53d2786d68f99ba149680b7e9d5ec6d59a87131"}]},"public":true,"created_at":"2022-04-11T15:50:51Z"}
