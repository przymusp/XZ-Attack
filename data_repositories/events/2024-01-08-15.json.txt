{"id":"34652923599","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":16549373469,"size":18,"distinct_size":8,"ref":"refs/heads/riscv_filter","head":"5c9e88cebce84789922cc8c2a137c6d7da6bbfc5","before":"888d752ae0bd399eb9e716a0029218692badd1e7","commits":[{"sha":"b34b6a9912d6165e34ba0db151b7f9941d2e06d5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Initialize lzma_lz_encoder pointers with NULL.\n\nThis fixes the recent change to lzma_lz_encoder that used memzero\ninstead of the NULL constant. On some compilers the NULL constant\n(always 0) may not equal the NULL pointer (this only needs to guarentee\nto not point to valid memory address).\n\nLater code compares the pointers to the NULL pointer so we must\ninitialize them with the NULL pointer instead of 0 to guarentee\ncode correctness.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b34b6a9912d6165e34ba0db151b7f9941d2e06d5"},{"sha":"d74fb5f060b76db709b50f5fd37490394e52f975","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xzdec: Add sandbox support for Pledge, Capsicum, and Landlock.\n\nA very strict sandbox is used when the last file is decompressed. The\nlikely most common use case of xzdec is to decompress a single file.\nThe Pledge sandbox is applied to the entire process with slightly more\nrelaxed promises, until the last file is processed.\n\nThanks to Christian Weisgerber for the initial patch adding Pledge\nsandboxing.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d74fb5f060b76db709b50f5fd37490394e52f975"},{"sha":"5feb09266fd2928ec0a4dcb98c1dc7f053111316","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Allow sandbox to be configured for just xzdec.\n\nIf xz is disabled, then xzdec can still use the sandbox.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5feb09266fd2928ec0a4dcb98c1dc7f053111316"},{"sha":"ebddf20214143a8e002ab897e95e880bb4c5ac44","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Move sandbox detection outside of xz section.\n\nThe sandbox is now enabled for xzdec as well, so it no longer belongs\nin just the xz section. xz and xzdec are always built, except for older\nMSVC versions, so there isn't a need to conditionally show the sandbox\nconfiguration. CMake will do a little unecessary work on older MSVC\nversions that can't build xz or xzdec, but this is a very small\ndownside.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ebddf20214143a8e002ab897e95e880bb4c5ac44"},{"sha":"4e1c695676bafbaecc9fb307f6ee94138ae72c12","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Update --enable-sandbox option in INSTALL.\n\nxzdec now also uses the sandbox when its configured.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4e1c695676bafbaecc9fb307f6ee94138ae72c12"},{"sha":"710cbc186cad0ac601c38bd6bf31167648a5581e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Add a comment to Capsicum sandbox setup.\n\nThis comment is repeated in xzdec.c to help remind us why all the\ncapabilities are removed from stdin in certain situations.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/710cbc186cad0ac601c38bd6bf31167648a5581e"},{"sha":"133c5851eb917c6d99d0b623c1689c8518e65f38","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the French translation.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/133c5851eb917c6d99d0b623c1689c8518e65f38"},{"sha":"12c90c00f05e19da3c0c91d8cd8e0d0d45965606","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Check also for __clang__ in memcmplen.h.\n\nThis change hopefully makes no practical difference as Clang\nlikely was detected via __GNUC__ or _MSC_VER already.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/12c90c00f05e19da3c0c91d8cd8e0d0d45965606"},{"sha":"cd64dd70d5665b6048829c45772d08606f44672e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Use 8-byte method in memcmplen.h on ARM64.\n\nIt requires fast unaligned access to 64-bit integers\nand a fast instruction to count leading zeros in\na 64-bit integer (__builtin_ctzll()). This perhaps\nshould be enabled on some other archs too.\n\nThanks to Chenxi Mao for the original patch:\nhttps://github.com/tukaani-project/xz/pull/75 (the first commit)\nAccording to the numbers there, this may improve encoding\nspeed by about 3-5 %.\n\nThis enables the 8-byte method on MSVC ARM64 too which\nshould work but wasn't tested.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cd64dd70d5665b6048829c45772d08606f44672e"},{"sha":"15cf3f04f270d707a5c91cc0208b23b6db42b774","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/15cf3f04f270d707a5c91cc0208b23b6db42b774"},{"sha":"69aa9d61772d98ed0d20d41ffe5ec9d250c52860","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add RISC-V BCJ filter.\n\nThe new Filter ID is 0x0B.\n\nThanks to Chien Wong <m@xv97.com> for the initial version of the Filter,\nthe xz CLI updates, and the Autotools build system modifications.\n\nThanks to Igor Pavlov for his many contributions to the design of\nthe filter.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/69aa9d61772d98ed0d20d41ffe5ec9d250c52860"},{"sha":"f6dec60b37ffaa069ca6c4edb080e7a0e90d8e0f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Support RISC-V BCJ Filter for encoding and decoding.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f6dec60b37ffaa069ca6c4edb080e7a0e90d8e0f"},{"sha":"32ee5f536e806a16b6746edd179c052b01a5127b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update string_conversion.c to support RISC-V Filter.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/32ee5f536e806a16b6746edd179c052b01a5127b"},{"sha":"93a5825d674f6229657ccac48744e27cf0214d22","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Add RISC-V Filter test in test_compress.sh.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/93a5825d674f6229657ccac48744e27cf0214d22"},{"sha":"4f8c4ebe832f28b762d80d7fccd5ab1b85526481","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Update the man page for the RISC-V Filter.\n\nA special note was added to suggest using four-byte alignment when the\ncompressed instruction extension is not present in a RISC-V binary.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4f8c4ebe832f28b762d80d7fccd5ab1b85526481"},{"sha":"e517d9fe5b53fcc9c9c394e1f89ae4d8847930b4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Update message in --long-help for RISC-V Filter.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e517d9fe5b53fcc9c9c394e1f89ae4d8847930b4"},{"sha":"b617a85b810baf60dd08aabf7519774cd677ce2f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Add two RISC-V Filter test files.\n\nThese test files achieve 100% code coverage in\nsrc/liblzma/simple/riscv.c. They contain all of the instructions that\nshould be filtered and a few cases that should not.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b617a85b810baf60dd08aabf7519774cd677ce2f"},{"sha":"5c9e88cebce84789922cc8c2a137c6d7da6bbfc5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Update xz -lvv for RISC-V filter.\n\nVersion 5.6.0 will be shown, even though upcoming alphas and betas\nwill be able to support this filter. 5.6.0 looks nicer in the output and\npeople shouldn't be encouraged to use an unstable version in production\nin any way.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5c9e88cebce84789922cc8c2a137c6d7da6bbfc5"}]},"public":true,"created_at":"2024-01-08T15:11:40Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
