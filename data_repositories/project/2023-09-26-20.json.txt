{"id":"32123378593","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15191927938,"size":27,"distinct_size":2,"ref":"refs/heads/tuklib_integer_memcpy","head":"dd0804b25915b6b20284b6db889c313bc2e947c3","before":"91bb59bd79f8d2a751ba2ce74fb579507caee2ba","commits":[{"sha":"9834e591a4cf9dc2f49e42e26bf28d1d247bc196","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Copy new header files from Gnulib without modification.\n\nThe getopt related files have changed from Gnulib by splitting up\ngetopt.in.h into more modular header files. We could have kept\neverything in just getopt.in.h, but this will help us continue to update\nin the future.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9834e591a4cf9dc2f49e42e26bf28d1d247bc196"},{"sha":"56b42be7287844db20b3a3bc1372c6ae8c040d63","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Add getopt-cdefs.h for getopt_long update.\n\nThis was modified slightly from Gnulib. In Gnulib, it expects the\n@HAVE_SYS_CDEFS_H@ to be replaced. Instead, we can set HAVE_SYS_CDEFS_H\non systems that have it and avoid copying another file into the build\ndirectory. Since we are not using gnulib-tool, copying extra files\nrequires extra build system updates (and special handling with CMake) so\nwe should avoid when possible.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/56b42be7287844db20b3a3bc1372c6ae8c040d63"},{"sha":"04bd86a4b010d43c6a016a3857ecb38dc1d5b024","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt.c from Gnulib with modifications.\n\nThe code maintains the prior modifications of conditionally including\nconfig.h and disabling NLS support.\n\n_GL_UNUSED is repalced with the simple cast to void trick. _GL_UNUSED\nis only used for these two parameters so its simpler than having to\ndefine it.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/04bd86a4b010d43c6a016a3857ecb38dc1d5b024"},{"sha":"cff05f82066ca3ce9425dafdb086325a8eef8de3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt_int.h from Gnulib.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cff05f82066ca3ce9425dafdb086325a8eef8de3"},{"sha":"7e884c00d0093c38339f17fb1d280eec493f42ca","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt.in.h from Gnulib with modifications.\n\nWe can still avoid modifying the contents of this file during\nconfiguration to simplify the build systems. Gnulib added replacements\nfor inclusions guards for Cygwin. Cygwin should not need getopt_long\nreplacement so this feature can be omitted.\n\n<unistd.h> is conditionally included to avoid MSVC since it is not\navailable.\n\nThe definition for _GL_ARG_NONNULL was also copied into this file from\nGnulib since this stage is usually done during gnulib-tool.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7e884c00d0093c38339f17fb1d280eec493f42ca"},{"sha":"52bf644bdf536e20fcc743b712cede135e05eec5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt1.c from Gnulib.\n\nThe only difference was maintaining the conditional inclusion for\nconfig.h.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/52bf644bdf536e20fcc743b712cede135e05eec5"},{"sha":"d34558388fe1d8929f6478d61dc322eb4f2900af","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update Makefile.am for new header files.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d34558388fe1d8929f6478d61dc322eb4f2900af"},{"sha":"01804a0b4b64e0f33568e947e0579263808c59d3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Update libgnu target with new header files.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/01804a0b4b64e0f33568e947e0579263808c59d3"},{"sha":"84808b68f1075e8603a8ef95d361a61fdc6a5b10","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add /lib to include path.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/84808b68f1075e8603a8ef95d361a61fdc6a5b10"},{"sha":"a6234f677d66888f435010bc0b67de6a32fefcf6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Update getopt.m4 from Gnulib.\n\nThis file was modified from upstream since we do not need to replace\ngetopt() and can avoid complexity and feature tests.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a6234f677d66888f435010bc0b67de6a32fefcf6"},{"sha":"db17656721e43939bfa4ec13506e7c76f4b86da6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Silence -Wsign-conversion in getopt.c.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/db17656721e43939bfa4ec13506e7c76f4b86da6"},{"sha":"ce162db07f03495bd333696e66883c8f36abdc1e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Change quoting style from `...' to '...'.\n\nThese days the ` and ' do not look symmetric. This quoting style has\nbeen changed in various apps over the years including the GNU tools.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ce162db07f03495bd333696e66883c8f36abdc1e"},{"sha":"be012b8097a4eaee335b51357d6befa745f753ce","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Change quoting style from `...' to '...'.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/be012b8097a4eaee335b51357d6befa745f753ce"},{"sha":"f6667702bf075a05fbe336dbf3576ad1a82ec645","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Change quoting style from `...' to '...'.\n\nThis was done for both internal and API headers.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f6667702bf075a05fbe336dbf3576ad1a82ec645"},{"sha":"eaebdef4d4de3c088b0905f42626b74e0d23abf3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Change quoting style from `...' to '...'.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/eaebdef4d4de3c088b0905f42626b74e0d23abf3"},{"sha":"9fb5de41f2fb654ca952d4bda15cf3777c2b720f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Scripts: Change quoting style from `...' to '...'.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9fb5de41f2fb654ca952d4bda15cf3777c2b720f"},{"sha":"d265f6b75691c6c8fa876eb5320c3ff5aed17dfa","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Remove /lib from tests include path.\n\nThe tests never included anything from /lib, so this was not needed.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d265f6b75691c6c8fa876eb5320c3ff5aed17dfa"},{"sha":"bbb42412da6a02705ba3e668e90840c2683e4e67","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Remove Gnulib dependency from tests.\n\nThe tests do not use any Gnulib replacements so they do not need to link\nlibgnu.a or have /lib in the include path.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bbb42412da6a02705ba3e668e90840c2683e4e67"},{"sha":"519e47c2818acde571fadc79551294527fe6cc22","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Remove accidental extra newline.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/519e47c2818acde571fadc79551294527fe6cc22"},{"sha":"9f1444a8a5c0e724b2c7ef83424f642f07a95982","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Silence two Autoconf warnings.\n\nThere were two uses of AC_COMPILE_IFELSE that didn't use\nAC_LANG_SOURCE and Autoconf warned about these. The omission\nhad been intentional but it turned out that this didn't do\nwhat I thought it would.\n\nAutoconf 2.71 manual gives an impression that AC_LANG_SOURCE\ninserts all #defines that have been made with AC_DEFINE so\nfar (confdefs.h). The idea was that omitting AC_LANG_SOURCE\nwould mean that only the exact code included in the\nAC_COMPILE_IFELSE call would be compiled.\n\nWith C programs this is not true: the #defines get added without\nAC_LANG_SOURCE too. There seems to be no neat way to avoid this.\nThus, with the C language at least, adding AC_LANG_SOURCE makes\nno other difference than silencing a warning from Autoconf. The\ngenerated \"configure\" remains identical. (Docs of AC_LANG_CONFTEST\nsay that the #defines have been inserted since Autoconf 2.63b and\nthat AC_COMPILE_IFELSE uses AC_LANG_CONFTEST. So the behavior is\ndocumented if one also reads the docs of macros that one isn't\ncalling directly.)\n\nAny extra code, including #defines, can cause problems for\nthese two tests because these tests must use -Werror.\nCC=clang CFLAGS=-Weverything is the most extreme example.\nIt enables -Wreserved-macro-identifier which warns about\n#define __EXTENSIONS__ 1 because it begins with two underscores.\nIt's possible to write a test file that passes -Weverything but\nit becomes impossible when Autoconf inserts confdefs.h.\n\nSo this commit adds AC_LANG_SOURCE to silence Autoconf warnings.\nA different solution is needed for -Werror tests.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9f1444a8a5c0e724b2c7ef83424f642f07a95982"}]},"public":true,"created_at":"2023-09-26T20:17:39Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32123378675","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15191927977,"size":31,"distinct_size":6,"ref":"refs/heads/clock_gettime","head":"6bcd7ba9fa352036dafa2720883214dad3f9b059","before":"43e3f6a975889b6c047aac49d63ccbfe5ade4342","commits":[{"sha":"9834e591a4cf9dc2f49e42e26bf28d1d247bc196","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Copy new header files from Gnulib without modification.\n\nThe getopt related files have changed from Gnulib by splitting up\ngetopt.in.h into more modular header files. We could have kept\neverything in just getopt.in.h, but this will help us continue to update\nin the future.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9834e591a4cf9dc2f49e42e26bf28d1d247bc196"},{"sha":"56b42be7287844db20b3a3bc1372c6ae8c040d63","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Add getopt-cdefs.h for getopt_long update.\n\nThis was modified slightly from Gnulib. In Gnulib, it expects the\n@HAVE_SYS_CDEFS_H@ to be replaced. Instead, we can set HAVE_SYS_CDEFS_H\non systems that have it and avoid copying another file into the build\ndirectory. Since we are not using gnulib-tool, copying extra files\nrequires extra build system updates (and special handling with CMake) so\nwe should avoid when possible.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/56b42be7287844db20b3a3bc1372c6ae8c040d63"},{"sha":"04bd86a4b010d43c6a016a3857ecb38dc1d5b024","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt.c from Gnulib with modifications.\n\nThe code maintains the prior modifications of conditionally including\nconfig.h and disabling NLS support.\n\n_GL_UNUSED is repalced with the simple cast to void trick. _GL_UNUSED\nis only used for these two parameters so its simpler than having to\ndefine it.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/04bd86a4b010d43c6a016a3857ecb38dc1d5b024"},{"sha":"cff05f82066ca3ce9425dafdb086325a8eef8de3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt_int.h from Gnulib.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cff05f82066ca3ce9425dafdb086325a8eef8de3"},{"sha":"7e884c00d0093c38339f17fb1d280eec493f42ca","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt.in.h from Gnulib with modifications.\n\nWe can still avoid modifying the contents of this file during\nconfiguration to simplify the build systems. Gnulib added replacements\nfor inclusions guards for Cygwin. Cygwin should not need getopt_long\nreplacement so this feature can be omitted.\n\n<unistd.h> is conditionally included to avoid MSVC since it is not\navailable.\n\nThe definition for _GL_ARG_NONNULL was also copied into this file from\nGnulib since this stage is usually done during gnulib-tool.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7e884c00d0093c38339f17fb1d280eec493f42ca"},{"sha":"52bf644bdf536e20fcc743b712cede135e05eec5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update getopt1.c from Gnulib.\n\nThe only difference was maintaining the conditional inclusion for\nconfig.h.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/52bf644bdf536e20fcc743b712cede135e05eec5"},{"sha":"d34558388fe1d8929f6478d61dc322eb4f2900af","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Update Makefile.am for new header files.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d34558388fe1d8929f6478d61dc322eb4f2900af"},{"sha":"01804a0b4b64e0f33568e947e0579263808c59d3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Update libgnu target with new header files.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/01804a0b4b64e0f33568e947e0579263808c59d3"},{"sha":"84808b68f1075e8603a8ef95d361a61fdc6a5b10","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add /lib to include path.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/84808b68f1075e8603a8ef95d361a61fdc6a5b10"},{"sha":"a6234f677d66888f435010bc0b67de6a32fefcf6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Update getopt.m4 from Gnulib.\n\nThis file was modified from upstream since we do not need to replace\ngetopt() and can avoid complexity and feature tests.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a6234f677d66888f435010bc0b67de6a32fefcf6"},{"sha":"db17656721e43939bfa4ec13506e7c76f4b86da6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"lib: Silence -Wsign-conversion in getopt.c.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/db17656721e43939bfa4ec13506e7c76f4b86da6"},{"sha":"ce162db07f03495bd333696e66883c8f36abdc1e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Change quoting style from `...' to '...'.\n\nThese days the ` and ' do not look symmetric. This quoting style has\nbeen changed in various apps over the years including the GNU tools.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ce162db07f03495bd333696e66883c8f36abdc1e"},{"sha":"be012b8097a4eaee335b51357d6befa745f753ce","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Change quoting style from `...' to '...'.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/be012b8097a4eaee335b51357d6befa745f753ce"},{"sha":"f6667702bf075a05fbe336dbf3576ad1a82ec645","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Change quoting style from `...' to '...'.\n\nThis was done for both internal and API headers.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f6667702bf075a05fbe336dbf3576ad1a82ec645"},{"sha":"eaebdef4d4de3c088b0905f42626b74e0d23abf3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Change quoting style from `...' to '...'.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/eaebdef4d4de3c088b0905f42626b74e0d23abf3"},{"sha":"9fb5de41f2fb654ca952d4bda15cf3777c2b720f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Scripts: Change quoting style from `...' to '...'.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9fb5de41f2fb654ca952d4bda15cf3777c2b720f"},{"sha":"d265f6b75691c6c8fa876eb5320c3ff5aed17dfa","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Remove /lib from tests include path.\n\nThe tests never included anything from /lib, so this was not needed.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d265f6b75691c6c8fa876eb5320c3ff5aed17dfa"},{"sha":"bbb42412da6a02705ba3e668e90840c2683e4e67","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Remove Gnulib dependency from tests.\n\nThe tests do not use any Gnulib replacements so they do not need to link\nlibgnu.a or have /lib in the include path.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bbb42412da6a02705ba3e668e90840c2683e4e67"},{"sha":"519e47c2818acde571fadc79551294527fe6cc22","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Remove accidental extra newline.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/519e47c2818acde571fadc79551294527fe6cc22"},{"sha":"9f1444a8a5c0e724b2c7ef83424f642f07a95982","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Silence two Autoconf warnings.\n\nThere were two uses of AC_COMPILE_IFELSE that didn't use\nAC_LANG_SOURCE and Autoconf warned about these. The omission\nhad been intentional but it turned out that this didn't do\nwhat I thought it would.\n\nAutoconf 2.71 manual gives an impression that AC_LANG_SOURCE\ninserts all #defines that have been made with AC_DEFINE so\nfar (confdefs.h). The idea was that omitting AC_LANG_SOURCE\nwould mean that only the exact code included in the\nAC_COMPILE_IFELSE call would be compiled.\n\nWith C programs this is not true: the #defines get added without\nAC_LANG_SOURCE too. There seems to be no neat way to avoid this.\nThus, with the C language at least, adding AC_LANG_SOURCE makes\nno other difference than silencing a warning from Autoconf. The\ngenerated \"configure\" remains identical. (Docs of AC_LANG_CONFTEST\nsay that the #defines have been inserted since Autoconf 2.63b and\nthat AC_COMPILE_IFELSE uses AC_LANG_CONFTEST. So the behavior is\ndocumented if one also reads the docs of macros that one isn't\ncalling directly.)\n\nAny extra code, including #defines, can cause problems for\nthese two tests because these tests must use -Werror.\nCC=clang CFLAGS=-Weverything is the most extreme example.\nIt enables -Wreserved-macro-identifier which warns about\n#define __EXTENSIONS__ 1 because it begins with two underscores.\nIt's possible to write a test file that passes -Weverything but\nit becomes impossible when Autoconf inserts confdefs.h.\n\nSo this commit adds AC_LANG_SOURCE to silence Autoconf warnings.\nA different solution is needed for -Werror tests.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9f1444a8a5c0e724b2c7ef83424f642f07a95982"}]},"public":true,"created_at":"2023-09-26T20:17:39Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32123875567","type":"IssueCommentEvent","actor":{"id":133907478,"login":"hansjans162","display_login":"hansjans162","gravatar_id":"","url":"https://api.github.com/users/hansjans162","avatar_url":"https://avatars.githubusercontent.com/u/133907478?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/64","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/64/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/64/events","html_url":"https://github.com/tukaani-project/xz/pull/64","id":1912186475,"node_id":"PR_kwDOIQBEvs5bKUBN","number":64,"title":"Crc32 clmul","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-09-25T19:53:53Z","updated_at":"2023-09-26T20:40:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/64","html_url":"https://github.com/tukaani-project/xz/pull/64","diff_url":"https://github.com/tukaani-project/xz/pull/64.diff","patch_url":"https://github.com/tukaani-project/xz/pull/64.patch","merged_at":null},"body":"Added an implementation for crc32 that makes use of clmul.\r\nCode for this implementation was written by Ilya Kurdyukov and can be found here.\r\nhttps://github.com/ilyakurdyukov/crc-clmul-sim\r\n\r\nAlso refactored crc64_clmul to use the new macros created for crc32_clmul.\r\nAs well as moved similar functions to crc_clmul_common to eliminate duplicate code.\r\n\r\nI tested this on files doubling in size starting from 1 byte up to 1 Gigabyte.\r\nDuring testing I found that crc32_clmul can run up to 70% faster than crc32_generic,\r\nand has an average speed increase of 58.4% for sizes greater than 16 bytes.\r\n\r\nI also used this to test the reworked version of crc64_clmul.\r\nThis version of crc64_clmul is an average of 3.9% faster than the original implementation.\r\nThis speed increase is due to some inline assembly as well as changing around the order of some if statements. \r\n\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\ncrc32\\_fast currently only uses a generic implementation.\r\n\r\n\r\n## What is the new behavior?\r\nI added an implementation for crc32 that makes use of clmul in crc32_fast.c \r\nAlso refactored crc64_clmul implementation to use the same macros as crc32_clmul\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n## Other information\r\n\r\nHere is the output from both tests that gave me the statistics above.\r\n\r\nthe number of unique files tested on and the number of times the crc is run\r\ndecrease as the bytes get larger so the benchmark does not take too long.\r\n\r\nThe 64 and 32 spd+ show the percentage speed increase over the generic.\r\nThe percentage on the graph show the combined average for all types.\r\nFor example (50% is twice as fast, 200% is twice as slow)\r\n```\r\n64 generic: #\t\t64 clmul: +\r\n32 generic: =\t\t32 clmul: *\r\n\r\n#bytes, #files,   #crc's,  64spd+,  32spd+: 0%          50%          100%        150%         200%\r\n    16,  30000, 20648881,  39.96%,  24.24%: |           |      +*    | =    #    |            |\r\n    32,  30000, 12782640,  55.79%,  36.26%: |           |   +*       |  =        #            |\r\n    64,  30000,  7255012,  72.19%,  50.27%: |           +*           | =         |       #    |\r\n   128,  30000,  3890368,  82.53%,  69.13%: |       +*  |            |    =      |            |#\r\n   256,  30000,  2018311,  82.19%,  68.21%: |        +  |            |   =       |            |#\r\n   512,  30000,  1028488,  79.37%,  63.75%: |         + |            |  =        |            #\r\n    1K,  30000,   519217,  78.11%,  62.22%: |         + |            |   =       |           #|\r\n    2K,  30000,   260870,  76.74%,  61.71%: |          +|            |  =        |          # |\r\n    4K,  30000,   130752,  76.78%,  60.15%: |          +|            |  =        |          # |\r\n    8K,  30000,    65456,  76.24%,  60.59%: |          +|            |  =        |          # |\r\n   16K,  30000,    32748,  76.66%,  60.03%: |          +|            |  =        |          # |\r\n   32K,  30000,    16379,  76.78%,  60.04%: |          +|            |  =        |          # |\r\n   64K,  16384,     8190,  76.62%,  59.76%: |          +|            |  =        |          # |\r\n  128K,   8192,     4095,  76.52%,  59.71%: |          +|            |  =        |          # |\r\n  256K,   4096,     2047,  76.32%,  59.78%: |          +|            |  =        |          # |\r\n  512K,   2048,     1023,  84.70%,  60.09%: |        +  |         =  |           |            |       #\r\n    1M,   1024,      511,  76.71%,  60.29%: |          +|            |  =        |          # |\r\n    2M,    512,      255,  76.47%,  59.96%: |          +|            |  =        |          # |\r\n    4M,    256,      127,  76.42%,  60.03%: |          +|            |  =        |          # |\r\n    8M,    128,       63,  76.33%,  60.22%: |          +|            |  =        |          # |\r\n   16M,     64,       31,  76.55%,  60.23%: |          +|            |  =        |          # |\r\n   32M,     32,       15,  76.14%,  60.66%: |          +|            |  =        |          # |\r\n   64M,     16,       10,  76.53%,  59.99%: |          +|            |  =        |          # |\r\n  128M,      8,       10,  76.27%,  60.28%: |          +|            |  =        |          # |\r\n  256M,      4,       10,  76.42%,  59.96%: |          +|            |  =        |          # |\r\n  512M,      2,       10,  76.45%,  60.23%: |          +|            |  =        |          # |\r\n    1G,      1,       10,  76.64%,  60.19%: |          +|            |  =        |          # |\r\ntotal average:             75.13%,  58.44%\r\n\r\n```\r\n\r\n\r\nThe 64old and 64new spd+ show the percentage speed increase over the generic.\r\nThe percentage on the graph show the combined average for all types.\r\n```\r\n64 generic: #     64 clmul old: +     64 clmul new: *\r\n\r\n#bytes, #files,   #crc's, old64spd+, new64spd+: 0%          50%          100%        150%         200%\r\n     1,  30000, 48806446,  -97.328%,  -88.708%, |           | #          | * +       |            |\r\n     2,  30000, 44739242,  -57.943%,  -48.621%, |           |     #      |* +        |            |\r\n     4,  30000, 38347922,   -9.964%,   -4.811%, |           |          #*|+          |            |\r\n     8,  30000, 29826161,   -0.558%,    3.477%, |           |           *+           |            |\r\n    16,  30000, 20648881,   39.017%,   41.582%, |           |        +   |         # |            |\r\n    32,  30000, 12782640,   54.057%,   54.848%, |           |      +     |           |    #       |\r\n    64,  30000,  7255012,   69.551%,   70.777%, |           |  *+        |           |            | #\r\n   128,  30000,  3890368,   81.047%,   81.603%, |          *+            |           |            |            #\r\n   256,  30000,  2018311,   81.129%,   81.619%, |          +|            |           |            |           #\r\n   512,  30000,  1028488,   77.798%,   79.257%, |           *+           |           |            |         #\r\n    1K,  30000,   519217,   75.448%,   77.138%, |           |*+          |           |            |       #\r\n    2K,  30000,   260870,   73.763%,   75.518%, |           |*+          |           |            |     #\r\n    4K,  30000,   130752,   73.392%,   75.773%, |           |* +         |           |            |     #\r\n    8K,  30000,    65456,   74.341%,   76.026%, |           |*+          |           |            |      #\r\n   16K,  30000,    32748,   68.951%,   70.712%, |           |  *+        |           |            | #\r\n   32K,  30000,    16379,   73.761%,   76.129%, |           |*+          |           |            |      #\r\n   64K,  16384,     8190,   74.789%,   76.561%, |           |*+          |           |            |      #\r\n  128K,   8192,     4095,   74.834%,   75.900%, |           |*+          |           |            |      #\r\n  256K,   4096,     2047,   74.508%,   76.488%, |           |*+          |           |            |      #\r\n  512K,   2048,     1023,   74.781%,   75.998%, |           |*+          |           |            |      #\r\n    1M,   1024,      511,   74.523%,   76.610%, |           |*+          |           |            |      #\r\n    2M,    512,      255,   74.871%,   76.690%, |           |*+          |           |            |      #\r\n    4M,    256,      127,   74.656%,   76.658%, |           |*+          |           |            |      #\r\n    8M,    128,       63,   74.151%,   76.085%, |           |*+          |           |            |      #\r\n   16M,     64,       31,   74.802%,   76.263%, |           |*+          |           |            |      #\r\n   32M,     32,       15,   74.671%,   76.244%, |           |*+          |           |            |      #\r\n   64M,     16,       10,   74.626%,   76.459%, |           |*+          |           |            |      #\r\n  128M,      8,       10,   74.738%,   76.497%, |           |*+          |           |            |      #\r\n  256M,      4,       10,   74.395%,   76.110%, |           |*+          |           |            |      #\r\n  512M,      2,       10,   74.904%,   76.549%, |           |*+          |           |            |      #\r\n    1G,      1,       10,   74.709%,   76.477%, |           |*+          |           |            |      #\r\ntotal average:              57.949%,   60.255%, \r\nspeed increase new vs old:  3.979%\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/64/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/64/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1736264840","html_url":"https://github.com/tukaani-project/xz/pull/64#issuecomment-1736264840","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/64","id":1736264840,"node_id":"IC_kwDOIQBEvs5nfUyI","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"created_at":"2023-09-26T20:40:38Z","updated_at":"2023-09-26T20:40:38Z","author_association":"CONTRIBUTOR","body":"> Hello!\r\n> \r\n> Thanks for the PR, this is something we have wanted to implement since CLMUL was added for CRC64. 70% speed up over the generic method is a great speedup!\r\n> \r\n> If you are willing, can you do some additional benchmarks for us since you already have a framework setup? We are wondering what impact the compiler has, so can you show us differences between using GCC and Clang? This especially matters when it comes to the 3% speed up you mentioned for the inline asm. 3% isn't that significant, especially if its only for CRC32. It adds extra complexity to the code and makes it harder to maintain long-term, so we want to make sure it is worth it. Similarly, can you try making CRC_SIMD_BODY an inline function instead of a macro? This could make it easier to read/maintain. If it has a significant impact on performance then we should stick to a macro.\r\n> \r\n> So in summary, can you benchmark:\r\n> \r\n>     * Impact of using GCC versus Clang in general\r\n> \r\n>     * Impact of  removing the inline asm (GCC and Clang both)\r\n> \r\n>     * Impact of replacing CRC_SIMD_BODY macro with inline function (GCC and Clang both)\r\n\r\nI tested the difference that using GCC and Clang made in general and found that when using Clang instead of GCC there was negligible difference.\r\n\r\nThe difference that using GCC and Clang made on the inline assembly was a 2% increase on GCC and 1% or less for Clang. Since this increase is not very significant I can get rid of the changes if you would like.\r\n\r\nReplacing CRC_SIMD_BODY with an inline function had no change to the runtime. Ill upload the Inline function as an extra commit, and squash it once you decide which one you like better.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1736264840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-26T20:40:38Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32123887085","type":"PullRequestReviewCommentEvent","actor":{"id":133907478,"login":"hansjans162","display_login":"hansjans162","gravatar_id":"","url":"https://api.github.com/users/hansjans162","avatar_url":"https://avatars.githubusercontent.com/u/133907478?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/comments/1337758018","pull_request_review_id":1645167775,"id":1337758018,"node_id":"PRRC_kwDOIQBEvs5PvJFC","diff_hunk":"@@ -12,6 +12,93 @@\n //\n ///////////////////////////////////////////////////////////////////////////////\n \n+#undef CRC_GENERIC\n+#undef CRC_CLMUL\n+#undef CRC_USE_GENERIC_FOR_SMALL_INPUTS\n+\n+// If CLMUL cannot be used then only the generic slice-by-four is built.\n+#if !defined(HAVE_USABLE_CLMUL)\n+#\tdefine CRC_GENERIC 1\n+\n+// If CLMUL is allowed unconditionally in the compiler options then the\n+// generic version can be omitted. Note that this doesn't work with MSVC\n+// as I don't know how to detect the features here.\n+//\n+// NOTE: Keep this this in sync with crc32_table.c.\n+#elif (defined(__SSSE3__) && defined(__SSE4_1__) && defined(__PCLMUL__)) \\\n+\t\t|| (defined(__e2k__) && __iset__ >= 6)\n+#\tdefine CRC_CLMUL 1\n+\n+// Otherwise build both and detect at runtime which version to use.\n+#else\n+#\tdefine CRC_GENERIC 1\n+#\tdefine CRC_CLMUL 1\n+\n+/*\n+\t// The generic code is much faster with 1-8-byte inputs and has","path":"src/liblzma/check/crc_clmul_common.h","commit_id":"9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","original_commit_id":"9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"body":"When I tested this I found that for both crc32 and crc64 they were faster than generic after 5 bytes.","created_at":"2023-09-26T20:41:09Z","updated_at":"2023-09-26T20:41:10Z","html_url":"https://github.com/tukaani-project/xz/pull/64#discussion_r1337758018","pull_request_url":"https://api.github.com/repos/tukaani-project/xz/pulls/64","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/comments/1337758018"},"html":{"href":"https://github.com/tukaani-project/xz/pull/64#discussion_r1337758018"},"pull_request":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64"}},"reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/comments/1337758018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":38,"original_line":38,"side":"RIGHT","in_reply_to_id":1337383917,"original_position":37,"position":37,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/64","id":1529430093,"node_id":"PR_kwDOIQBEvs5bKUBN","html_url":"https://github.com/tukaani-project/xz/pull/64","diff_url":"https://github.com/tukaani-project/xz/pull/64.diff","patch_url":"https://github.com/tukaani-project/xz/pull/64.patch","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/64","number":64,"state":"open","locked":false,"title":"Crc32 clmul","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"body":"Added an implementation for crc32 that makes use of clmul.\r\nCode for this implementation was written by Ilya Kurdyukov and can be found here.\r\nhttps://github.com/ilyakurdyukov/crc-clmul-sim\r\n\r\nAlso refactored crc64_clmul to use the new macros created for crc32_clmul.\r\nAs well as moved similar functions to crc_clmul_common to eliminate duplicate code.\r\n\r\nI tested this on files doubling in size starting from 1 byte up to 1 Gigabyte.\r\nDuring testing I found that crc32_clmul can run up to 70% faster than crc32_generic,\r\nand has an average speed increase of 58.4% for sizes greater than 16 bytes.\r\n\r\nI also used this to test the reworked version of crc64_clmul.\r\nThis version of crc64_clmul is an average of 3.9% faster than the original implementation.\r\nThis speed increase is due to some inline assembly as well as changing around the order of some if statements. \r\n\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\ncrc32\\_fast currently only uses a generic implementation.\r\n\r\n\r\n## What is the new behavior?\r\nI added an implementation for crc32 that makes use of clmul in crc32_fast.c \r\nAlso refactored crc64_clmul implementation to use the same macros as crc32_clmul\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n## Other information\r\n\r\nHere is the output from both tests that gave me the statistics above.\r\n\r\nthe number of unique files tested on and the number of times the crc is run\r\ndecrease as the bytes get larger so the benchmark does not take too long.\r\n\r\nThe 64 and 32 spd+ show the percentage speed increase over the generic.\r\nThe percentage on the graph show the combined average for all types.\r\nFor example (50% is twice as fast, 200% is twice as slow)\r\n```\r\n64 generic: #\t\t64 clmul: +\r\n32 generic: =\t\t32 clmul: *\r\n\r\n#bytes, #files,   #crc's,  64spd+,  32spd+: 0%          50%          100%        150%         200%\r\n    16,  30000, 20648881,  39.96%,  24.24%: |           |      +*    | =    #    |            |\r\n    32,  30000, 12782640,  55.79%,  36.26%: |           |   +*       |  =        #            |\r\n    64,  30000,  7255012,  72.19%,  50.27%: |           +*           | =         |       #    |\r\n   128,  30000,  3890368,  82.53%,  69.13%: |       +*  |            |    =      |            |#\r\n   256,  30000,  2018311,  82.19%,  68.21%: |        +  |            |   =       |            |#\r\n   512,  30000,  1028488,  79.37%,  63.75%: |         + |            |  =        |            #\r\n    1K,  30000,   519217,  78.11%,  62.22%: |         + |            |   =       |           #|\r\n    2K,  30000,   260870,  76.74%,  61.71%: |          +|            |  =        |          # |\r\n    4K,  30000,   130752,  76.78%,  60.15%: |          +|            |  =        |          # |\r\n    8K,  30000,    65456,  76.24%,  60.59%: |          +|            |  =        |          # |\r\n   16K,  30000,    32748,  76.66%,  60.03%: |          +|            |  =        |          # |\r\n   32K,  30000,    16379,  76.78%,  60.04%: |          +|            |  =        |          # |\r\n   64K,  16384,     8190,  76.62%,  59.76%: |          +|            |  =        |          # |\r\n  128K,   8192,     4095,  76.52%,  59.71%: |          +|            |  =        |          # |\r\n  256K,   4096,     2047,  76.32%,  59.78%: |          +|            |  =        |          # |\r\n  512K,   2048,     1023,  84.70%,  60.09%: |        +  |         =  |           |            |       #\r\n    1M,   1024,      511,  76.71%,  60.29%: |          +|            |  =        |          # |\r\n    2M,    512,      255,  76.47%,  59.96%: |          +|            |  =        |          # |\r\n    4M,    256,      127,  76.42%,  60.03%: |          +|            |  =        |          # |\r\n    8M,    128,       63,  76.33%,  60.22%: |          +|            |  =        |          # |\r\n   16M,     64,       31,  76.55%,  60.23%: |          +|            |  =        |          # |\r\n   32M,     32,       15,  76.14%,  60.66%: |          +|            |  =        |          # |\r\n   64M,     16,       10,  76.53%,  59.99%: |          +|            |  =        |          # |\r\n  128M,      8,       10,  76.27%,  60.28%: |          +|            |  =        |          # |\r\n  256M,      4,       10,  76.42%,  59.96%: |          +|            |  =        |          # |\r\n  512M,      2,       10,  76.45%,  60.23%: |          +|            |  =        |          # |\r\n    1G,      1,       10,  76.64%,  60.19%: |          +|            |  =        |          # |\r\ntotal average:             75.13%,  58.44%\r\n\r\n```\r\n\r\n\r\nThe 64old and 64new spd+ show the percentage speed increase over the generic.\r\nThe percentage on the graph show the combined average for all types.\r\n```\r\n64 generic: #     64 clmul old: +     64 clmul new: *\r\n\r\n#bytes, #files,   #crc's, old64spd+, new64spd+: 0%          50%          100%        150%         200%\r\n     1,  30000, 48806446,  -97.328%,  -88.708%, |           | #          | * +       |            |\r\n     2,  30000, 44739242,  -57.943%,  -48.621%, |           |     #      |* +        |            |\r\n     4,  30000, 38347922,   -9.964%,   -4.811%, |           |          #*|+          |            |\r\n     8,  30000, 29826161,   -0.558%,    3.477%, |           |           *+           |            |\r\n    16,  30000, 20648881,   39.017%,   41.582%, |           |        +   |         # |            |\r\n    32,  30000, 12782640,   54.057%,   54.848%, |           |      +     |           |    #       |\r\n    64,  30000,  7255012,   69.551%,   70.777%, |           |  *+        |           |            | #\r\n   128,  30000,  3890368,   81.047%,   81.603%, |          *+            |           |            |            #\r\n   256,  30000,  2018311,   81.129%,   81.619%, |          +|            |           |            |           #\r\n   512,  30000,  1028488,   77.798%,   79.257%, |           *+           |           |            |         #\r\n    1K,  30000,   519217,   75.448%,   77.138%, |           |*+          |           |            |       #\r\n    2K,  30000,   260870,   73.763%,   75.518%, |           |*+          |           |            |     #\r\n    4K,  30000,   130752,   73.392%,   75.773%, |           |* +         |           |            |     #\r\n    8K,  30000,    65456,   74.341%,   76.026%, |           |*+          |           |            |      #\r\n   16K,  30000,    32748,   68.951%,   70.712%, |           |  *+        |           |            | #\r\n   32K,  30000,    16379,   73.761%,   76.129%, |           |*+          |           |            |      #\r\n   64K,  16384,     8190,   74.789%,   76.561%, |           |*+          |           |            |      #\r\n  128K,   8192,     4095,   74.834%,   75.900%, |           |*+          |           |            |      #\r\n  256K,   4096,     2047,   74.508%,   76.488%, |           |*+          |           |            |      #\r\n  512K,   2048,     1023,   74.781%,   75.998%, |           |*+          |           |            |      #\r\n    1M,   1024,      511,   74.523%,   76.610%, |           |*+          |           |            |      #\r\n    2M,    512,      255,   74.871%,   76.690%, |           |*+          |           |            |      #\r\n    4M,    256,      127,   74.656%,   76.658%, |           |*+          |           |            |      #\r\n    8M,    128,       63,   74.151%,   76.085%, |           |*+          |           |            |      #\r\n   16M,     64,       31,   74.802%,   76.263%, |           |*+          |           |            |      #\r\n   32M,     32,       15,   74.671%,   76.244%, |           |*+          |           |            |      #\r\n   64M,     16,       10,   74.626%,   76.459%, |           |*+          |           |            |      #\r\n  128M,      8,       10,   74.738%,   76.497%, |           |*+          |           |            |      #\r\n  256M,      4,       10,   74.395%,   76.110%, |           |*+          |           |            |      #\r\n  512M,      2,       10,   74.904%,   76.549%, |           |*+          |           |            |      #\r\n    1G,      1,       10,   74.709%,   76.477%, |           |*+          |           |            |      #\r\ntotal average:              57.949%,   60.255%, \r\nspeed increase new vs old:  3.979%\r\n```\r\n","created_at":"2023-09-25T19:53:53Z","updated_at":"2023-09-26T20:41:10Z","closed_at":null,"merged_at":null,"merge_commit_sha":"02b70e056186a4e754742dc67d00f165006c4367","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/tukaani-project/xz/pulls/64/commits","review_comments_url":"https://api.github.com/repos/tukaani-project/xz/pulls/64/comments","review_comment_url":"https://api.github.com/repos/tukaani-project/xz/pulls/comments{/number}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/64/comments","statuses_url":"https://api.github.com/repos/tukaani-project/xz/statuses/9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","head":{"label":"hansjans162:crc32-clmul","ref":"crc32-clmul","sha":"9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"repo":{"id":657271419,"node_id":"R_kgDOJy0qew","name":"xz","full_name":"hansjans162/xz","private":false,"owner":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"html_url":"https://github.com/hansjans162/xz","description":"XZ Utils Official Repository","fork":true,"url":"https://api.github.com/repos/hansjans162/xz","forks_url":"https://api.github.com/repos/hansjans162/xz/forks","keys_url":"https://api.github.com/repos/hansjans162/xz/keys{/key_id}","collaborators_url":"https://api.github.com/repos/hansjans162/xz/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/hansjans162/xz/teams","hooks_url":"https://api.github.com/repos/hansjans162/xz/hooks","issue_events_url":"https://api.github.com/repos/hansjans162/xz/issues/events{/number}","events_url":"https://api.github.com/repos/hansjans162/xz/events","assignees_url":"https://api.github.com/repos/hansjans162/xz/assignees{/user}","branches_url":"https://api.github.com/repos/hansjans162/xz/branches{/branch}","tags_url":"https://api.github.com/repos/hansjans162/xz/tags","blobs_url":"https://api.github.com/repos/hansjans162/xz/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/hansjans162/xz/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/hansjans162/xz/git/refs{/sha}","trees_url":"https://api.github.com/repos/hansjans162/xz/git/trees{/sha}","statuses_url":"https://api.github.com/repos/hansjans162/xz/statuses/{sha}","languages_url":"https://api.github.com/repos/hansjans162/xz/languages","stargazers_url":"https://api.github.com/repos/hansjans162/xz/stargazers","contributors_url":"https://api.github.com/repos/hansjans162/xz/contributors","subscribers_url":"https://api.github.com/repos/hansjans162/xz/subscribers","subscription_url":"https://api.github.com/repos/hansjans162/xz/subscription","commits_url":"https://api.github.com/repos/hansjans162/xz/commits{/sha}","git_commits_url":"https://api.github.com/repos/hansjans162/xz/git/commits{/sha}","comments_url":"https://api.github.com/repos/hansjans162/xz/comments{/number}","issue_comment_url":"https://api.github.com/repos/hansjans162/xz/issues/comments{/number}","contents_url":"https://api.github.com/repos/hansjans162/xz/contents/{+path}","compare_url":"https://api.github.com/repos/hansjans162/xz/compare/{base}...{head}","merges_url":"https://api.github.com/repos/hansjans162/xz/merges","archive_url":"https://api.github.com/repos/hansjans162/xz/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/hansjans162/xz/downloads","issues_url":"https://api.github.com/repos/hansjans162/xz/issues{/number}","pulls_url":"https://api.github.com/repos/hansjans162/xz/pulls{/number}","milestones_url":"https://api.github.com/repos/hansjans162/xz/milestones{/number}","notifications_url":"https://api.github.com/repos/hansjans162/xz/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/hansjans162/xz/labels{/name}","releases_url":"https://api.github.com/repos/hansjans162/xz/releases{/id}","deployments_url":"https://api.github.com/repos/hansjans162/xz/deployments","created_at":"2023-06-22T17:34:43Z","updated_at":"2023-09-15T15:20:58Z","pushed_at":"2023-09-25T17:59:56Z","git_url":"git://github.com/hansjans162/xz.git","ssh_url":"git@github.com:hansjans162/xz.git","clone_url":"https://github.com/hansjans162/xz.git","svn_url":"https://github.com/hansjans162/xz","homepage":"https://tukaani.org","size":3687,"stargazers_count":1,"watchers_count":1,"language":"C","has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":1,"default_branch":"master"}},"base":{"label":"tukaani-project:master","ref":"master","sha":"519e47c2818acde571fadc79551294527fe6cc22","user":{"login":"tukaani-project","id":116083088,"node_id":"O_kgDOButJkA","avatar_url":"https://avatars.githubusercontent.com/u/116083088?v=4","gravatar_id":"","url":"https://api.github.com/users/tukaani-project","html_url":"https://github.com/tukaani-project","followers_url":"https://api.github.com/users/tukaani-project/followers","following_url":"https://api.github.com/users/tukaani-project/following{/other_user}","gists_url":"https://api.github.com/users/tukaani-project/gists{/gist_id}","starred_url":"https://api.github.com/users/tukaani-project/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tukaani-project/subscriptions","organizations_url":"https://api.github.com/users/tukaani-project/orgs","repos_url":"https://api.github.com/users/tukaani-project/repos","events_url":"https://api.github.com/users/tukaani-project/events{/privacy}","received_events_url":"https://api.github.com/users/tukaani-project/received_events","type":"Organization","site_admin":false},"repo":{"id":553665726,"node_id":"R_kgDOIQBEvg","name":"xz","full_name":"tukaani-project/xz","private":false,"owner":{"login":"tukaani-project","id":116083088,"node_id":"O_kgDOButJkA","avatar_url":"https://avatars.githubusercontent.com/u/116083088?v=4","gravatar_id":"","url":"https://api.github.com/users/tukaani-project","html_url":"https://github.com/tukaani-project","followers_url":"https://api.github.com/users/tukaani-project/followers","following_url":"https://api.github.com/users/tukaani-project/following{/other_user}","gists_url":"https://api.github.com/users/tukaani-project/gists{/gist_id}","starred_url":"https://api.github.com/users/tukaani-project/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tukaani-project/subscriptions","organizations_url":"https://api.github.com/users/tukaani-project/orgs","repos_url":"https://api.github.com/users/tukaani-project/repos","events_url":"https://api.github.com/users/tukaani-project/events{/privacy}","received_events_url":"https://api.github.com/users/tukaani-project/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/tukaani-project/xz","description":"XZ Utils Official Repository","fork":false,"url":"https://api.github.com/repos/tukaani-project/xz","forks_url":"https://api.github.com/repos/tukaani-project/xz/forks","keys_url":"https://api.github.com/repos/tukaani-project/xz/keys{/key_id}","collaborators_url":"https://api.github.com/repos/tukaani-project/xz/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/tukaani-project/xz/teams","hooks_url":"https://api.github.com/repos/tukaani-project/xz/hooks","issue_events_url":"https://api.github.com/repos/tukaani-project/xz/issues/events{/number}","events_url":"https://api.github.com/repos/tukaani-project/xz/events","assignees_url":"https://api.github.com/repos/tukaani-project/xz/assignees{/user}","branches_url":"https://api.github.com/repos/tukaani-project/xz/branches{/branch}","tags_url":"https://api.github.com/repos/tukaani-project/xz/tags","blobs_url":"https://api.github.com/repos/tukaani-project/xz/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/tukaani-project/xz/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/tukaani-project/xz/git/refs{/sha}","trees_url":"https://api.github.com/repos/tukaani-project/xz/git/trees{/sha}","statuses_url":"https://api.github.com/repos/tukaani-project/xz/statuses/{sha}","languages_url":"https://api.github.com/repos/tukaani-project/xz/languages","stargazers_url":"https://api.github.com/repos/tukaani-project/xz/stargazers","contributors_url":"https://api.github.com/repos/tukaani-project/xz/contributors","subscribers_url":"https://api.github.com/repos/tukaani-project/xz/subscribers","subscription_url":"https://api.github.com/repos/tukaani-project/xz/subscription","commits_url":"https://api.github.com/repos/tukaani-project/xz/commits{/sha}","git_commits_url":"https://api.github.com/repos/tukaani-project/xz/git/commits{/sha}","comments_url":"https://api.github.com/repos/tukaani-project/xz/comments{/number}","issue_comment_url":"https://api.github.com/repos/tukaani-project/xz/issues/comments{/number}","contents_url":"https://api.github.com/repos/tukaani-project/xz/contents/{+path}","compare_url":"https://api.github.com/repos/tukaani-project/xz/compare/{base}...{head}","merges_url":"https://api.github.com/repos/tukaani-project/xz/merges","archive_url":"https://api.github.com/repos/tukaani-project/xz/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/tukaani-project/xz/downloads","issues_url":"https://api.github.com/repos/tukaani-project/xz/issues{/number}","pulls_url":"https://api.github.com/repos/tukaani-project/xz/pulls{/number}","milestones_url":"https://api.github.com/repos/tukaani-project/xz/milestones{/number}","notifications_url":"https://api.github.com/repos/tukaani-project/xz/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/tukaani-project/xz/labels{/name}","releases_url":"https://api.github.com/repos/tukaani-project/xz/releases{/id}","deployments_url":"https://api.github.com/repos/tukaani-project/xz/deployments","created_at":"2022-10-18T15:11:36Z","updated_at":"2023-09-26T05:26:28Z","pushed_at":"2023-09-26T20:17:37Z","git_url":"git://github.com/tukaani-project/xz.git","ssh_url":"git@github.com:tukaani-project/xz.git","clone_url":"https://github.com/tukaani-project/xz.git","svn_url":"https://github.com/tukaani-project/xz","homepage":"https://tukaani.org","size":4194,"stargazers_count":97,"watchers_count":97,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":32,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":5,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["c","cli","compression","library"],"visibility":"public","forks":32,"open_issues":5,"watchers":97,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64"},"html":{"href":"https://github.com/tukaani-project/xz/pull/64"},"issue":{"href":"https://api.github.com/repos/tukaani-project/xz/issues/64"},"comments":{"href":"https://api.github.com/repos/tukaani-project/xz/issues/64/comments"},"review_comments":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64/comments"},"review_comment":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64/commits"},"statuses":{"href":"https://api.github.com/repos/tukaani-project/xz/statuses/9d7e8e7ee1c5d81f27bf8efee28521d0882808e9"}},"author_association":"CONTRIBUTOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2023-09-26T20:41:09Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32123887025","type":"PullRequestReviewEvent","actor":{"id":133907478,"login":"hansjans162","display_login":"hansjans162","gravatar_id":"","url":"https://api.github.com/users/hansjans162","avatar_url":"https://avatars.githubusercontent.com/u/133907478?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","review":{"id":1645167775,"node_id":"PRR_kwDOIQBEvs5iD0Sf","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"body":null,"commit_id":"9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","submitted_at":"2023-09-26T20:41:10Z","state":"commented","html_url":"https://github.com/tukaani-project/xz/pull/64#pullrequestreview-1645167775","pull_request_url":"https://api.github.com/repos/tukaani-project/xz/pulls/64","author_association":"CONTRIBUTOR","_links":{"html":{"href":"https://github.com/tukaani-project/xz/pull/64#pullrequestreview-1645167775"},"pull_request":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64"}}},"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/64","id":1529430093,"node_id":"PR_kwDOIQBEvs5bKUBN","html_url":"https://github.com/tukaani-project/xz/pull/64","diff_url":"https://github.com/tukaani-project/xz/pull/64.diff","patch_url":"https://github.com/tukaani-project/xz/pull/64.patch","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/64","number":64,"state":"open","locked":false,"title":"Crc32 clmul","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"body":"Added an implementation for crc32 that makes use of clmul.\r\nCode for this implementation was written by Ilya Kurdyukov and can be found here.\r\nhttps://github.com/ilyakurdyukov/crc-clmul-sim\r\n\r\nAlso refactored crc64_clmul to use the new macros created for crc32_clmul.\r\nAs well as moved similar functions to crc_clmul_common to eliminate duplicate code.\r\n\r\nI tested this on files doubling in size starting from 1 byte up to 1 Gigabyte.\r\nDuring testing I found that crc32_clmul can run up to 70% faster than crc32_generic,\r\nand has an average speed increase of 58.4% for sizes greater than 16 bytes.\r\n\r\nI also used this to test the reworked version of crc64_clmul.\r\nThis version of crc64_clmul is an average of 3.9% faster than the original implementation.\r\nThis speed increase is due to some inline assembly as well as changing around the order of some if statements. \r\n\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\ncrc32\\_fast currently only uses a generic implementation.\r\n\r\n\r\n## What is the new behavior?\r\nI added an implementation for crc32 that makes use of clmul in crc32_fast.c \r\nAlso refactored crc64_clmul implementation to use the same macros as crc32_clmul\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n## Other information\r\n\r\nHere is the output from both tests that gave me the statistics above.\r\n\r\nthe number of unique files tested on and the number of times the crc is run\r\ndecrease as the bytes get larger so the benchmark does not take too long.\r\n\r\nThe 64 and 32 spd+ show the percentage speed increase over the generic.\r\nThe percentage on the graph show the combined average for all types.\r\nFor example (50% is twice as fast, 200% is twice as slow)\r\n```\r\n64 generic: #\t\t64 clmul: +\r\n32 generic: =\t\t32 clmul: *\r\n\r\n#bytes, #files,   #crc's,  64spd+,  32spd+: 0%          50%          100%        150%         200%\r\n    16,  30000, 20648881,  39.96%,  24.24%: |           |      +*    | =    #    |            |\r\n    32,  30000, 12782640,  55.79%,  36.26%: |           |   +*       |  =        #            |\r\n    64,  30000,  7255012,  72.19%,  50.27%: |           +*           | =         |       #    |\r\n   128,  30000,  3890368,  82.53%,  69.13%: |       +*  |            |    =      |            |#\r\n   256,  30000,  2018311,  82.19%,  68.21%: |        +  |            |   =       |            |#\r\n   512,  30000,  1028488,  79.37%,  63.75%: |         + |            |  =        |            #\r\n    1K,  30000,   519217,  78.11%,  62.22%: |         + |            |   =       |           #|\r\n    2K,  30000,   260870,  76.74%,  61.71%: |          +|            |  =        |          # |\r\n    4K,  30000,   130752,  76.78%,  60.15%: |          +|            |  =        |          # |\r\n    8K,  30000,    65456,  76.24%,  60.59%: |          +|            |  =        |          # |\r\n   16K,  30000,    32748,  76.66%,  60.03%: |          +|            |  =        |          # |\r\n   32K,  30000,    16379,  76.78%,  60.04%: |          +|            |  =        |          # |\r\n   64K,  16384,     8190,  76.62%,  59.76%: |          +|            |  =        |          # |\r\n  128K,   8192,     4095,  76.52%,  59.71%: |          +|            |  =        |          # |\r\n  256K,   4096,     2047,  76.32%,  59.78%: |          +|            |  =        |          # |\r\n  512K,   2048,     1023,  84.70%,  60.09%: |        +  |         =  |           |            |       #\r\n    1M,   1024,      511,  76.71%,  60.29%: |          +|            |  =        |          # |\r\n    2M,    512,      255,  76.47%,  59.96%: |          +|            |  =        |          # |\r\n    4M,    256,      127,  76.42%,  60.03%: |          +|            |  =        |          # |\r\n    8M,    128,       63,  76.33%,  60.22%: |          +|            |  =        |          # |\r\n   16M,     64,       31,  76.55%,  60.23%: |          +|            |  =        |          # |\r\n   32M,     32,       15,  76.14%,  60.66%: |          +|            |  =        |          # |\r\n   64M,     16,       10,  76.53%,  59.99%: |          +|            |  =        |          # |\r\n  128M,      8,       10,  76.27%,  60.28%: |          +|            |  =        |          # |\r\n  256M,      4,       10,  76.42%,  59.96%: |          +|            |  =        |          # |\r\n  512M,      2,       10,  76.45%,  60.23%: |          +|            |  =        |          # |\r\n    1G,      1,       10,  76.64%,  60.19%: |          +|            |  =        |          # |\r\ntotal average:             75.13%,  58.44%\r\n\r\n```\r\n\r\n\r\nThe 64old and 64new spd+ show the percentage speed increase over the generic.\r\nThe percentage on the graph show the combined average for all types.\r\n```\r\n64 generic: #     64 clmul old: +     64 clmul new: *\r\n\r\n#bytes, #files,   #crc's, old64spd+, new64spd+: 0%          50%          100%        150%         200%\r\n     1,  30000, 48806446,  -97.328%,  -88.708%, |           | #          | * +       |            |\r\n     2,  30000, 44739242,  -57.943%,  -48.621%, |           |     #      |* +        |            |\r\n     4,  30000, 38347922,   -9.964%,   -4.811%, |           |          #*|+          |            |\r\n     8,  30000, 29826161,   -0.558%,    3.477%, |           |           *+           |            |\r\n    16,  30000, 20648881,   39.017%,   41.582%, |           |        +   |         # |            |\r\n    32,  30000, 12782640,   54.057%,   54.848%, |           |      +     |           |    #       |\r\n    64,  30000,  7255012,   69.551%,   70.777%, |           |  *+        |           |            | #\r\n   128,  30000,  3890368,   81.047%,   81.603%, |          *+            |           |            |            #\r\n   256,  30000,  2018311,   81.129%,   81.619%, |          +|            |           |            |           #\r\n   512,  30000,  1028488,   77.798%,   79.257%, |           *+           |           |            |         #\r\n    1K,  30000,   519217,   75.448%,   77.138%, |           |*+          |           |            |       #\r\n    2K,  30000,   260870,   73.763%,   75.518%, |           |*+          |           |            |     #\r\n    4K,  30000,   130752,   73.392%,   75.773%, |           |* +         |           |            |     #\r\n    8K,  30000,    65456,   74.341%,   76.026%, |           |*+          |           |            |      #\r\n   16K,  30000,    32748,   68.951%,   70.712%, |           |  *+        |           |            | #\r\n   32K,  30000,    16379,   73.761%,   76.129%, |           |*+          |           |            |      #\r\n   64K,  16384,     8190,   74.789%,   76.561%, |           |*+          |           |            |      #\r\n  128K,   8192,     4095,   74.834%,   75.900%, |           |*+          |           |            |      #\r\n  256K,   4096,     2047,   74.508%,   76.488%, |           |*+          |           |            |      #\r\n  512K,   2048,     1023,   74.781%,   75.998%, |           |*+          |           |            |      #\r\n    1M,   1024,      511,   74.523%,   76.610%, |           |*+          |           |            |      #\r\n    2M,    512,      255,   74.871%,   76.690%, |           |*+          |           |            |      #\r\n    4M,    256,      127,   74.656%,   76.658%, |           |*+          |           |            |      #\r\n    8M,    128,       63,   74.151%,   76.085%, |           |*+          |           |            |      #\r\n   16M,     64,       31,   74.802%,   76.263%, |           |*+          |           |            |      #\r\n   32M,     32,       15,   74.671%,   76.244%, |           |*+          |           |            |      #\r\n   64M,     16,       10,   74.626%,   76.459%, |           |*+          |           |            |      #\r\n  128M,      8,       10,   74.738%,   76.497%, |           |*+          |           |            |      #\r\n  256M,      4,       10,   74.395%,   76.110%, |           |*+          |           |            |      #\r\n  512M,      2,       10,   74.904%,   76.549%, |           |*+          |           |            |      #\r\n    1G,      1,       10,   74.709%,   76.477%, |           |*+          |           |            |      #\r\ntotal average:              57.949%,   60.255%, \r\nspeed increase new vs old:  3.979%\r\n```\r\n","created_at":"2023-09-25T19:53:53Z","updated_at":"2023-09-26T20:41:10Z","closed_at":null,"merged_at":null,"merge_commit_sha":"02b70e056186a4e754742dc67d00f165006c4367","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/tukaani-project/xz/pulls/64/commits","review_comments_url":"https://api.github.com/repos/tukaani-project/xz/pulls/64/comments","review_comment_url":"https://api.github.com/repos/tukaani-project/xz/pulls/comments{/number}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/64/comments","statuses_url":"https://api.github.com/repos/tukaani-project/xz/statuses/9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","head":{"label":"hansjans162:crc32-clmul","ref":"crc32-clmul","sha":"9d7e8e7ee1c5d81f27bf8efee28521d0882808e9","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"repo":{"id":657271419,"node_id":"R_kgDOJy0qew","name":"xz","full_name":"hansjans162/xz","private":false,"owner":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"html_url":"https://github.com/hansjans162/xz","description":"XZ Utils Official Repository","fork":true,"url":"https://api.github.com/repos/hansjans162/xz","forks_url":"https://api.github.com/repos/hansjans162/xz/forks","keys_url":"https://api.github.com/repos/hansjans162/xz/keys{/key_id}","collaborators_url":"https://api.github.com/repos/hansjans162/xz/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/hansjans162/xz/teams","hooks_url":"https://api.github.com/repos/hansjans162/xz/hooks","issue_events_url":"https://api.github.com/repos/hansjans162/xz/issues/events{/number}","events_url":"https://api.github.com/repos/hansjans162/xz/events","assignees_url":"https://api.github.com/repos/hansjans162/xz/assignees{/user}","branches_url":"https://api.github.com/repos/hansjans162/xz/branches{/branch}","tags_url":"https://api.github.com/repos/hansjans162/xz/tags","blobs_url":"https://api.github.com/repos/hansjans162/xz/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/hansjans162/xz/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/hansjans162/xz/git/refs{/sha}","trees_url":"https://api.github.com/repos/hansjans162/xz/git/trees{/sha}","statuses_url":"https://api.github.com/repos/hansjans162/xz/statuses/{sha}","languages_url":"https://api.github.com/repos/hansjans162/xz/languages","stargazers_url":"https://api.github.com/repos/hansjans162/xz/stargazers","contributors_url":"https://api.github.com/repos/hansjans162/xz/contributors","subscribers_url":"https://api.github.com/repos/hansjans162/xz/subscribers","subscription_url":"https://api.github.com/repos/hansjans162/xz/subscription","commits_url":"https://api.github.com/repos/hansjans162/xz/commits{/sha}","git_commits_url":"https://api.github.com/repos/hansjans162/xz/git/commits{/sha}","comments_url":"https://api.github.com/repos/hansjans162/xz/comments{/number}","issue_comment_url":"https://api.github.com/repos/hansjans162/xz/issues/comments{/number}","contents_url":"https://api.github.com/repos/hansjans162/xz/contents/{+path}","compare_url":"https://api.github.com/repos/hansjans162/xz/compare/{base}...{head}","merges_url":"https://api.github.com/repos/hansjans162/xz/merges","archive_url":"https://api.github.com/repos/hansjans162/xz/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/hansjans162/xz/downloads","issues_url":"https://api.github.com/repos/hansjans162/xz/issues{/number}","pulls_url":"https://api.github.com/repos/hansjans162/xz/pulls{/number}","milestones_url":"https://api.github.com/repos/hansjans162/xz/milestones{/number}","notifications_url":"https://api.github.com/repos/hansjans162/xz/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/hansjans162/xz/labels{/name}","releases_url":"https://api.github.com/repos/hansjans162/xz/releases{/id}","deployments_url":"https://api.github.com/repos/hansjans162/xz/deployments","created_at":"2023-06-22T17:34:43Z","updated_at":"2023-09-15T15:20:58Z","pushed_at":"2023-09-25T17:59:56Z","git_url":"git://github.com/hansjans162/xz.git","ssh_url":"git@github.com:hansjans162/xz.git","clone_url":"https://github.com/hansjans162/xz.git","svn_url":"https://github.com/hansjans162/xz","homepage":"https://tukaani.org","size":3687,"stargazers_count":1,"watchers_count":1,"language":"C","has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":1,"default_branch":"master"}},"base":{"label":"tukaani-project:master","ref":"master","sha":"519e47c2818acde571fadc79551294527fe6cc22","user":{"login":"tukaani-project","id":116083088,"node_id":"O_kgDOButJkA","avatar_url":"https://avatars.githubusercontent.com/u/116083088?v=4","gravatar_id":"","url":"https://api.github.com/users/tukaani-project","html_url":"https://github.com/tukaani-project","followers_url":"https://api.github.com/users/tukaani-project/followers","following_url":"https://api.github.com/users/tukaani-project/following{/other_user}","gists_url":"https://api.github.com/users/tukaani-project/gists{/gist_id}","starred_url":"https://api.github.com/users/tukaani-project/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tukaani-project/subscriptions","organizations_url":"https://api.github.com/users/tukaani-project/orgs","repos_url":"https://api.github.com/users/tukaani-project/repos","events_url":"https://api.github.com/users/tukaani-project/events{/privacy}","received_events_url":"https://api.github.com/users/tukaani-project/received_events","type":"Organization","site_admin":false},"repo":{"id":553665726,"node_id":"R_kgDOIQBEvg","name":"xz","full_name":"tukaani-project/xz","private":false,"owner":{"login":"tukaani-project","id":116083088,"node_id":"O_kgDOButJkA","avatar_url":"https://avatars.githubusercontent.com/u/116083088?v=4","gravatar_id":"","url":"https://api.github.com/users/tukaani-project","html_url":"https://github.com/tukaani-project","followers_url":"https://api.github.com/users/tukaani-project/followers","following_url":"https://api.github.com/users/tukaani-project/following{/other_user}","gists_url":"https://api.github.com/users/tukaani-project/gists{/gist_id}","starred_url":"https://api.github.com/users/tukaani-project/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tukaani-project/subscriptions","organizations_url":"https://api.github.com/users/tukaani-project/orgs","repos_url":"https://api.github.com/users/tukaani-project/repos","events_url":"https://api.github.com/users/tukaani-project/events{/privacy}","received_events_url":"https://api.github.com/users/tukaani-project/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/tukaani-project/xz","description":"XZ Utils Official Repository","fork":false,"url":"https://api.github.com/repos/tukaani-project/xz","forks_url":"https://api.github.com/repos/tukaani-project/xz/forks","keys_url":"https://api.github.com/repos/tukaani-project/xz/keys{/key_id}","collaborators_url":"https://api.github.com/repos/tukaani-project/xz/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/tukaani-project/xz/teams","hooks_url":"https://api.github.com/repos/tukaani-project/xz/hooks","issue_events_url":"https://api.github.com/repos/tukaani-project/xz/issues/events{/number}","events_url":"https://api.github.com/repos/tukaani-project/xz/events","assignees_url":"https://api.github.com/repos/tukaani-project/xz/assignees{/user}","branches_url":"https://api.github.com/repos/tukaani-project/xz/branches{/branch}","tags_url":"https://api.github.com/repos/tukaani-project/xz/tags","blobs_url":"https://api.github.com/repos/tukaani-project/xz/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/tukaani-project/xz/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/tukaani-project/xz/git/refs{/sha}","trees_url":"https://api.github.com/repos/tukaani-project/xz/git/trees{/sha}","statuses_url":"https://api.github.com/repos/tukaani-project/xz/statuses/{sha}","languages_url":"https://api.github.com/repos/tukaani-project/xz/languages","stargazers_url":"https://api.github.com/repos/tukaani-project/xz/stargazers","contributors_url":"https://api.github.com/repos/tukaani-project/xz/contributors","subscribers_url":"https://api.github.com/repos/tukaani-project/xz/subscribers","subscription_url":"https://api.github.com/repos/tukaani-project/xz/subscription","commits_url":"https://api.github.com/repos/tukaani-project/xz/commits{/sha}","git_commits_url":"https://api.github.com/repos/tukaani-project/xz/git/commits{/sha}","comments_url":"https://api.github.com/repos/tukaani-project/xz/comments{/number}","issue_comment_url":"https://api.github.com/repos/tukaani-project/xz/issues/comments{/number}","contents_url":"https://api.github.com/repos/tukaani-project/xz/contents/{+path}","compare_url":"https://api.github.com/repos/tukaani-project/xz/compare/{base}...{head}","merges_url":"https://api.github.com/repos/tukaani-project/xz/merges","archive_url":"https://api.github.com/repos/tukaani-project/xz/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/tukaani-project/xz/downloads","issues_url":"https://api.github.com/repos/tukaani-project/xz/issues{/number}","pulls_url":"https://api.github.com/repos/tukaani-project/xz/pulls{/number}","milestones_url":"https://api.github.com/repos/tukaani-project/xz/milestones{/number}","notifications_url":"https://api.github.com/repos/tukaani-project/xz/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/tukaani-project/xz/labels{/name}","releases_url":"https://api.github.com/repos/tukaani-project/xz/releases{/id}","deployments_url":"https://api.github.com/repos/tukaani-project/xz/deployments","created_at":"2022-10-18T15:11:36Z","updated_at":"2023-09-26T05:26:28Z","pushed_at":"2023-09-26T20:17:37Z","git_url":"git://github.com/tukaani-project/xz.git","ssh_url":"git@github.com:tukaani-project/xz.git","clone_url":"https://github.com/tukaani-project/xz.git","svn_url":"https://github.com/tukaani-project/xz","homepage":"https://tukaani.org","size":4194,"stargazers_count":97,"watchers_count":97,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":32,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":5,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["c","cli","compression","library"],"visibility":"public","forks":32,"open_issues":5,"watchers":97,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64"},"html":{"href":"https://github.com/tukaani-project/xz/pull/64"},"issue":{"href":"https://api.github.com/repos/tukaani-project/xz/issues/64"},"comments":{"href":"https://api.github.com/repos/tukaani-project/xz/issues/64/comments"},"review_comments":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64/comments"},"review_comment":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/tukaani-project/xz/pulls/64/commits"},"statuses":{"href":"https://api.github.com/repos/tukaani-project/xz/statuses/9d7e8e7ee1c5d81f27bf8efee28521d0882808e9"}},"author_association":"CONTRIBUTOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2023-09-26T20:41:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
