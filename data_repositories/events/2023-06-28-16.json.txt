{"id":"30070265930","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":14141524218,"size":5,"distinct_size":5,"ref":"refs/heads/CI","head":"66bdcfa85fef2911cc80f5f30fed3f9610faccb4","before":"77f039f7101b5ba03fbe9485f45cae52f19e7497","commits":[{"sha":"45e250a9e9f3c3e8e8af2983366b170bf54f890e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Add test with -fsanitize=address,undefined.\n\nci_build.sh was updated to accept disabling of __attribute__ ifunc\nand CLMUL. This will allow -fsanitize=address to pass because ifunc\nis incompatible with -fsanitize=address. The CLMUL implementation has\noptimizations that potentially read past the buffer and mask out the\nunwanted bytes.\n\nThis test will only run on Autotools Linux.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/45e250a9e9f3c3e8e8af2983366b170bf54f890e"},{"sha":"e3356a204c5ae02db3ec4552b6c1be354e9b6142","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent warning for MSYS2 Windows build.\n\nIn lzma_memcmplen(), the <intrin.h> header file is only included if\n_MSC_VER and _M_X64 are both defined but _BitScanForward64() was\npreviously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but\nnot _MSC_VER so _BitScanForward64() was used without including\n<intrin.h>.\n\nNow, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as\nexpected.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e3356a204c5ae02db3ec4552b6c1be354e9b6142"},{"sha":"78704f36e74205857c898a351c757719a6c8b666","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent uninitialzed warning in mt stream encoder.\n\nThis change only impacts the compiler warning since it was impossible\nfor the wait_abs struct in stream_encode_mt() to be used before it was\ninitialized since mythread_condtime_set() will always be called before\nmythread_cond_timedwait().\n\nSince the mythread.h code is different between the POSIX and\nWindows versions, this warning was only present on Windows builds.\n\nThanks to Arthur S for reporting the warning and providing an initial\npatch.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/78704f36e74205857c898a351c757719a6c8b666"},{"sha":"fe3bd438fb119f9bad3f08dc29d331e4956196e1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_block_header.\n\ntest_block_header was not properly freeing the filter options between\ncalls to lzma_block_header_decode(). The memory leaks were discovered by\nusing -fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/fe3bd438fb119f9bad3f08dc29d331e4956196e1"},{"sha":"66bdcfa85fef2911cc80f5f30fed3f9610faccb4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_index.\n\nSeveral tests were missing calls to lzma_index_end() to clean up the\nlzma_index structs. The memory leaks were discovered by using\n-fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/66bdcfa85fef2911cc80f5f30fed3f9610faccb4"}]},"public":true,"created_at":"2023-06-28T16:08:50Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"30070427319","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":14141601902,"size":6,"distinct_size":0,"ref":"refs/heads/master","head":"66bdcfa85fef2911cc80f5f30fed3f9610faccb4","before":"86118ea320f867e09e98a8682cc08cbbdfd640e2","commits":[{"sha":"596ee722cd7ddf0afae584fc06365adc0e735977","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Upgrade checkout action from v2 to v3.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/596ee722cd7ddf0afae584fc06365adc0e735977"},{"sha":"45e250a9e9f3c3e8e8af2983366b170bf54f890e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Add test with -fsanitize=address,undefined.\n\nci_build.sh was updated to accept disabling of __attribute__ ifunc\nand CLMUL. This will allow -fsanitize=address to pass because ifunc\nis incompatible with -fsanitize=address. The CLMUL implementation has\noptimizations that potentially read past the buffer and mask out the\nunwanted bytes.\n\nThis test will only run on Autotools Linux.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/45e250a9e9f3c3e8e8af2983366b170bf54f890e"},{"sha":"e3356a204c5ae02db3ec4552b6c1be354e9b6142","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent warning for MSYS2 Windows build.\n\nIn lzma_memcmplen(), the <intrin.h> header file is only included if\n_MSC_VER and _M_X64 are both defined but _BitScanForward64() was\npreviously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but\nnot _MSC_VER so _BitScanForward64() was used without including\n<intrin.h>.\n\nNow, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as\nexpected.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e3356a204c5ae02db3ec4552b6c1be354e9b6142"},{"sha":"78704f36e74205857c898a351c757719a6c8b666","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent uninitialzed warning in mt stream encoder.\n\nThis change only impacts the compiler warning since it was impossible\nfor the wait_abs struct in stream_encode_mt() to be used before it was\ninitialized since mythread_condtime_set() will always be called before\nmythread_cond_timedwait().\n\nSince the mythread.h code is different between the POSIX and\nWindows versions, this warning was only present on Windows builds.\n\nThanks to Arthur S for reporting the warning and providing an initial\npatch.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/78704f36e74205857c898a351c757719a6c8b666"},{"sha":"fe3bd438fb119f9bad3f08dc29d331e4956196e1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_block_header.\n\ntest_block_header was not properly freeing the filter options between\ncalls to lzma_block_header_decode(). The memory leaks were discovered by\nusing -fsanitize=address with GCC.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/fe3bd438fb119f9bad3f08dc29d331e4956196e1"},{"sha":"66bdcfa85fef2911cc80f5f30fed3f9610faccb4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_index.\n\nSeveral tests were missing calls to lzma_index_end() to clean up the\nlzma_index structs. The memory leaks were discovered by using\n-fsanitize=address with GCC.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/66bdcfa85fef2911cc80f5f30fed3f9610faccb4"}]},"public":true,"created_at":"2023-06-28T16:15:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
