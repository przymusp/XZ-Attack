{"id":"25252469980","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":453091377,"name":"JiaT75/XZ_Utils_Unofficial","url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial"},"payload":{"push_id":11670614269,"size":21,"distinct_size":21,"ref":"refs/heads/main","head":"991d5fffb700d7c416b104dcd22dbebf451693f4","before":"382a05c0433aaaa3dd42a139dc2119b7ff69bddb","commits":[{"sha":"a39961ef211e1bf030b17edeea3cff29fe263b67","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix building with Intel ICC (the classic compiler).\n\nIt claims __GNUC__ >= 10 but doesn't support __symver__ attribute.\n\nThanks to Stephen Sachs.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/a39961ef211e1bf030b17edeea3cff29fe263b67"},{"sha":"f9b4ff6e9a0f1678650775582d3e4fe782abce97","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/f9b4ff6e9a0f1678650775582d3e4fe782abce97"},{"sha":"577e467b137c735afb8de6ae71ac7a73c2960cc4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Spanish translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/577e467b137c735afb8de6ae71ac7a73c2960cc4"},{"sha":"26c3359eac0988d6f3986735cd1363bec1678e8e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Polish translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/26c3359eac0988d6f3986735cd1363bec1678e8e"},{"sha":"3c8cbb8137b6f8ed9416c1209d73cdbcb015251f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Croatian translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/3c8cbb8137b6f8ed9416c1209d73cdbcb015251f"},{"sha":"2bbb9c0f3829a8b121b36998d273a6c6f92000f4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Finnish translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/2bbb9c0f3829a8b121b36998d273a6c6f92000f4"},{"sha":"db97e69e12393becc29f8febd53133d0d36989bd","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Hungarian translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/db97e69e12393becc29f8febd53133d0d36989bd"},{"sha":"6553f49b11dafad35c73b05f12e14865ea1fd8a1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Romanian translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/6553f49b11dafad35c73b05f12e14865ea1fd8a1"},{"sha":"eb0f1450ad9f23dac03050d9c8375980240aee21","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Use __attribute__((__constructor__)) if available.\n\nThis uses it for CRC table initializations when using --disable-small.\nIt avoids mythread_once() overhead. It also means that then\n--disable-small --disable-threads is thread-safe if this attribute\nis supported.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/eb0f1450ad9f23dac03050d9c8375980240aee21"},{"sha":"ac10b1b3622e70881595586edfb8a3ebdcd76bb6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit x86_64 from --enable-assembler.\n\nIt didn't do anything. There are only 32-bit x86 assembly files\nand it feels likely that new files won't be added as intrinsics\nin C are more portable across toolchains and OSes.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/ac10b1b3622e70881595586edfb8a3ebdcd76bb6"},{"sha":"bbf2073d824ab4ba33bed4b77f467435abd333a5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Ukrainian translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/bbf2073d824ab4ba33bed4b77f467435abd333a5"},{"sha":"a4bc689a823a2254f29ac9d233170add5121b307","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Swedish translation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/a4bc689a823a2254f29ac9d233170add5121b307"},{"sha":"e963379a8622ebdff6ce78e76b803bcd1e1d16d6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Swedish translation again.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/e963379a8622ebdff6ce78e76b803bcd1e1d16d6"},{"sha":"3b466bc79672bb2b06d1245a500588e6026e0ba0","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Update the Swedish translation one more time.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/3b466bc79672bb2b06d1245a500588e6026e0ba0"},{"sha":"f644473a211394447824ea00518d0a214ff3f7f2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add fast CRC64 for 32/64-bit x86 using SSSE3 + SSE4.1 + CLMUL.\n\nIt also works on E2K as it supports these intrinsics.\n\nOn x86-64 runtime detection is used so the code keeps working on\nolder processors too. A CLMUL-only build can be done by using\n-msse4.1 -mpclmul in CFLAGS and this will reduce the library\nsize since the generic implementation and its 8 KiB lookup table\nwill be omitted.\n\nOn 32-bit x86 this isn't used by default for now because by default\non 32-bit x86 the separate assembly file crc64_x86.S is used.\nIf --disable-assembler is used then this new CLMUL code is used\nthe same way as on 64-bit x86. However, a CLMUL-only build\n(-msse4.1 -mpclmul) won't omit the 8 KiB lookup table on\n32-bit x86 due to a currently-missing check for disabled\nassembler usage.\n\nThe configure.ac check should be such that the code won't be\nbuilt if something in the toolchain doesn't support it but\n--disable-clmul-crc option can be used to unconditionally\ndisable this feature.\n\nCLMUL speeds up decompression of files that have compressed very\nwell (assuming CRC64 is used as a check type). It is know that\nthe CLMUL code is significantly slower than the generic code for\ntiny inputs (especially 1-8 bytes but up to 16 bytes). If that\nis a real-world problem then there is already a commented-out\nvariant that uses the generic version for small inputs.\n\nThanks to Ilya Kurdyukov for the original patch which was\nderived from a white paper from Intel [1] (published in 2009)\nand public domain code from [2] (released in 2016).\n\n[1] https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/fast-crc-computation-generic-polynomials-pclmulqdq-paper.pdf\n[2] https://github.com/rawrunprotected/crc","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/f644473a211394447824ea00518d0a214ff3f7f2"},{"sha":"8370ec8edf9ddf8d1d9fef03d8d1027503ec4c35","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Replace the experimental ARM64 filter with a new experimental version.\n\nThis is incompatible with the previous version.\n\nThis has space/tab fixes in filter_*.c and bcj.h too.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/8370ec8edf9ddf8d1d9fef03d8d1027503ec4c35"},{"sha":"b56bc8251d2736224af6bdaaae734ceb8926a879","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Revert \"liblzma: Simple/BCJ filters: Allow disabling generic BCJ options.\"\n\nThis reverts commit 177bdc922cb17bd0fd831ab8139dfae912a5c2b8\nand also does equivalent change to arm64.c.\n\nNow that ARM64 filter will use lzma_options_bcj, this change\nis not needed anymore.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/b56bc8251d2736224af6bdaaae734ceb8926a879"},{"sha":"ce8db9e37da4f6c87691c5066f51f91f2411c44a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add NEWS for 5.2.8.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/ce8db9e37da4f6c87691c5066f51f91f2411c44a"},{"sha":"5b999ba289b3280457b7386b9ac65dbbdf1575a5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add NEWS for 5.3.4alpha.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/5b999ba289b3280457b7386b9ac65dbbdf1575a5"},{"sha":"b9a67d9a5fa207062d4aa8a01639234609315d31","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Bump version number for 5.3.4alpha.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/b9a67d9a5fa207062d4aa8a01639234609315d31"}]},"public":true,"created_at":"2022-11-15T15:36:46Z"}
