{"id":"27518836820","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":12840756005,"size":3,"distinct_size":3,"ref":"refs/heads/master","head":"5fb936786601a1cd013a5d436adde65982b1e13c","before":"f1ab1f6b339d16a53ac53efeb97779ecd2bae70f","commits":[{"sha":"f070722b57ba975a0dff36492d766f03026b1d21","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Reorder cap_enter() to beginning of capsicum sandbox code.\n\ncap_enter() puts the process into the sandbox. If later calls to\ncap_rights_limit() fail, then the process can still have some extra\nprotections.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f070722b57ba975a0dff36492d766f03026b1d21"},{"sha":"61ee82cb1232a402c82282bbae42821f2b952b0d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Skip Capsicum sandbox system calls when they are unsupported.\n\nIf a system has the Capsicum header files but does not actually\nimplement the system calls, then this would render xz unusable. Instead,\nwe can check if errno == ENOSYS and not issue a fatal error.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/61ee82cb1232a402c82282bbae42821f2b952b0d"},{"sha":"5fb936786601a1cd013a5d436adde65982b1e13c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Add warning if Capsicum sandbox system calls are unsupported.\n\nThe warning is only used when errno == ENOSYS. Otherwise, xz still\nissues a fatal error.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5fb936786601a1cd013a5d436adde65982b1e13c"}]},"public":true,"created_at":"2023-03-06T13:49:50Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27519069837","type":"IssueCommentEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/43","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/events","html_url":"https://github.com/tukaani-project/xz/pull/43","id":1610442947,"node_id":"PR_kwDOIQBEvs5LUTCK","number":43,"title":"xz: Improve compatibility with systems without capability mode support","user":{"login":"delphij","id":1045626,"node_id":"MDQ6VXNlcjEwNDU2MjY=","avatar_url":"https://avatars.githubusercontent.com/u/1045626?v=4","gravatar_id":"","url":"https://api.github.com/users/delphij","html_url":"https://github.com/delphij","followers_url":"https://api.github.com/users/delphij/followers","following_url":"https://api.github.com/users/delphij/following{/other_user}","gists_url":"https://api.github.com/users/delphij/gists{/gist_id}","starred_url":"https://api.github.com/users/delphij/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/delphij/subscriptions","organizations_url":"https://api.github.com/users/delphij/orgs","repos_url":"https://api.github.com/users/delphij/repos","events_url":"https://api.github.com/users/delphij/events{/privacy}","received_events_url":"https://api.github.com/users/delphij/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-03-05T23:55:38Z","updated_at":"2023-03-06T13:58:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/43","html_url":"https://github.com/tukaani-project/xz/pull/43","diff_url":"https://github.com/tukaani-project/xz/pull/43.diff","patch_url":"https://github.com/tukaani-project/xz/pull/43.patch","merged_at":null},"body":"When the kernel is built without capability mode support, or when using an emulator like qemu-user-static that does not translate system calls, these calls will return a negative number and set the errno to ENOSYS. However, this error does not indicate a real programming or runtime error and is generally ignored by base system applications built with capability mode sandboxing.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\nPlease check the type of change your PR introduces:\r\n- [X] Bugfix\r\n\r\n## What is the current behavior?\r\n\r\nxz would abort execution with `Failed to enable the sandbox` when capability mode system calls failed, regardless if the host system have capability mode support.\r\n\r\nIt is advisable that binaries with capability mode sandbox enabled to ignore capability mode errors when they are solely because the system does not have the support, this is done on many applications including OpenSSH and base system utilities.  In fact, FreeBSD have a set of macros called [capsicum_helpers(3)](https://man.freebsd.org/cgi/man.cgi?query=capsicum_helpers&sektion=3) which [wraps](https://cgit.freebsd.org/src/tree/lib/libcapsicum/capsicum_helpers.h#n153) this anti-pattern.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=269185\r\n\r\n\r\n## What is the new behavior?\r\n\r\nxz will ignore sandbox failures caused by the kernel lacking support of capsicum mode.\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n## Other information\r\n\r\nThe proposed patch modified `cap_*` calls to also check if the failure was caused by the lack of support (ENOSYS) and make it ignore it.  If possible, it's probably reasonable to just use `caph_*` calls found in `capsicum_helpers(3)`.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/43/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1456184989","html_url":"https://github.com/tukaani-project/xz/pull/43#issuecomment-1456184989","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/43","id":1456184989,"node_id":"IC_kwDOIQBEvs5Wy56d","user":{"login":"JiaT75","id":78042786,"node_id":"MDQ6VXNlcjc4MDQyNzg2","avatar_url":"https://avatars.githubusercontent.com/u/78042786?v=4","gravatar_id":"","url":"https://api.github.com/users/JiaT75","html_url":"https://github.com/JiaT75","followers_url":"https://api.github.com/users/JiaT75/followers","following_url":"https://api.github.com/users/JiaT75/following{/other_user}","gists_url":"https://api.github.com/users/JiaT75/gists{/gist_id}","starred_url":"https://api.github.com/users/JiaT75/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JiaT75/subscriptions","organizations_url":"https://api.github.com/users/JiaT75/orgs","repos_url":"https://api.github.com/users/JiaT75/repos","events_url":"https://api.github.com/users/JiaT75/events{/privacy}","received_events_url":"https://api.github.com/users/JiaT75/received_events","type":"User","site_admin":false},"created_at":"2023-03-06T13:58:12Z","updated_at":"2023-03-06T13:58:12Z","author_association":"MEMBER","body":"Hi @delphij! Thanks for the notifying us about the issue and for the PR. I solved it a slightly different way with the newest commits on master to avoid unneeded function calls after ENOSYS and to issue a warning message. Can you verify this solves the problem? Additionally, an extra check should be added to ax_check_capsicum.m4, but that can be added later.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1456184989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-06T13:58:13Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
