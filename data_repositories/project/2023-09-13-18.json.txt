{"id":"31812932807","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/61","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/61/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/61/events","html_url":"https://github.com/tukaani-project/xz/issues/61","id":1871183648,"node_id":"I_kwDOIQBEvs5vh_8g","number":61,"title":"Fix for CVE-2020-22916","user":{"login":"TheStoryEnd","id":84452375,"node_id":"MDQ6VXNlcjg0NDUyMzc1","avatar_url":"https://avatars.githubusercontent.com/u/84452375?v=4","gravatar_id":"","url":"https://api.github.com/users/TheStoryEnd","html_url":"https://github.com/TheStoryEnd","followers_url":"https://api.github.com/users/TheStoryEnd/followers","following_url":"https://api.github.com/users/TheStoryEnd/following{/other_user}","gists_url":"https://api.github.com/users/TheStoryEnd/gists{/gist_id}","starred_url":"https://api.github.com/users/TheStoryEnd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheStoryEnd/subscriptions","organizations_url":"https://api.github.com/users/TheStoryEnd/orgs","repos_url":"https://api.github.com/users/TheStoryEnd/repos","events_url":"https://api.github.com/users/TheStoryEnd/events{/privacy}","received_events_url":"https://api.github.com/users/TheStoryEnd/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-08-29T08:45:10Z","updated_at":"2023-09-13T18:11:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"https://nvd.nist.gov/vuln/detail/CVE-2020-22916\r\n\r\nThis link seems to be inaccessibleï¼šhttps://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability\r\n\r\nIs there a fix for CVE xz?\r\n[1] If not, what is the repair plan for xz?\r\n[2] If yes, can you indicate which submissions fix CVE-2020-22916?\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/61/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/61/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1718095305","html_url":"https://github.com/tukaani-project/xz/issues/61#issuecomment-1718095305","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/61","id":1718095305,"node_id":"IC_kwDOIQBEvs5maA3J","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-13T18:11:25Z","updated_at":"2023-09-13T18:11:25Z","author_association":"MEMBER","body":"There's now a little more information in the NVD. The [entry in Debian](https://security-tracker.debian.org/tracker/CVE-2020-22916) is somewhat informative:\r\n\r\n> Bogus CVE, original URL is gone and resource limits are a natural constraint for any unpacker\r\n\r\nThat makes me wonder if it could have been a file which uses a 4 GiB LZMA2 dictionary and thus needs lots of RAM even in single-threaded mode. xz has had memory usage limiting options for such files since the first stable version because high memory usage could be a denial of service. Strict limits (which would make xz refuse to decompress) aren't enabled by default because of the strong feedback I got before 5.0.0 was released: a too low limit can also result in a denial of service. The [Memory usage](https://tukaani.org/xz/man/xz.1.html#DESCRIPTION:_Memory_usage) section on the xz man page has been there since 5.0.0 too.\r\n\r\nThis was just a guess; the CVE could be about something else, of course. With the information I currently have, I consider this CVE to be incorrect (not a bug or a security issue).\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1718095305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-13T18:11:26Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31812976502","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/events","html_url":"https://github.com/tukaani-project/xz/pull/60","id":1867809603,"node_id":"PR_kwDOIQBEvs5Y1e5_","number":60,"title":"Make xz buildable with MSVC and add 64-bit filesize support","user":{"login":"kiyolee","id":1015967,"node_id":"MDQ6VXNlcjEwMTU5Njc=","avatar_url":"https://avatars.githubusercontent.com/u/1015967?v=4","gravatar_id":"","url":"https://api.github.com/users/kiyolee","html_url":"https://github.com/kiyolee","followers_url":"https://api.github.com/users/kiyolee/followers","following_url":"https://api.github.com/users/kiyolee/following{/other_user}","gists_url":"https://api.github.com/users/kiyolee/gists{/gist_id}","starred_url":"https://api.github.com/users/kiyolee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiyolee/subscriptions","organizations_url":"https://api.github.com/users/kiyolee/orgs","repos_url":"https://api.github.com/users/kiyolee/repos","events_url":"https://api.github.com/users/kiyolee/events{/privacy}","received_events_url":"https://api.github.com/users/kiyolee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-08-26T00:21:40Z","updated_at":"2023-09-13T18:13:21Z","closed_at":"2023-09-06T09:10:46Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/60","html_url":"https://github.com/tukaani-project/xz/pull/60","diff_url":"https://github.com/tukaani-project/xz/pull/60.diff","patch_url":"https://github.com/tukaani-project/xz/pull/60.patch","merged_at":null},"body":"To support files larger than 4 GiB on Windows, all calls of stat() and lseek() have to be redirected to 64-bit filesize capable calls.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\nNote: Compile warnings are inevitable for MSVC when some variables can be either 64-bit (target x64) or 32-bit (target Win32) at compile time. Those warnings need extensive changes to clean up.\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [X] Other (please describe): \r\n\r\nMake xz buildable with MSVC.\r\nAdd 64-bit filesize support on Windows.\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\nxz does not build with MSVC.\r\nxz would refuse to handle files larger than 4 GiB.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\nxz can be built with MSVC.\r\nxz can handle files larger than 4 GiB on Windows.\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n<!-- Any other information that is important to this PR. -->\r\n\r\nI have added extensive MSVC build support in my own repo https://github.com/kiyolee/xz-win-build.\r\nIn addition to building xz, I have added support to build all tests as well.\r\nThis PR only covers code changes that were done while setting up my own repo.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1718097831","html_url":"https://github.com/tukaani-project/xz/pull/60#issuecomment-1718097831","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/60","id":1718097831,"node_id":"IC_kwDOIQBEvs5maBen","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-13T18:13:21Z","updated_at":"2023-09-13T18:13:21Z","author_association":"MEMBER","body":"Thanks for testing! There are more commits in `xz_for_msvc` now, including CMake support. It would be awesome if you could test it with MSVC again. If you don't have time etc. then feel free to say so or ignore this. :-)\r\n\r\nI think xzdec should build now with VS2013. xz is set to require VS2015 (_MSC_VER >= 1900, that is, MSVC_VERSION >= 1900 in CMake). I don't know if a more recent VS version should be recommended in the docs, like, if there are compatibility fixes that matter.\r\n\r\n`_Noreturn` needs `/std:c11` or `/std:c17`. CMake likely doesn't set it because CMakeLists.txt only requires a C99 compiler. There is `__declspec(noreturn)` too for this case.\r\n\r\nI wonder if C11/C17 mode would be preferred for other reasons, for example, if standards conformance would be stricter and thus risk of weird bugs would be lower. [Microsoft docs](https://learn.microsoft.com/en-us/cpp/overview/install-c17-support?view=msvc-170) say that C11/C17 needs an updated Windows SDK and UCRT though. I don't have much clue about these. Would using C11/C17 mode affect how old Windows versions can run the resulting binaries?\r\n\r\nAbout `con` and friends. At least with MinGW-w64 builds it seems to be a problem (possibly a security issue). `xz -d -S_xz con_xz` decompresses to console even though `open` is used with `O_EXCL`. I'm not sure how to fix. I would expect Windows to have an API to check for problematic filenames instead of apps needing to roll their own checking code. The code used with DJGPP isn't compatible with anything else.\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1718097831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-13T18:13:22Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
