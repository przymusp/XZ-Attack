{"id":"36857790355","type":"IssueCommentEvent","actor":{"id":5266048,"login":"redspot","display_login":"redspot","gravatar_id":"","url":"https://api.github.com/users/redspot","avatar_url":"https://avatars.githubusercontent.com/u/5266048?"},"repo":{"id":52855516,"name":"Homebrew/homebrew-core","url":"https://api.github.com/repos/Homebrew/homebrew-core"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826","repository_url":"https://api.github.com/repos/Homebrew/homebrew-core","labels_url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826/labels{/name}","comments_url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826/comments","events_url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826/events","html_url":"https://github.com/Homebrew/homebrew-core/issues/163826","id":2150057643,"node_id":"I_kwDOAyaC3M6AJ0ar","number":163826,"title":"Several upstream bottles cause segfault. related to old `patchelf.rb` bugs.","user":{"login":"redspot","id":5266048,"node_id":"MDQ6VXNlcjUyNjYwNDg=","avatar_url":"https://avatars.githubusercontent.com/u/5266048?v=4","gravatar_id":"","url":"https://api.github.com/users/redspot","html_url":"https://github.com/redspot","followers_url":"https://api.github.com/users/redspot/followers","following_url":"https://api.github.com/users/redspot/following{/other_user}","gists_url":"https://api.github.com/users/redspot/gists{/gist_id}","starred_url":"https://api.github.com/users/redspot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redspot/subscriptions","organizations_url":"https://api.github.com/users/redspot/orgs","repos_url":"https://api.github.com/users/redspot/repos","events_url":"https://api.github.com/users/redspot/events{/privacy}","received_events_url":"https://api.github.com/users/redspot/received_events","type":"User","site_admin":false},"labels":[{"id":334192072,"node_id":"MDU6TGFiZWwzMzQxOTIwNzI=","url":"https://api.github.com/repos/Homebrew/homebrew-core/labels/bug","name":"bug","color":"e10c02","default":true,"description":"Reproducible Homebrew/homebrew-core bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":41,"created_at":"2024-02-22T22:35:15Z","updated_at":"2024-03-25T14:50:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### `brew gist-logs <formula>` link OR `brew config` AND `brew doctor` output\r\n\r\n```shell\r\n$ brew config\r\nHOMEBREW_VERSION: 4.2.9-88-g94e987e\r\nORIGIN: https://github.com/Homebrew/brew\r\nHEAD: 94e987ee65fa6ae564f86d37fe21b5ad81a258d4\r\nLast commit: 26 minutes ago\r\nCore tap HEAD: 3e47b3bac60e610ea8fcdfcf9693c25812ef1727\r\nCore tap last commit: 3 months ago\r\nCore tap JSON: 22 Feb 21:25 UTC\r\nHOMEBREW_PREFIX: /home/linuxbrew/.linuxbrew\r\nHOMEBREW_CASK_OPTS: []\r\nHOMEBREW_DISPLAY: :0\r\nHOMEBREW_GITHUB_API_TOKEN: set\r\nHOMEBREW_MAKE_JOBS: 8\r\nHOMEBREW_SORBET_RUNTIME: set\r\nSUDO_ASKPASS: /home/wmartin45/bin/askpass-kdewallet\r\nHomebrew Ruby: 3.1.4 => /home/linuxbrew/.linuxbrew/Homebrew/Library/Homebrew/vendor/portable-ruby/3.1.4/bin/ruby\r\nCPU: octa-core 64-bit skylake\r\nClang: 17.0.6\r\nGit: 2.39.3 => /bin/git\r\nCurl: 7.61.1 => /bin/curl\r\nKernel: Linux 4.18.0-513.5.1.el8_9.x86_64 x86_64 GNU/Linux\r\nOS: Red Hat Enterprise Linux release 8.9 (Ootpa)\r\nHost glibc: 2.28\r\n/usr/bin/gcc: 8.5.0\r\n/usr/bin/ruby: N/A\r\nglibc: 2.35_1\r\ngcc@11: N/A\r\ngcc: 13.2.0\r\nxorg: N/A\r\n\r\n$ brew doctor\r\nYour system is ready to brew.\r\n$ brew update --auto-update  # no output\r\n```\r\n\r\n\r\n### Verification\r\n\r\n- [X] My \"`brew doctor` output\" says `Your system is ready to brew.` and am still able to reproduce my issue.\r\n- [X] I ran `brew update` and am still able to reproduce my issue.\r\n- [X] I have resolved all warnings from `brew doctor` and that did not fix my problem.\r\n- [X] I searched for recent similar issues at https://github.com/Homebrew/homebrew-core/issues?q=is%3Aissue and found no duplicates.\r\n\r\n### What were you trying to do (and why)?\r\n\r\nI was attempting to use several formulae installed via `brew`.\r\n* ssdeep\r\n* go\r\n* pkg-config\r\n\r\nThere are several related issues:\r\n#137991  related to old `patchelf.rb` bug\r\n#132852  bottles crashing on Centos\r\n#116841  bottles crashing on RHEL\r\n\r\n### What happened (include all command output)?\r\n\r\n```\r\n$ brew reinstall --force-bottle ssdeep\r\n==> Downloading https://ghcr.io/v2/homebrew/core/ssdeep/manifests/2.14.1\r\nAlready downloaded: /home/wmartin45/.cache/Homebrew/downloads/5d5c962b71849c67a5e3e6c0df39b82fd0b823ac868d942f93e6a1bec0a6a03b--ssdeep-2.14.1.bottle_manifest.json\r\n==> Fetching ssdeep\r\n==> Downloading https://ghcr.io/v2/homebrew/core/ssdeep/blobs/sha256:debece05c49ee73f650afa080d3f0953ac64449c79169525001e871d0888edef\r\nAlready downloaded: /home/wmartin45/.cache/Homebrew/downloads/89333f5f972034d0bbcfbdab464d33f04ced2b2f6e86f532cf6e6c95484a2b7e--ssdeep--2.14.1.x86_64_linux.bottle.tar.gz\r\n==> Reinstalling ssdeep\r\n==> Pouring ssdeep--2.14.1.x86_64_linux.bottle.tar.gz\r\n🍺  /home/linuxbrew/.linuxbrew/Cellar/ssdeep/2.14.1: 16 files, 194.9KB\r\n==> Running `brew cleanup ssdeep`...\r\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\r\nHide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\r\n$ /home/linuxbrew/.linuxbrew/bin/ssdeep -V\r\nSegmentation fault\r\n$ dmesg | grep ssdeep\r\n[4717362.289573] 3149001 (ssdeep): Uhuuh, elf segment at 0000000000401000 requested but the memory is mapped already\r\n```\r\nNote the segment that causes the problem, `0x0000000000401000`\r\n\r\nNow, take a look at the on-disk segments:\r\n```\r\n$ readelf -l /home/linuxbrew/.linuxbrew/bin/ssdeep\r\nElf file type is EXEC (Executable file)\r\nEntry point 0x4028e0\r\nThere are 11 program headers, starting at offset 64\r\n\r\nProgram Headers:\r\n  Type           Offset             VirtAddr           PhysAddr\r\n                 FileSiz            MemSiz              Flags  Align\r\n  PHDR           0x0000000000000040 0x00000000003ff040 0x00000000003ff040\r\n                 0x0000000000000268 0x0000000000000268  R E    0x8\r\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x0000000000000000 0x0000000000000000  RW     0x10\r\n  LOAD           0x0000000000000000 0x00000000003ff000 0x00000000003ff000\r\n                 0x00000000000022ae 0x00000000000022ae  RW     0x1000\r\n  INTERP         0x0000000000001308 0x0000000000400308 0x0000000000400308\r\n                 0x0000000000000025 0x0000000000000025  R      0x1\r\n      [Requesting program interpreter: /home/linuxbrew/.linuxbrew/lib/ld.so]\r\n  NOTE           0x0000000000001330 0x0000000000400330 0x0000000000400330\r\n                 0x0000000000000020 0x0000000000000020  R      0x4\r\n  NOTE           0x0000000000001350 0x0000000000400350 0x0000000000400350\r\n                 0x0000000000000024 0x0000000000000024  R      0x4\r\n  LOAD           0x00000000000022ae 0x00000000004012ae 0x00000000004012ae\r\n                 0x0000000000009917 0x0000000000009917  R E    0x1000\r\n  GNU_EH_FRAME   0x000000000000a580 0x0000000000409580 0x0000000000409580\r\n                 0x00000000000002cc 0x00000000000002cc  R      0x4\r\n  LOAD           0x000000000000bda0 0x000000000060ada0 0x000000000060ada0\r\n                 0x00000000000004f4 0x00000000000005a8  RW     0x1000\r\n  GNU_RELRO      0x000000000000bda0 0x000000000060ada0 0x000000000060ada0\r\n                 0x0000000000000260 0x0000000000000260  R      0x1\r\n  DYNAMIC        0x000000000000bdf8 0x000000000060adf8 0x000000000060adf8\r\n                 0x0000000000000200 0x0000000000000200  RW     0x8\r\n\r\n$ readelf -l /home/linuxbrew/.linuxbrew/bin/ssdeep | grep '0x0000000000401... '\r\n  LOAD           0x00000000000022ae 0x00000000004012ae 0x00000000004012ae\r\n```\r\nNote the segment `0x00000000004012ae`\r\n\r\nAlso, of interest, when run using `brew`'s interpreter, programs seem to work:\r\n```\r\n$ /home/linuxbrew/.linuxbrew/lib/ld.so /home/linuxbrew/.linuxbrew/bin/ssdeep -V\r\n2.14.1\r\n```\r\n\r\nHere is the results when built from source:\r\n```\r\n$ brew install --build-from-source ssdeep\r\n==> Fetching ssdeep\r\n==> Downloading https://raw.githubusercontent.com/Homebrew/homebrew-core/11dc5d3906c536d30245ec1bace1b73338857c9b/Formula/s/ssdeep.rb\r\n######################################################################################################################################### 100.0%\r\n==> Downloading https://github.com/ssdeep-project/ssdeep/releases/download/release-2.14.1/ssdeep-2.14.1.tar.gz\r\n==> Downloading from https://objects.githubusercontent.com/github-production-release-asset-2e65be/93355216/ae5313b0-c3b0-11e7-88a8-251ebd913c9d?\r\n######################################################################################################################################### 100.0%\r\n==> ./configure\r\n==> make install\r\n🍺  /home/linuxbrew/.linuxbrew/Cellar/ssdeep/2.14.1: 16 files, 201.6KB, built in 9 seconds\r\n==> Running `brew cleanup ssdeep`...\r\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\r\nHide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\r\n$ readelf -l /home/linuxbrew/.linuxbrew/bin/ssdeep | grep '0x0000000000401... '  # no matches\r\n$ /home/linuxbrew/.linuxbrew/bin/ssdeep -V\r\n2.14.1\r\n```\r\n\r\n### What did you expect to happen?\r\n\r\nI expect the upstream pre-built bottles to not have lingering issues with `patchelf.rb`.\r\n\r\n Now, the issues with `patchelf.rb` have been fixed, and maybe those Centos/RHEL related issues as well.\r\n\r\nIt's that the bottles still have the problem.\r\n\r\n### Step-by-step reproduction instructions (by running `brew` commands)\r\n\r\nAs mentioned in this comment: https://github.com/Homebrew/homebrew-core/issues/132852#issuecomment-1579977482\r\n\r\nSome formulas work:\r\n```shell\r\n$ /home/linuxbrew/.linuxbrew/bin/xz --version\r\nxz (XZ Utils) 5.4.5\r\nliblzma 5.4.5\r\n```\r\n\r\nSome formulas fail:\r\n```\r\n$ /home/linuxbrew/.linuxbrew/opt/pkg-config/bin/pkg-config --version\r\nSegmentation fault\r\n$ dmesg | grep pkg-config\r\n[4719592.428429] 3158801 (pkg-config): Uhuuh, elf segment at 0000000000401000 requested but the memory is mapped already\r\n$ readelf -l /home/linuxbrew/.linuxbrew/opt/pkg-config/bin/pkg-config | grep '0x0000000000401... '\r\n  LOAD           0x0000000000006dd2 0x0000000000401dd2 0x0000000000401dd2\r\n$ /home/linuxbrew/.linuxbrew/lib/ld.so /home/linuxbrew/.linuxbrew/opt/pkg-config/bin/pkg-config --version\r\n0.29.2\r\n$ readlink -f /home/linuxbrew/.linuxbrew/lib/ld.so\r\n/home/linuxbrew/.linuxbrew/Cellar/glibc/2.35_1/lib/ld-linux-x86-64.so.2\r\n```\r\nNote the kernel reporting the same segment, `0x0000000000401000`, and readelf showing that segment. And, it strangely works when run with `brew`'s interpreter.\r\n\r\nwhen building from source:\r\n```\r\n$ brew reinstall --build-from-source pkg-config\r\nWarning: building from source is not supported!\r\nYou're on your own. Failures are expected so don't create any issues, please!\r\n==> Fetching pkg-config\r\n==> Downloading https://raw.githubusercontent.com/Homebrew/homebrew-core/11dc5d3906c536d30245ec1bace1b73338857c9b/Formula/p/pkg-config.rb\r\n######################################################################################################################################### 100.0%\r\n==> Downloading https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz\r\n######################################################################################################################################### 100.0%\r\n==> Reinstalling pkg-config\r\n==> ./configure --disable-host-tool --with-internal-glib --with-pc-path=/home/linuxbrew/.linuxbrew/lib/pkgconfig:/home/linuxbrew/.linuxbrew/shar\r\n==> make\r\n==> make install\r\n🍺  /home/linuxbrew/.linuxbrew/Cellar/pkg-config/0.29.2_3: 11 files, 750.6KB, built in 40 seconds\r\n==> Running `brew cleanup pkg-config`...\r\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\r\nHide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\r\n$ readelf -l /home/linuxbrew/.linuxbrew/opt/pkg-config/bin/pkg-config | grep '0x0000000000401... '  # no matches\r\n$ /home/linuxbrew/.linuxbrew/opt/pkg-config/bin/pkg-config --version\r\n0.29.2\r\n```\r\n\r\nIt also seems reliable to detect the bad packages by looking for a segment that matches the regex `0x0000000000401...`.\r\n","reactions":{"url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/comments/2018182614","html_url":"https://github.com/Homebrew/homebrew-core/issues/163826#issuecomment-2018182614","issue_url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/163826","id":2018182614,"node_id":"IC_kwDOAyaC3M54SwXW","user":{"login":"redspot","id":5266048,"node_id":"MDQ6VXNlcjUyNjYwNDg=","avatar_url":"https://avatars.githubusercontent.com/u/5266048?v=4","gravatar_id":"","url":"https://api.github.com/users/redspot","html_url":"https://github.com/redspot","followers_url":"https://api.github.com/users/redspot/followers","following_url":"https://api.github.com/users/redspot/following{/other_user}","gists_url":"https://api.github.com/users/redspot/gists{/gist_id}","starred_url":"https://api.github.com/users/redspot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redspot/subscriptions","organizations_url":"https://api.github.com/users/redspot/orgs","repos_url":"https://api.github.com/users/redspot/repos","events_url":"https://api.github.com/users/redspot/events{/privacy}","received_events_url":"https://api.github.com/users/redspot/received_events","type":"User","site_admin":false},"created_at":"2024-03-25T14:50:19Z","updated_at":"2024-03-25T14:50:19Z","author_association":"NONE","body":"@Bo98 Ok, I'll give that patch a try.\r\n\r\nFirst, I'll make sure everything is up-to-date:\r\n```\r\n$ brew update\r\n==> Updating Homebrew...\r\nAlready up-to-date.\r\n$ brew upgrade\r\n==> Auto-updating Homebrew...\r\nAdjust how often this is run with HOMEBREW_AUTO_UPDATE_SECS or disable with\r\nHOMEBREW_NO_AUTO_UPDATE. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\r\n\r\n$ brew doctor\r\nYour system is ready to brew.\r\n\r\n$ brew config\r\nHOMEBREW_VERSION: 4.2.15-4-g966f819\r\nORIGIN: https://github.com/Homebrew/brew\r\nHEAD: 966f819deb81796a1b9ea91abc65ab433c70362b\r\nLast commit: 2 hours ago\r\nCore tap HEAD: f74275618b8a99822357df93e75e86934b2620df\r\nCore tap last commit: 3 minutes ago\r\nCore tap JSON: 25 Mar 13:39 UTC\r\nHOMEBREW_PREFIX: /home/linuxbrew/.linuxbrew\r\nHOMEBREW_CASK_OPTS: []\r\nHOMEBREW_DISPLAY: :0\r\nHOMEBREW_EDITOR: vim\r\nHOMEBREW_GITHUB_API_TOKEN: set\r\nHOMEBREW_MAKE_JOBS: 8\r\nHOMEBREW_SORBET_RUNTIME: set\r\nSUDO_ASKPASS: /home/wmartin45/bin/askpass-kdewallet\r\nHomebrew Ruby: 3.1.4 => /home/linuxbrew/.linuxbrew/Homebrew/Library/Homebrew/vendor/portable-ruby/3.1.4/bin/ruby\r\nCPU: octa-core 64-bit skylake\r\nClang: 17.0.6\r\nGit: 2.44.0 => /home/linuxbrew/.linuxbrew/bin/git\r\nCurl: 7.61.1 => /bin/curl\r\nKernel: Linux 4.18.0-513.18.1.el8_9.x86_64 x86_64 GNU/Linux\r\nOS: Red Hat Enterprise Linux release 8.9 (Ootpa)\r\nHost glibc: 2.28\r\n/usr/bin/gcc: 8.5.0\r\n/usr/bin/ruby: N/A\r\nglibc: 2.35_1\r\ngcc@11: N/A\r\ngcc: 13.2.0\r\nxorg: N/A\r\n\r\n$ cd $(brew --repo) && pwd\r\n/home/linuxbrew/.linuxbrew/Homebrew\r\n\r\n$ git apply --check patchelf.patch && git apply --summary patchelf.patch\r\n$ # no output\r\n```\r\n\r\nSo, it seems like the patch is already applied upstream.\r\n\r\nNext, I'll try the steps suggested by @Shaloc :\r\n```\r\n$ brew uninstall --ignore-dependencies xz\r\nUninstalling /home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1... (167 files, 2.8MB)\r\n\r\n$ brew install --build-bottle xz\r\n==> Auto-updating Homebrew...\r\nAdjust how often this is run with HOMEBREW_AUTO_UPDATE_SECS or disable with\r\nHOMEBREW_NO_AUTO_UPDATE. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\r\n==> Fetching xz\r\n==> Downloading https://raw.githubusercontent.com/Homebrew/homebrew-core/14af31c6a3799ffe63a6cd74c6f738d48f549ef4/Formula/x/xz.rb\r\n######################################################################################################################################### 100.0%\r\n==> Downloading https://github.com/tukaani-project/xz/releases/download/v5.6.1/xz-5.6.1.tar.gz\r\n==> Downloading from https://objects.githubusercontent.com/github-production-release-asset-2e65be/553665726/20b30ac5-c91c-4dc7-85a1-2b41dd49d6cb\r\n######################################################################################################################################### 100.0%\r\n==> ./configure --disable-silent-rules --disable-nls\r\n==> make check\r\n==> make install\r\n==> Not running 'post_install' as we're building a bottle\r\nYou can run it manually using:\r\n  brew postinstall xz\r\n🍺  /home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1: 167 files, 2.7MB, built in 29 seconds\r\n==> Running `brew cleanup xz`...\r\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\r\nHide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\r\n\r\n$ brew postinstall xz\r\n==> Postinstalling xz\r\nWarning: xz: no `post_install` method was defined in the formula!\r\n```\r\n\r\nLet's check `xz` before bottling:\r\n```\r\n$ readlink -f $(brew --prefix)/opt/xz/bin/xz\r\n/home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1/bin/xz\r\n\r\n$ /home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1/bin/xz --version  # before brew bottle\r\nxz (XZ Utils) 5.6.1\r\nliblzma 5.6.1\r\n```\r\nNo segfault. Now, we try bottling:\r\n```\r\n$ brew bottle xz\r\n==> Determining xz bottle rebuild...\r\n==> Bottling xz--5.6.1.x86_64_linux.bottle.1.tar.gz...\r\n./xz--5.6.1.x86_64_linux.bottle.1.tar.gz\r\n  bottle do\r\n    rebuild 1\r\n    sha256 cellar: :any_skip_relocation, x86_64_linux: \"e519149ba6e96fc972118e41fcb49f3aabfa3b290c911fdf969044ac78ec78e8\"\r\n  end\r\n\r\n$ /home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1/bin/xz --version  # after brew bottle\r\nxz (XZ Utils) 5.6.1\r\nliblzma 5.6.1\r\n```\r\nAlso no segfault.\r\n\r\nAnd, finally let's check the virtual address maps from the ELF header:\r\n```\r\n$ readelf -l /home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1/bin/xz \\\r\n| awk '/(\\s0x[[:xdigit:]]{16}){3}/{print $3}'\r\n0x0000000000000040\r\n0x0000000000000000\r\n0x0000000000000000\r\n0x0000000000004000\r\n0x000000000000f000\r\n0x00000000000129a0\r\n0x0000000000015230\r\n0x0000000000015230\r\n0x0000000000015db0\r\n0x000000000001c000\r\n0x000000000001c378\r\n0x000000000001c398\r\n0x000000000001c398\r\n0x000000000001d000\r\n0x000000000001e000\r\n0x000000000001f000\r\n0x000000000001f828\r\n\r\n$ readelf -l /home/linuxbrew/.linuxbrew/Cellar/xz/5.6.1/bin/xz \\\r\n| awk '/(\\s0x[[:xdigit:]]{16}){3}/{print $3}' \\\r\n| cut -c 12-\r\n0000040\r\n0000000\r\n0000000\r\n0004000\r\n000f000\r\n00129a0\r\n0015230\r\n0015230\r\n0015db0\r\n001c000\r\n001c378\r\n001c398\r\n001c398\r\n001d000\r\n001e000\r\n001f000\r\n001f828\r\n```\r\nNo segments match virtual address `0x400000-0x4fffff`.\r\n\r\nand, here's some kernel info:\r\n```\r\n$ dnf info kernel-core-4.18.0-513.18.1.el8_9\r\nNot root, Subscription Management repositories not updated\r\nRed Hat CodeReady Linux Builder for RHEL 8 x86_64 (RPMs)                                                        165 kB/s | 4.5 kB     00:00    \r\nInstalled Packages\r\nName         : kernel-core\r\nVersion      : 4.18.0\r\nRelease      : 513.18.1.el8_9\r\nArchitecture : x86_64\r\nSize         : 71 M\r\nSource       : kernel-4.18.0-513.18.1.el8_9.src.rpm\r\nRepository   : @System\r\nFrom repo    : rhel-8-for-x86_64-baseos-rpms\r\nSummary      : The Linux kernel\r\nURL          : http://www.kernel.org/\r\nLicense      : GPLv2 and Redistributable, no modification permitted\r\nDescription  : The kernel package contains the Linux kernel (vmlinuz), the core of any\r\n             : Linux operating system.  The kernel handles the basic functions\r\n             : of the operating system: memory allocation, process allocation, device\r\n             : input and output, etc.\r\n```","reactions":{"url":"https://api.github.com/repos/Homebrew/homebrew-core/issues/comments/2018182614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-25T14:50:20Z","org":{"id":1503512,"login":"Homebrew","gravatar_id":"","url":"https://api.github.com/orgs/Homebrew","avatar_url":"https://avatars.githubusercontent.com/u/1503512?"}}
