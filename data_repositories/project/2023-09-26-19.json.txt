{"id":"32122777670","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15191630718,"size":5,"distinct_size":3,"ref":"refs/heads/build_werror","head":"671bac01e3c95ba2006ad6fe560a0bd7d753f006","before":"eaa22d181699bf09f1faba5d37b802c01dd5f9a7","commits":[{"sha":"8ebaf3f665ddc7e4f19c613005050dde5ccbe499","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Avoid compiler warning without creating extra symbol.\n\nWhen the generic fast crc64 method is used, then we omit\nlzma_crc64_table[][]. Similar to\nd9166b52cf3458a4da3eb92224837ca8fc208d79, we can avoid compiler warnings\nwith -Wempty-translation-unit (Clang) or -pedantic (GCC) by creating a\nnever used typedef instead of an extra symbol.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8ebaf3f665ddc7e4f19c613005050dde5ccbe499"},{"sha":"5a9af95f85a7e5d4f9c10cb8cf737651a921f1d1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Update a comment.\n\nThe C standards don't allow an empty translation unit which can be\navoided by declaring something, without exporting any symbols.\n\nWhen I committed f644473a211394447824ea00518d0a214ff3f7f2 I had\na feeling that some specific toolchain somewhere didn't like\nempty object files (assembler or maybe \"ar\" complained) but\nI cannot find anything to confirm this now. Quite likely I\nremembered nonsense. I leave this here as a note to my future self. :-)","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5a9af95f85a7e5d4f9c10cb8cf737651a921f1d1"},{"sha":"444e76174c8647b483e0a3049e358e15ecfd5ce5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: If using a GCC compatible compiler, ensure that -Werror works.\n\nThe check can be skipped by passing SKIP_WERROR_CHECK=yes to configure.\nIt won't be documented anywhere else than in the error message.\n\nWays to test:\n\n    ./configure CC=gcc CFLAGS=-Wunused-macros\n    ./configure CC=clang CFLAGS=-Weverything\n    ./configure CC=clang CFLAGS=-Weverything SKIP_WERROR_CHECK=yes","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/444e76174c8647b483e0a3049e358e15ecfd5ce5"},{"sha":"b9dc9a1046807a67d1ddf05efbeb3e3b1d68a15e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Remove the FIXME about -Werror checks.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b9dc9a1046807a67d1ddf05efbeb3e3b1d68a15e"},{"sha":"671bac01e3c95ba2006ad6fe560a0bd7d753f006","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Fix silently-ignored attribute problem on CompCert 3.12.\n\nTested on godbolt.org only.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/671bac01e3c95ba2006ad6fe560a0bd7d753f006"}]},"public":true,"created_at":"2023-09-26T19:50:54Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
