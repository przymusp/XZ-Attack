{"id":"31835449833","type":"CreateEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"clmul_disable_asan","ref_type":"branch","master_branch":"master","description":"XZ Utils Official Repository","pusher_type":"user"},"public":true,"created_at":"2023-09-14T13:16:23Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31836213088","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15042959431,"size":1,"distinct_size":1,"ref":"refs/heads/clmul_disable_asan","head":"ad3425b5cfaae22dda2e4f2bd1c2ed40ca148187","before":"bf65f25ac8fa8b6686459c004759d8b77ba17502","commits":[{"sha":"ad3425b5cfaae22dda2e4f2bd1c2ed40ca148187","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Enable CLMUL in address sanitization test.\n\nThe crc64_clmul() function should be ignored by the address sanitizer\nnow so these builds should still pass.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ad3425b5cfaae22dda2e4f2bd1c2ed40ca148187"}]},"public":true,"created_at":"2023-09-14T13:40:36Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31836292329","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15042996627,"size":2,"distinct_size":2,"ref":"refs/heads/master","head":"f167e79bc98f3f56af2e767b83aa81c2d2b9ed77","before":"7379bb3eed428c0ae734d0cc4a1fd04359d53f08","commits":[{"sha":"4f44ef86758a41a8ec814096f4cb6ee6de04c82e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Mark crc64_clmul() with __attribute__((__no_sanitize_address__)).\n\nThanks to Agostino Sarubbo.\nFixes: https://github.com/tukaani-project/xz/issues/62","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4f44ef86758a41a8ec814096f4cb6ee6de04c82e"},{"sha":"f167e79bc98f3f56af2e767b83aa81c2d2b9ed77","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f167e79bc98f3f56af2e767b83aa81c2d2b9ed77"}]},"public":true,"created_at":"2023-09-14T13:43:08Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31836292977","type":"IssuesEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/62","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/events","html_url":"https://github.com/tukaani-project/xz/issues/62","id":1895950655,"node_id":"I_kwDOIQBEvs5xAek_","number":62,"title":"[Bug]: test failure because of a global-buffer-overflow","user":{"login":"asarubbo","id":4741819,"node_id":"MDQ6VXNlcjQ3NDE4MTk=","avatar_url":"https://avatars.githubusercontent.com/u/4741819?v=4","gravatar_id":"","url":"https://api.github.com/users/asarubbo","html_url":"https://github.com/asarubbo","followers_url":"https://api.github.com/users/asarubbo/followers","following_url":"https://api.github.com/users/asarubbo/following{/other_user}","gists_url":"https://api.github.com/users/asarubbo/gists{/gist_id}","starred_url":"https://api.github.com/users/asarubbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asarubbo/subscriptions","organizations_url":"https://api.github.com/users/asarubbo/orgs","repos_url":"https://api.github.com/users/asarubbo/repos","events_url":"https://api.github.com/users/asarubbo/events{/privacy}","received_events_url":"https://api.github.com/users/asarubbo/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-09-14T07:48:04Z","updated_at":"2023-09-14T13:43:08Z","closed_at":"2023-09-14T13:43:08Z","author_association":"NONE","active_lock_reason":null,"body":"### Describe the bug\n\nOur [Gentoo Tinderbox](https://blogs.gentoo.org/ago/2020/07/04/gentoo-tinderbox/) reported a test failure at [bug 914170](https://bugs.gentoo.org/914170)\r\n\r\nBy looking at test-suite.log I can see:\r\n\r\n```\r\n==1161==ERROR: AddressSanitizer: global-buffer-overflow on address 0x5614ecd418a0 at pc 0x7f8d20216905 bp 0x7ffd6a482040 sp 0x7ffd6a482038\r\nREAD of size 16 at 0x5614ecd418a0 thread T0\r\n    #0 0x7f8d20216904 in crc64_clmul /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/src/liblzma/check/crc64_fast.c:284:40\r\n    #1 0x5614ecd2a53c in test_lzma_crc64 /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:106:2\r\n    #2 0x5614ecd2a237 in tuktest_run_test /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/tuktest.h:596:4\r\n    #3 0x5614ecd29cec in main /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:383:2\r\n    #4 0x7f8d1fe23c89  (/lib64/libc.so.6+0x23c89)\r\n    #5 0x7f8d1fe23d44 in __libc_start_main (/lib64/libc.so.6+0x23d44)\r\n    #6 0x5614ecc553f0 in _start (/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4-abi_x86_64.amd64/tests/.libs/test_check+0x203f0)\r\n\r\n0x5614ecd418a0 is located 32 bytes before global variable '.str.42' defined in '/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:78' (0x5614ecd418c0) of size 51\r\n  '.str.42' is ascii string 'assert_uint: '%s == %lu' but expected '... %s %lu''\r\n0x5614ecd418a9 is located 0 bytes after global variable 'test_string' defined in '/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:22' (0x5614ecd418a0) of size 9\r\nSUMMARY: AddressSanitizer: global-buffer-overflow /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/src/liblzma/check/crc64_fast.c:284:40 in crc64_clmul\r\nShadow bytes around the buggy address:\r\n  0x5614ecd41600: 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9\r\n  0x5614ecd41680: 00 00 00 03 f9 f9 f9 f9 00 00 00 00 00 00 00 04\r\n  0x5614ecd41700: f9 f9 f9 f9 06 f9 f9 f9 06 f9 f9 f9 07 f9 f9 f9\r\n  0x5614ecd41780: 00 07 f9 f9 00 04 f9 f9 00 02 f9 f9 00 00 00 00\r\n  0x5614ecd41800: 00 06 f9 f9 f9 f9 f9 f9 00 00 00 00 00 02 f9 f9\r\n=>0x5614ecd41880: f9 f9 f9 f9[00]01 f9 f9 00 00 00 00 00 00 03 f9\r\n  0x5614ecd41900: f9 f9 f9 f9 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9\r\n  0x5614ecd41980: 03 f9 f9 f9 00 04 f9 f9 00 00 00 00 00 00 07 f9\r\n  0x5614ecd41a00: f9 f9 f9 f9 04 f9 f9 f9 00 00 00 02 f9 f9 f9 f9\r\n  0x5614ecd41a80: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00\r\n  0x5614ecd41b00: 00 00 07 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==1161==ABORTING\r\n```\r\n\r\nI didn't look deeply into this issue so I don't know if the bug is in the unittest itself or in the involed libraries/daemons, if so please check for any security implications. I'm not doing a private report since it is already public on gentoo bugzilla.\r\nIf I can do further, please let me know.\n\n### Version\n\n5.4.4\n\n### Operating System\n\nGentoo\n\n### Relevant log output\n\n_No response_","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/62/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-09-14T13:43:09Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31836320869","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15043010058,"size":3,"distinct_size":1,"ref":"refs/heads/clmul_disable_asan","head":"953e775941a25bfcfa353f802b13e66acb1edf2c","before":"ad3425b5cfaae22dda2e4f2bd1c2ed40ca148187","commits":[{"sha":"4f44ef86758a41a8ec814096f4cb6ee6de04c82e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Mark crc64_clmul() with __attribute__((__no_sanitize_address__)).\n\nThanks to Agostino Sarubbo.\nFixes: https://github.com/tukaani-project/xz/issues/62","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4f44ef86758a41a8ec814096f4cb6ee6de04c82e"},{"sha":"f167e79bc98f3f56af2e767b83aa81c2d2b9ed77","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f167e79bc98f3f56af2e767b83aa81c2d2b9ed77"},{"sha":"953e775941a25bfcfa353f802b13e66acb1edf2c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Enable CLMUL in address sanitization test.\n\nThe crc64_clmul() function should be ignored by the address sanitizer\nnow so these builds should still pass.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/953e775941a25bfcfa353f802b13e66acb1edf2c"}]},"public":true,"created_at":"2023-09-14T13:44:04Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31836444072","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/62","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/events","html_url":"https://github.com/tukaani-project/xz/issues/62","id":1895950655,"node_id":"I_kwDOIQBEvs5xAek_","number":62,"title":"[Bug]: test failure because of a global-buffer-overflow","user":{"login":"asarubbo","id":4741819,"node_id":"MDQ6VXNlcjQ3NDE4MTk=","avatar_url":"https://avatars.githubusercontent.com/u/4741819?v=4","gravatar_id":"","url":"https://api.github.com/users/asarubbo","html_url":"https://github.com/asarubbo","followers_url":"https://api.github.com/users/asarubbo/followers","following_url":"https://api.github.com/users/asarubbo/following{/other_user}","gists_url":"https://api.github.com/users/asarubbo/gists{/gist_id}","starred_url":"https://api.github.com/users/asarubbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asarubbo/subscriptions","organizations_url":"https://api.github.com/users/asarubbo/orgs","repos_url":"https://api.github.com/users/asarubbo/repos","events_url":"https://api.github.com/users/asarubbo/events{/privacy}","received_events_url":"https://api.github.com/users/asarubbo/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-09-14T07:48:04Z","updated_at":"2023-09-14T13:47:56Z","closed_at":"2023-09-14T13:43:08Z","author_association":"NONE","active_lock_reason":null,"body":"### Describe the bug\n\nOur [Gentoo Tinderbox](https://blogs.gentoo.org/ago/2020/07/04/gentoo-tinderbox/) reported a test failure at [bug 914170](https://bugs.gentoo.org/914170)\r\n\r\nBy looking at test-suite.log I can see:\r\n\r\n```\r\n==1161==ERROR: AddressSanitizer: global-buffer-overflow on address 0x5614ecd418a0 at pc 0x7f8d20216905 bp 0x7ffd6a482040 sp 0x7ffd6a482038\r\nREAD of size 16 at 0x5614ecd418a0 thread T0\r\n    #0 0x7f8d20216904 in crc64_clmul /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/src/liblzma/check/crc64_fast.c:284:40\r\n    #1 0x5614ecd2a53c in test_lzma_crc64 /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:106:2\r\n    #2 0x5614ecd2a237 in tuktest_run_test /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/tuktest.h:596:4\r\n    #3 0x5614ecd29cec in main /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:383:2\r\n    #4 0x7f8d1fe23c89  (/lib64/libc.so.6+0x23c89)\r\n    #5 0x7f8d1fe23d44 in __libc_start_main (/lib64/libc.so.6+0x23d44)\r\n    #6 0x5614ecc553f0 in _start (/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4-abi_x86_64.amd64/tests/.libs/test_check+0x203f0)\r\n\r\n0x5614ecd418a0 is located 32 bytes before global variable '.str.42' defined in '/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:78' (0x5614ecd418c0) of size 51\r\n  '.str.42' is ascii string 'assert_uint: '%s == %lu' but expected '... %s %lu''\r\n0x5614ecd418a9 is located 0 bytes after global variable 'test_string' defined in '/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:22' (0x5614ecd418a0) of size 9\r\nSUMMARY: AddressSanitizer: global-buffer-overflow /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/src/liblzma/check/crc64_fast.c:284:40 in crc64_clmul\r\nShadow bytes around the buggy address:\r\n  0x5614ecd41600: 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9\r\n  0x5614ecd41680: 00 00 00 03 f9 f9 f9 f9 00 00 00 00 00 00 00 04\r\n  0x5614ecd41700: f9 f9 f9 f9 06 f9 f9 f9 06 f9 f9 f9 07 f9 f9 f9\r\n  0x5614ecd41780: 00 07 f9 f9 00 04 f9 f9 00 02 f9 f9 00 00 00 00\r\n  0x5614ecd41800: 00 06 f9 f9 f9 f9 f9 f9 00 00 00 00 00 02 f9 f9\r\n=>0x5614ecd41880: f9 f9 f9 f9[00]01 f9 f9 00 00 00 00 00 00 03 f9\r\n  0x5614ecd41900: f9 f9 f9 f9 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9\r\n  0x5614ecd41980: 03 f9 f9 f9 00 04 f9 f9 00 00 00 00 00 00 07 f9\r\n  0x5614ecd41a00: f9 f9 f9 f9 04 f9 f9 f9 00 00 00 02 f9 f9 f9 f9\r\n  0x5614ecd41a80: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00\r\n  0x5614ecd41b00: 00 00 07 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==1161==ABORTING\r\n```\r\n\r\nI didn't look deeply into this issue so I don't know if the bug is in the unittest itself or in the involed libraries/daemons, if so please check for any security implications. I'm not doing a private report since it is already public on gentoo bugzilla.\r\nIf I can do further, please let me know.\n\n### Version\n\n5.4.4\n\n### Operating System\n\nGentoo\n\n### Relevant log output\n\n_No response_","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/62/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/62/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1719489932","html_url":"https://github.com/tukaani-project/xz/issues/62#issuecomment-1719489932","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/62","id":1719489932,"node_id":"IC_kwDOIQBEvs5mfVWM","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-14T13:47:55Z","updated_at":"2023-09-14T13:47:55Z","author_association":"MEMBER","body":"Thanks!\r\n\r\nIt's fixed in the master branch now. The problem is that `crc64_clmul` uses 16-byte-aligned reads and this unavoidably trips the address sanitizer. The CI builds used `-fsanitize=address` but ci.yml worked around the problem with `--disable-clmul-crc`. Now there is `__attribute__((__no_sanitize_address__))` so the workaround isn't needed anymore.\r\n\r\nAfter 5.4.x (including the current master branch) you will need `--disable-ifunc` to make `-fsanitize=address` work. This is because `__attribute__((__ifunc(..)))` isn't compatible with address sanitizer. See [this](https://sourceware.org/glibc/wiki/GNU_IFUNC), search for \"asan\". The ifunc code likely won't be included in 5.4.x releases.\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1719489932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-14T13:47:56Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
