{"id":"25513545800","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":453091377,"name":"JiaT75/XZ_Utils_Unofficial","url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial"},"payload":{"push_id":11809239611,"size":29,"distinct_size":29,"ref":"refs/heads/main","head":"032a8a9b4971e55763cd28f31b6019afaa89de68","before":"b3c67de8e771a98272ba5a32297233144ad5d195","commits":[{"sha":"a11a2b8b5e830ba682c1d81aaa7078842b296995","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Adds test_memlimit to CMake tests","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/a11a2b8b5e830ba682c1d81aaa7078842b296995"},{"sha":"d327743bb547a53364e5951a16e5f1663fe4b9ff","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Add support --threads=+N so that -T+1 gives threaded mode.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/d327743bb547a53364e5951a16e5f1663fe4b9ff"},{"sha":"649d4872ed2f55196114a061d45b416fc4353569","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Refactor duplicate code from hardware_memlimit_mtenc_get().","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/649d4872ed2f55196114a061d45b416fc4353569"},{"sha":"f50534c973a591ccf65485adfc827a8a7126ca6c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix two Doxygen commands in the API headers.\n\nThese were caught by clang -Wdocumentation.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/f50534c973a591ccf65485adfc827a8a7126ca6c"},{"sha":"c392bf8ccba857baaf50399c4b460119befacd54","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix infinite loop in LZMA encoder init with dict_size >= 2 GiB.\n\nThe encoder doesn't support dictionary sizes larger than 1536 MiB.\nThis is validated, for example, when calculating the memory usage\nvia lzma_raw_encoder_memusage(). It is also enforced by the LZ\npart of the encoder initialization. However, LZMA encoder with\nLZMA_MODE_NORMAL did an unsafe calculation with dict_size before\nsuch validation and that results in an infinite loop if dict_size\nwas 2 << 30 or greater.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/c392bf8ccba857baaf50399c4b460119befacd54"},{"sha":"cafd6dc397ca8b5b5f7775e8d6876b8fe70f8e70","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix language in a comment.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/cafd6dc397ca8b5b5f7775e8d6876b8fe70f8e70"},{"sha":"10430fbf3820dafd4eafd38ec8be161a6978ed2b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix invalid free() after memory allocation failure.\n\nThe bug was in the single-threaded .xz Stream encoder\nin the code that is used for both re-initialization and for\nlzma_filters_update(). To trigger it, an application had\nto either re-initialize an existing encoder instance with\nlzma_stream_encoder() or use lzma_filters_update(), and\nthen one of the 1-4 tiny allocations in lzma_filters_copy()\n(called from stream_encoder_update()) must fail. An error\nwas correctly reported but the encoder state was corrupted.\n\nThis is related to the recent fix in\nf8ee61e74eb40600445fdb601c374d582e1e9c8a which is good but\nit wasn't enough to fix the main problem in stream_encoder.c.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/10430fbf3820dafd4eafd38ec8be161a6978ed2b"},{"sha":"48c1b99dc537a27e1ca929d8837e778e5ba32191","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add lzma_attr_warn_unused_result to lzma_filters_copy().","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/48c1b99dc537a27e1ca929d8837e778e5ba32191"},{"sha":"ae1f8a723dcde2f2c5cf444bcbb5fc5026b3c3c5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Don't use symbol versioning with static library.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/ae1f8a723dcde2f2c5cf444bcbb5fc5026b3c3c5"},{"sha":"d0901645170b638c517f5c50866b6ef48f491c65","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add new API function lzma_filters_free().\n\nThis is small but convenient and should have been added\na long time ago.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/d0901645170b638c517f5c50866b6ef48f491c65"},{"sha":"75f1a6c26df4ce329da0882786403e3ccf5cd898","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add support for LZMA_SYNC_FLUSH in the Block encoder.\n\nThe documentation mentions that lzma_block_encoder() supports\nLZMA_SYNC_FLUSH but it was never added to supported_actions[]\nin the internal structure. Because of this, LZMA_SYNC_FLUSH could\nnot be used with the Block encoder unless it was the next coder\nafter something like stream_encoder() or stream_encoder_mt().","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/75f1a6c26df4ce329da0882786403e3ccf5cd898"},{"sha":"cb05dbcf8b868441ec805016222f3fd77f1c5caa","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix another invalid free() after memory allocation failure.\n\nThis time it can happen when lzma_stream_encoder_mt() is used\nto reinitialize an existing multi-threaded Stream encoder\nand one of 1-4 tiny allocations in lzma_filters_copy() fail.\n\nIt's very similar to the previous bug\n10430fbf3820dafd4eafd38ec8be161a6978ed2b, happening with\nan array of lzma_filter structures whose old options are freed\nbut the replacement never arrives due to a memory allocation\nfailure in lzma_filters_copy().","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/cb05dbcf8b868441ec805016222f3fd77f1c5caa"},{"sha":"e1acf7107291f8b3d6d609a7133331ff36d35d14","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Refactor to use lzma_filters_free().\n\nlzma_filters_free() sets the options to NULL and ids to\nLZMA_VLI_UNKNOWN so there is no need to do it by caller;\nthe filter arrays will always be left in a safe state.\n\nAlso use memcpy() instead of a loop to copy a filter chain\nwhen it is known to be safe to copy LZMA_FILTERS_MAX + 1\n(even if the elements past the terminator might be uninitialized).","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/e1acf7107291f8b3d6d609a7133331ff36d35d14"},{"sha":"06824396b2b6c84f3a235cb7c19c2a9701167797","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Don't put GNU/Linux-specific symbol versions into static liblzma.\n\nIt not only makes no sense to put symbol versions into a static library\nbut it can also cause breakage.\n\nBy default Libtool #defines PIC if building a shared library and\ndoesn't define it for static libraries. This is documented in the\nLibtool manual. It can be overriden using --with-pic or --without-pic.\nconfigure.ac detects if --with-pic or --without-pic is used and then\ngives an error if neither --disable-shared nor --disable-static was\nused at the same time. Thus, in normal situations it works to build\nboth shared and static library at the same time on GNU/Linux,\nonly --with-pic or --without-pic requires that only one type of\nlibrary is built.\n\nThanks to John Paul Adrian Glaubitz from Debian for reporting\nthe problem that occurred on ia64:\nhttps://www.mail-archive.com/xz-devel@tukaani.org/msg00610.html","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/06824396b2b6c84f3a235cb7c19c2a9701167797"},{"sha":"17ac51e689794eb41cab3e80946fec689caea2d2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/17ac51e689794eb41cab3e80946fec689caea2d2"},{"sha":"93439cfafe1768b3b18d67d2356ef7e7559bba59","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add lzma_filters_update() support to the multi-threaded encoder.\n\nA tiny downside of this is that now a 1-4 tiny allocations are made\nfor every Block because each worker thread needs its own copy of\nthe filter chain.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/93439cfafe1768b3b18d67d2356ef7e7559bba59"},{"sha":"3be88ae071371caa279b44e13f4836fb178fe4ae","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Allow nice_len 2 and 3 even if match finder requires 3 or 4.\n\nThat is, if the specified nice_len is smaller than the minimum\nof the match finder, silently use the match finder's minimum value\ninstead of reporting an error. The old behavior is annoying to users\nand it complicates xz options handling too.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/3be88ae071371caa279b44e13f4836fb178fe4ae"},{"sha":"5cd9f0df78cc4f8a7807bf6104adea13034fbb45","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Allow nice_len 2 and 3 even if match finder requires 3 or 4.\n\nNow that liblzma accepts these, we avoid the extra check and\nthere's one message less for translators too.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/5cd9f0df78cc4f8a7807bf6104adea13034fbb45"},{"sha":"90caaded2dc6db1d6a55b01160d7e87f4a423628","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Omit simple coder init functions if they are disabled.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/90caaded2dc6db1d6a55b01160d7e87f4a423628"},{"sha":"e782af9110d8499c7ac2929bc871540eefea5ea1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Use lzma_filters_free() in more places.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/e782af9110d8499c7ac2929bc871540eefea5ea1"}]},"public":true,"created_at":"2022-11-28T14:47:25Z"}
