{"id":"32015200892","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15134877603,"size":29,"distinct_size":25,"ref":"refs/heads/xz_for_msvc","head":"a07f5febfd64ea39421c79a7b316e5090afdac02","before":"ba1603cd0fe31e40df41055dea3754f8ac05f408","commits":[{"sha":"4f44ef86758a41a8ec814096f4cb6ee6de04c82e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Mark crc64_clmul() with __attribute__((__no_sanitize_address__)).\n\nThanks to Agostino Sarubbo.\nFixes: https://github.com/tukaani-project/xz/issues/62","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4f44ef86758a41a8ec814096f4cb6ee6de04c82e"},{"sha":"f167e79bc98f3f56af2e767b83aa81c2d2b9ed77","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f167e79bc98f3f56af2e767b83aa81c2d2b9ed77"},{"sha":"953e775941a25bfcfa353f802b13e66acb1edf2c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Enable CLMUL in address sanitization test.\n\nThe crc64_clmul() function should be ignored by the address sanitizer\nnow so these builds should still pass.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/953e775941a25bfcfa353f802b13e66acb1edf2c"},{"sha":"adef92f23563a2cc088b31ddee9040ecc96bc996","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/adef92f23563a2cc088b31ddee9040ecc96bc996"},{"sha":"21f9ccdb4e37906ea052bdc3252894ee51358bdd","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"tuklib_physmem: Use simpler code when building for Windows >= 2000.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/21f9ccdb4e37906ea052bdc3252894ee51358bdd"},{"sha":"055f6706aac335dc6b4aba03ea3fb2586646c1d4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib_physmem: Omit the pre-Win2k fallback in Windows >= 2000 builds.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/055f6706aac335dc6b4aba03ea3fb2586646c1d4"},{"sha":"d8e75c009b379dece0aba6b3e7bad4737d841127","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: Don't #include <unistd.h>.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d8e75c009b379dece0aba6b3e7bad4737d841127"},{"sha":"f42855b24f37642a8dacd65fb3039a060b13d736","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xzdec: Use _fileno and _setmode.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f42855b24f37642a8dacd65fb3039a060b13d736"},{"sha":"645f67005cfd47077f18e8d3126558381edaf93e","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _fileno() instead of fileno().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/645f67005cfd47077f18e8d3126558381edaf93e"},{"sha":"bb69d6880c26f9ace32e23ad618ad7eb571faf88","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _isatty() from <io.h> to implement isatty().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bb69d6880c26f9ace32e23ad618ad7eb571faf88"},{"sha":"05e167f7c470b76c3495f0eefb49e70807381a60","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _stricmp() instead of strcasecmp() in suffix.c.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/05e167f7c470b76c3495f0eefb49e70807381a60"},{"sha":"9005d5403b6e5d46abe526e2bc78d6057047e279","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Use GetTickCount64() to implement mytime_now().\n\nIt's available since Windows Vista.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9005d5403b6e5d46abe526e2bc78d6057047e279"},{"sha":"dfdf55698a9c3388cf9ffd247bace742dfecb93d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.\n\nThanks to Kelvin Lee for the original patches\nand testing the modifications I made.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dfdf55698a9c3388cf9ffd247bace742dfecb93d"},{"sha":"aae612b8cb8e1654432ee8d5ca05ee612904150a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aae612b8cb8e1654432ee8d5ca05ee612904150a"},{"sha":"d754ffdc397f9a66e96eddddb2db6b902a56b22e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.\n\nThis makes no difference for GCC or Clang as they support\nGNU C's __attribute__((__noreturn__)) but this helps with MSVC:\n\n  - VS 2019 version 16.7 and later support _Noreturn if the\n    options /std:c11 or /std:c17 are used. This gets handled\n    with the check for __STDC_VERSION__ >= 201112.\n\n  - When MSVC isn't in C11/C17 mode, __declspec(noreturn) is used.\n\nC23 will deprecate _Noreturn (and <stdnoreturn.h>)\nfor [[noreturn]]. This commit anticipates that but\nthe final __STDC_VERSION__ value isn't known yet.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d754ffdc397f9a66e96eddddb2db6b902a56b22e"},{"sha":"8be5dd2153874f795a81fa1e9908d4b568712d48","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit -Wc99-c11-compat since it warns about _Noreturn.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8be5dd2153874f795a81fa1e9908d4b568712d48"},{"sha":"a52659d927fe1b7394cafae8ad5751f4449f8275","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove incorrect uses of __attribute__((__malloc__)).\n\nxrealloc() is obviously incorrect, modern GCC docs even\nmention realloc() as an example where this attribute\ncannot be used.\n\nliblzma's lzma_alloc() and lzma_alloc_zero() would be\ncorrect uses most of the time but custom allocators\nmay use a memory pool or otherwise hold the pointer\nso aliasing issues could happen in theory.\n\nThe xstrdup() case likely was correct but I removed it anyway.\nNow there are no __malloc__ attributes left in the code.\nThe allocations aren't in hot paths so this should make\nno practical difference.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a52659d927fe1b7394cafae8ad5751f4449f8275"},{"sha":"770ddd0292f482af1a790110a8add06bd764b956","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.\n\nFor compatibility with C23's [[noreturn]], tuklib_attr_noreturn\nmust be at the beginning of declaration (before \"extern\" or\n\"static\", and even before any GNU C's __attribute__).\n\nThis commit also moves all other function attributes to\nthe beginning of function declarations. \"extern\" is kept\nat the beginning of a line so the attributes are listed on\nseparate lines before \"extern\" or \"static\".","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/770ddd0292f482af1a790110a8add06bd764b956"},{"sha":"b9bc3c5728106481f4c1182c9e6a8c4bd96dd9ed","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Move a few __attribute__ uses in function declarations.\n\nThe API headers have many attributes but these were left\nas is for now.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b9bc3c5728106481f4c1182c9e6a8c4bd96dd9ed"},{"sha":"7ce0723d7ceac107ab5515ec2511225a1739dec3","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Doxygen: Add more C macro names to PREDEFINED.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7ce0723d7ceac107ab5515ec2511225a1739dec3"}]},"public":true,"created_at":"2023-09-21T21:06:38Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32015268899","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/63","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/63/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/63/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/63/events","html_url":"https://github.com/tukaani-project/xz/pull/63","id":1899077367,"node_id":"PR_kwDOIQBEvs5aebcA","number":63,"title":"Fix getopt.in.h for MSVC","user":{"login":"kiyolee","id":1015967,"node_id":"MDQ6VXNlcjEwMTU5Njc=","avatar_url":"https://avatars.githubusercontent.com/u/1015967?v=4","gravatar_id":"","url":"https://api.github.com/users/kiyolee","html_url":"https://github.com/kiyolee","followers_url":"https://api.github.com/users/kiyolee/followers","following_url":"https://api.github.com/users/kiyolee/following{/other_user}","gists_url":"https://api.github.com/users/kiyolee/gists{/gist_id}","starred_url":"https://api.github.com/users/kiyolee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiyolee/subscriptions","organizations_url":"https://api.github.com/users/kiyolee/orgs","repos_url":"https://api.github.com/users/kiyolee/repos","events_url":"https://api.github.com/users/kiyolee/events{/privacy}","received_events_url":"https://api.github.com/users/kiyolee/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-09-15T21:06:09Z","updated_at":"2023-09-21T21:09:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/63","html_url":"https://github.com/tukaani-project/xz/pull/63","diff_url":"https://github.com/tukaani-project/xz/pull/63.diff","patch_url":"https://github.com/tukaani-project/xz/pull/63.patch","merged_at":null},"body":"## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [X] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\ncmake build with MSVC failed as \"getopt.in.h\" included <unistd.h> which does not exist for MSVC.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\ncmake build with MSVC succeeded.\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n<!-- Any other information that is important to this PR. -->","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/63/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/63/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1730306555","html_url":"https://github.com/tukaani-project/xz/pull/63#issuecomment-1730306555","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/63","id":1730306555,"node_id":"IC_kwDOIQBEvs5nImH7","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-21T21:09:57Z","updated_at":"2023-09-21T21:09:57Z","author_association":"MEMBER","body":"The getopt.in.h change is in xz_for_msvc branch now. Thanks!","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1730306555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-21T21:09:58Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32015323129","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/events","html_url":"https://github.com/tukaani-project/xz/pull/60","id":1867809603,"node_id":"PR_kwDOIQBEvs5Y1e5_","number":60,"title":"Make xz buildable with MSVC and add 64-bit filesize support","user":{"login":"kiyolee","id":1015967,"node_id":"MDQ6VXNlcjEwMTU5Njc=","avatar_url":"https://avatars.githubusercontent.com/u/1015967?v=4","gravatar_id":"","url":"https://api.github.com/users/kiyolee","html_url":"https://github.com/kiyolee","followers_url":"https://api.github.com/users/kiyolee/followers","following_url":"https://api.github.com/users/kiyolee/following{/other_user}","gists_url":"https://api.github.com/users/kiyolee/gists{/gist_id}","starred_url":"https://api.github.com/users/kiyolee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiyolee/subscriptions","organizations_url":"https://api.github.com/users/kiyolee/orgs","repos_url":"https://api.github.com/users/kiyolee/repos","events_url":"https://api.github.com/users/kiyolee/events{/privacy}","received_events_url":"https://api.github.com/users/kiyolee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-08-26T00:21:40Z","updated_at":"2023-09-21T21:12:37Z","closed_at":"2023-09-06T09:10:46Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/60","html_url":"https://github.com/tukaani-project/xz/pull/60","diff_url":"https://github.com/tukaani-project/xz/pull/60.diff","patch_url":"https://github.com/tukaani-project/xz/pull/60.patch","merged_at":null},"body":"To support files larger than 4 GiB on Windows, all calls of stat() and lseek() have to be redirected to 64-bit filesize capable calls.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\nNote: Compile warnings are inevitable for MSVC when some variables can be either 64-bit (target x64) or 32-bit (target Win32) at compile time. Those warnings need extensive changes to clean up.\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [X] Other (please describe): \r\n\r\nMake xz buildable with MSVC.\r\nAdd 64-bit filesize support on Windows.\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\nxz does not build with MSVC.\r\nxz would refuse to handle files larger than 4 GiB.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\nxz can be built with MSVC.\r\nxz can handle files larger than 4 GiB on Windows.\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n<!-- Any other information that is important to this PR. -->\r\n\r\nI have added extensive MSVC build support in my own repo https://github.com/kiyolee/xz-win-build.\r\nIn addition to building xz, I have added support to build all tests as well.\r\nThis PR only covers code changes that were done while setting up my own repo.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1730309551","html_url":"https://github.com/tukaani-project/xz/pull/60#issuecomment-1730309551","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/60","id":1730309551,"node_id":"IC_kwDOIQBEvs5nIm2v","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-21T21:12:37Z","updated_at":"2023-09-21T21:12:37Z","author_association":"MEMBER","body":"Thanks again for testing!\r\n\r\nI included the unistd.h fix from PR 63 in the xz_for_msvc branch.\r\n\r\nWith CMake 3.27 and its new default [policy CMP0149](https://cmake.org/cmake/help/latest/policy/CMP0149.html) the xz_for_msvc branch uses the latest Windows SDK by default.\r\n\r\nCMakeLists.txt currently requires a C99 compiler:\r\n\r\n```\r\nset(CMAKE_C_STANDARD 99)\r\nset(CMAKE_C_STANDARD_REQUIRED ON)\r\n```\r\n\r\nIf the first line was set to C11 and the second line was omitted then CMake would attempt to find a C11 compiler but would accept older standard too if C11 isn't available. So that would be a way to get C11 mode when using new enough MSVC. But maybe it's not nice if it limits SDK choices.\r\n\r\nSince it works now, maybe it's fine to leave it as it is.\r\n\r\nAbout he commit to tuklib_physmem.c that avoids building the pre-W2k code: I suspect that this\r\n\r\n```\r\n#if defined(_WIN32_WINNT_WIN2K) && _WIN32_WINNT >= _WIN32_WINNT_WIN2K\r\n```\r\n\r\nisn't correct. Now the old code will never be built.\r\n\r\n`_WIN32_WINNT` is about exposing newer features from the API headers, it doesn't mean that the program will automatically require that version of Windows. Earlier the builds used `#define _WIN32_WINNT 0x0500` (which is `_WIN32_WINNT_WIN2K`) to make `MEMORYSTATUSEX` visible in the API headers. Those binaries could still run even on Win95 if msvcrt.dll was available because `GlobalMemoryStatusEx` was loaded dynamically.\r\n\r\nMaybe at this point it could be best to just omit pre-W2K support from that file. Even when it was written, it was just a fun distraction to check if Windows build of xz could easily run even on Win95 and it did.\r\n\r\nThe win95 threading option, despite its name, exist for WinXP support. Those APIs just happen to be in Win95 already. The threading APIs from WinVista are closer to pthreads than the older APIs but, as far as I know, there shouldn't be any significant difference in practice in case of liblzma since it needs only a small subset of features. Requiring WinVista would simplify things though but on the other hand the support for the ancient things already exists and works fine.\r\n\r\n`GetTickCount64` in mytime.c needs WinVista so MSVC builds of the xz command line tool will need at least WinVista.\r\n\r\n`GetFileType` needs a `HANDLE` so one would first need `CreateFile` and so on. It's unfortunate if `_stat64` doesn't return any info in `st_mode` or `st_dev` or other member. I think I won't work on this problem now. If I have understood correctly, it helps slightly that the problem can only occur if using `--suffix` as the default suffixes have a dot and thus if the input file is valid then the output is too since both `con` and `con.xz` are invalid names for regular files.\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1730309551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-21T21:12:38Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
