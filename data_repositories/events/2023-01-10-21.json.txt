{"id":"26345034070","type":"PushEvent","actor":{"id":20015841,"login":"gabrielmuller","display_login":"gabrielmuller","gravatar_id":"","url":"https://api.github.com/users/gabrielmuller","avatar_url":"https://avatars.githubusercontent.com/u/20015841?"},"repo":{"id":491620910,"name":"gabrielmuller/Slicer","url":"https://api.github.com/repos/gabrielmuller/Slicer"},"payload":{"push_id":12241885913,"size":452,"distinct_size":452,"ref":"refs/heads/master","head":"2fb1eab8d54a74b907894c6dc3fe0dc678b0899d","before":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","commits":[{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"},{"sha":"4eb2ea220004be0e1fbdaff73fa7129e39d0d7ee","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add custom label value mapping example to script repository","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/4eb2ea220004be0e1fbdaff73fa7129e39d0d7ee"},{"sha":"7e891f252fabae83024451c57d535b0a8cad381e","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in ExportSegmentsToLabelmapNode with empty segment ID list\n\nvtkSlicerSegmentationsModuleLogic::ExportSegmentsToLabelmapNode crashed when no segment IDs were provided and an input colorTable node was provided.\nEmpty segment list means all segments are to be exported, but this segment list was updated too late.\nFixed the issue by updating the segment list earlier.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/7e891f252fabae83024451c57d535b0a8cad381e"},{"sha":"df01d3350e087182deac0423187e6e714bd923ca","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"DOC: Fix incorrect links\n\nThis commit fixes incorrect links identified using markdown-link-check.\nSee https://github.com/tcort/markdown-link-check\n\nThe problematic links have been identified running the following:\n\n  cd Slicer\n  for f in $(fd -e md); do\n     echo $f | xargs npx markdown-link-check;\n  done\n\nType of updates are the following:\n\n* Obsolete links due to transition to GitHub\n  -> Previous reference was looked in \"SlicerGitSVNArchive\" and then\n     updated with the expected on in \"Slicer\"\n\n* Inconsistent reference to local document\n  -> Missing \".md\" suffic have been added\n\n* Non-existent website\n  -> Replaced with reference from web.archive.org\n\n* Redirect\n  -> Replaced with current URL\n\n* Incorrectly formatted link","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/df01d3350e087182deac0423187e6e714bd923ca"},{"sha":"6f5f171513e666e94596cdd8493b2fc377f1e922","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"DOC: Prefer language agnostic links associated with docs.github.com\n\nSince the \"docs.github.com\" website provide a language selector and also\nremember user preferences, this commit updates the relevant documentation\nlinks to be agnostic.\n\nCo-authored-by: James Butler <jbutler@sonovol.com>\nCo-authored-by: Andras Lasso <lasso@queensu.ca>","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/6f5f171513e666e94596cdd8493b2fc377f1e922"},{"sha":"cf83447f69050c5e639f1e5e13f8a5591cfc95dc","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Update SlicerConfig to include Slicer_USE_TBB","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/cf83447f69050c5e639f1e5e13f8a5591cfc95dc"},{"sha":"33f7f2b5ef444ddfad5858e123cbd7025a65e451","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix extensions update check\n\nExtensions update check was not updated to work with Girder_v1 API.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/33f7f2b5ef444ddfad5858e123cbd7025a65e451"},{"sha":"8c148a87f3b53e9a8cf1b74fdac86dbe93cc69c4","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Improve performance of getting extensions install history\n\nThe extensions server was queried for metadata of all previously installed extensions for all versions.\nThis time could add up to several seconds (or even tens of seconds on a computer with very long history of Slicer installations).\n\nThis commit changes the behavior that the extensions server is only queried for the latest version for each previously installed extension.\n\nAlso fixed ordering of revision numbers. Now numeric sorting is used instead of lexicographic.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/8c148a87f3b53e9a8cf1b74fdac86dbe93cc69c4"},{"sha":"4d97ce70ef2e9f32c93dfc78325d67c19fdc68ab","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Fix slicerStripInstalledLibrary to effectively support list of libraries\n\nThis is a follow-up of 52f2d6c04 (ENH: Reduce linux package size stripping\nregular symbols) where the CMake function slicerStripInstalledLibrary\nwas first introduced.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/4d97ce70ef2e9f32c93dfc78325d67c19fdc68ab"},{"sha":"3ea8ba4b4e0981ea05677df65bc3e7c9819c1d5b","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Update TBB from 2019_U9 to 2021.5.0\n\nRemove TBB support for VTK 8. Since older VTK versions do not support\nthe updated TBB api, this commit removes support for TBB backend when\nbuilding on windows with VTK < 9.\n\nPrior to kitware/VTK@3e5313e71 (Replace task_scheduler_init with task_arena),\nthe header \"tbb/task_scheduler_init.h\" was required but is not available\nanymore in newer TBB version.\n\nSlicerBlockInstallTBB:\n* Update rules based on new library names.\n* On linux, switch to use slicerInstallLibrary to ensure\n  the symlink chain is followed.\n* On macOS, explicitly report an error if the CMake module\n  because the libraries are copied through the fix-up process.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/3ea8ba4b4e0981ea05677df65bc3e7c9819c1d5b"},{"sha":"0d5fe85d72b0c54d3acb5314012284e7b3384a66","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Improve TBB CMake configuration check on macOS\n\nSince TBB 2021.5.0 requires at least macOS 10.15, this commit ensures\nthe configuration fails when the TBB backend is enabled and the\ndeployment target is not valid.\n\nCo-authored-by: James Butler <jbutler@sonovol.com>","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/0d5fe85d72b0c54d3acb5314012284e7b3384a66"},{"sha":"177f3b324247de4e77d4497cc9121fe37dd5b3f3","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Update slicerInstallLibrary to ensure tbb debug libs are not packaged\n\nThis commit ensure libraries filename with suffix \"_debug\" are not\npackaged.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/177f3b324247de4e77d4497cc9121fe37dd5b3f3"},{"sha":"bb85cf9890493d3ca329ae3b0ed2011bd45fa30c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Enable new custom mouse gestures for moving crosshair\n\nCustom event translation can now be specified to make click or click-and-drag set the crosshair position.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/bb85cf9890493d3ca329ae3b0ed2011bd45fa30c"},{"sha":"c92c813ef70983f3fb5d705d6c9bfb6a39eee935","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Update instructions for debugging memory leaks\n\nVTK can now print the stack trace of the leaked object's allocation, so manual tracing is no longer needed.","distinct":true,"url":"https://api.github.com/repos/gabrielmuller/Slicer/commits/c92c813ef70983f3fb5d705d6c9bfb6a39eee935"}]},"public":true,"created_at":"2023-01-10T21:11:28Z"}
