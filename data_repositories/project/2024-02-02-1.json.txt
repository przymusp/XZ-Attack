{"id":"35332778606","type":"PushEvent","actor":{"id":235072,"login":"berenm","display_login":"berenm","gravatar_id":"","url":"https://api.github.com/users/berenm","avatar_url":"https://avatars.githubusercontent.com/u/235072?"},"repo":{"id":18647637,"name":"bminor/xz","url":"https://api.github.com/repos/bminor/xz"},"payload":{"repository_id":18647637,"push_id":16906773839,"size":12,"distinct_size":12,"ref":"refs/heads/master","head":"a5c177f514f4c90e0d2f6045636fca6c2e80a20d","before":"b43c3e48bf6097095eef36d44cdbec811074940a","commits":[{"sha":"849d0f282a6a890c5cf5a0e0f02980b12d9ebb0f","author":{"email":"chenxi.mao2013@gmail.com","name":"Chenxi Mao"},"message":"Speed up CRC32 calculation on ARM64\n\nThe CRC32 instructions in ARM64 can calculate the CRC32 result\nfor 8 bytes in a single operation, making the use of ARM64\ninstructions much faster compared to the general CRC32 algorithm.\n\nOptimized CRC32 will be enabled if ARM64 has CRC extension\nrunning on Linux.\n\nSigned-off-by: Chenxi Mao <chenxi.mao2013@gmail.com>","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/849d0f282a6a890c5cf5a0e0f02980b12d9ebb0f"},{"sha":"c5f6d79cc9515a7f22d7ea4860c6cc394b295732","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Add support for ARM64 CRC32 instruction detection.\n\nThis adds --enable-arm64-crc32/--disable-arm64-crc32 (enabled by\ndefault) for using the ARM64 CRC32 instruction. This can be disabled if\none knows the binary will never need to run on an ARM64 machine\nwith this instruction extension.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/c5f6d79cc9515a7f22d7ea4860c6cc394b295732"},{"sha":"61908e816049af7a9f43ea804a57ee8570e2e644","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add support for ARM64 CRC32 instruction detection.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/61908e816049af7a9f43ea804a57ee8570e2e644"},{"sha":"455a08609caa3223066a717fb01bfa42c5dba47d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Refactor crc_common.h.\n\nThe CRC_GENERIC is now split into CRC32_GENERIC and CRC64_GENERIC, since\nthe ARM64 optimizations will be different between CRC32 and CRC64.\n\nFor the same reason, CRC_ARCH_OPTIMIZED is split into\nCRC32_ARCH_OPTIMIZED and CRC64_ARCH_OPTIMIZED.\n\nifunc will only be used with x86-64 CLMUL because the runtime detection\nmethods needed with ARM64 are not compatible with ifunc.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/455a08609caa3223066a717fb01bfa42c5dba47d"},{"sha":"761f5b69a4c778c8bcb09279b845b07c28790575","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Rename crc32_aarch64.h to crc32_arm64.h.\n\nEven though the proper name for the architecture is aarch64, this\nproject uses ARM64 throughout. So the rename is for consistency.\n\nAdditionally, crc32_arm64.h was slightly refactored for the following\nchanges:\n\n   * Added MSVC, FreeBSD, and macOS support in\n     is_arch_extension_supported().\n\n   * crc32_arch_optimized() now checks the size when aligning the\n     buffer.\n\n   * crc32_arch_optimized() loop conditions were slightly modified to\n     avoid both decrementing the size and incrementing the buffer\n     pointer.\n\n   * Use the intrinsic wrappers defined in <arm_acle.h> because GCC and\n     Clang name them differently.\n\n   * Minor spacing and comment changes.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/761f5b69a4c778c8bcb09279b845b07c28790575"},{"sha":"1940f0ec28f08c0ac72c1413d9706fb82eabe6ad","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Omit CRC tables when not needed with ARM64 optimizations.\n\nThis is similar to the existing x86-64 CLMUL conditions to omit the\ntables. They were slightly refactored to improve readability.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/1940f0ec28f08c0ac72c1413d9706fb82eabe6ad"},{"sha":"30a25f3742287697bc57a1bef86c19ecf5129322","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Add --disable-arm64-crc32 description to INSTALL.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/30a25f3742287697bc57a1bef86c19ecf5129322"},{"sha":"2f1552a91c825e87013925e1a67a0930e7aef592","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Only use ifunc in crcXX_fast.c if its needed.\n\nThe code was using HAVE_FUNC_ATTRIBUTE_IFUNC instead of CRC_USE_IFUNC.\nWith ARM64, ifunc is incompatible because it requires non-inline\nfunction calls for runtime detection.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/2f1552a91c825e87013925e1a67a0930e7aef592"},{"sha":"ca9015f4dead2c97b48f5a6933631b0a448b65b9","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Check HAVE_USABLE_CLMUL before omitting CRC64 table.\n\nIf liblzma is configured with --disable-clmul-crc\nCFLAGS=\"-msse4.1 -mpclmul\", then it will fail to compile because the\ngeneric version must be used but the CRC tables were not included.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/ca9015f4dead2c97b48f5a6933631b0a448b65b9"},{"sha":"97f9ba50b84e67b3dcb5b17dd5d3e1d14f9ad1d0","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Check HAVE_USABLE_CLMUL before omitting CRC32 table.\n\nThis was split from the prior commit so it could be easily applied to\nthe 5.4 branch.\n\nCloses: https://github.com/tukaani-project/xz/pull/77","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/97f9ba50b84e67b3dcb5b17dd5d3e1d14f9ad1d0"},{"sha":"7f68a68c19d0ae57bd0e802be0ea8f974e41299f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update Authors list in crc32_arm64.h.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/7f68a68c19d0ae57bd0e802be0ea8f974e41299f"},{"sha":"a5c177f514f4c90e0d2f6045636fca6c2e80a20d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update AUTHORS.","distinct":true,"url":"https://api.github.com/repos/bminor/xz/commits/a5c177f514f4c90e0d2f6045636fca6c2e80a20d"}]},"public":true,"created_at":"2024-02-02T01:01:00Z","org":{"id":2345100,"login":"bminor","gravatar_id":"","url":"https://api.github.com/orgs/bminor","avatar_url":"https://avatars.githubusercontent.com/u/2345100?"}}
