{"id":"32875739916","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15580149903,"size":10,"distinct_size":10,"ref":"refs/heads/w32_update","head":"680c8a237db6978bb01c762b444c1a5205feb428","before":"636ff40510615ac1959638e9c772c3aa94901b00","commits":[{"sha":"9a034af1f00da6832be781c5f0a9ba16d52a0f5f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Generate and install liblzma.pc if not using MSVC.\n\nAutotools based build uses -pthread and thus adds it to Libs.private\nin liblzma.pc. CMake doesn't use -pthread at all if pthread functions\nare available in libc so Libs.private doesn't get -pthread either.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9a034af1f00da6832be781c5f0a9ba16d52a0f5f"},{"sha":"6007ae56bfaf51da1ff17ba19446e9f274dd5cc3","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Use -D_FILE_OFFSET_BITS=64 if (and only if) needed.\n\nA CMake option LARGE_FILE_SUPPORT is created if and only if\n-D_FILE_OFFSET_BITS=64 affects sizeof(off_t).\n\nThis is needed on many 32-bit platforms and even with 64-bit builds\nwith MinGW-w64 to get support for files larger than 2 GiB.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6007ae56bfaf51da1ff17ba19446e9f274dd5cc3"},{"sha":"12263aef76e3725972aa24e5f9df2d8f70c11f2e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Refer to MinGW-w64 instead of MinGW in the API headers.\n\nMinGW (formely a MinGW.org Project, later the MinGW.OSDN Project\nat <https://osdn.net/projects/mingw/>) has GCC 9.2.0 as the\nmost recent GCC package (released 2021-02-02). The project might\nstill be alive but majority of people have switched to MinGW-w64.\nThus it seems clearer to refer to MinGW-w64 in our API headers too.\nBuilding with MinGW is likely to still work but I haven't tested it\nin the recent years.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/12263aef76e3725972aa24e5f9df2d8f70c11f2e"},{"sha":"a21f7ea7a624eabaa3fd6d83fb9717d86c259396","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for building and installing xz with translations.\n\nThis uses Autotools-created files po/*.po.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a21f7ea7a624eabaa3fd6d83fb9717d86c259396"},{"sha":"51f9e8d7644a1bc21a00e673496dec35de730a20","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Simplify symlink creation and install translated man pages.\n\nIt helps that cmake_install.cmake doesn't parallelize installation\nso symlinks can be created so that the target is always known to\nexist (a requirement on Windows in some cases).","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/51f9e8d7644a1bc21a00e673496dec35de730a20"},{"sha":"f26ec4997c1b7eded88a7506ad33006242b9be2f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Scripts: Use @PACKAGE_VERSION@ instead of @VERSION@.\n\nPACKAGE_VERSION was already used in liblzma.pc.in.\nThis way only one version @foo@ is used.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f26ec4997c1b7eded88a7506ad33006242b9be2f"},{"sha":"9706ec82f0a83a70cd1c665c39143a7156fb4efe","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Install scripts.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9706ec82f0a83a70cd1c665c39143a7156fb4efe"},{"sha":"9cbbb2ad806319e375ceabeeeccc55100d732324","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add test_scripts.sh to the tests.\n\nIn contrast to Automake, skipping of this test when decoders\nare disabled is handled at CMake side instead of test_scripts.sh\nbecause CMake-build doesn't create config.h.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9cbbb2ad806319e375ceabeeeccc55100d732324"},{"sha":"bbe35b0a8d52d04229892da205a70cf4d82dc180","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Windows: Update windows/build.bash.\n\nSupport for the old MinGW was dropped. Only MinGW-w64 with GCC\nis supported now.\n\nThe script now supports also cross-compilation from GNU/Linux\n(tests are not run). MSYS2 and also the old MSYS 1.0.11 work\nfor building on Windows. The i686 and x86_64 toolchains must\nbe in PATH to build both 32-bit and 64-bit versions.\n\nParallel builds are done if \"nproc\" from GNU coreutils is available.\n\nMinGW-w64 runtime copyright information file was renamed from\nCOPYING-Windows.txt to COPYING.MinGW-w64-runtime.txt which\nis the filename used by MinGW-w64 itself. Its existence\nis now mandatory, it's checked at the beginning of the script.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bbe35b0a8d52d04229892da205a70cf4d82dc180"},{"sha":"680c8a237db6978bb01c762b444c1a5205feb428","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Windows: Update windows/README-Windows.txt.\n\nIt's for binary packages built with windows/build.bash.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/680c8a237db6978bb01c762b444c1a5205feb428"}]},"public":true,"created_at":"2023-10-26T16:43:42Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
