{"id":"34729232860","type":"IssueCommentEvent","actor":{"id":133907478,"login":"hansjans162","display_login":"hansjans162","gravatar_id":"","url":"https://api.github.com/users/hansjans162","avatar_url":"https://avatars.githubusercontent.com/u/133907478?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/77","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/77/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/77/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/77/events","html_url":"https://github.com/tukaani-project/xz/pull/77","id":2071987912,"node_id":"PR_kwDOIQBEvs5jjrrh","number":77,"title":"Speed up CRC32 calculation on ARM64","user":{"login":"parheliamm","id":3759678,"node_id":"MDQ6VXNlcjM3NTk2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/3759678?v=4","gravatar_id":"","url":"https://api.github.com/users/parheliamm","html_url":"https://github.com/parheliamm","followers_url":"https://api.github.com/users/parheliamm/followers","following_url":"https://api.github.com/users/parheliamm/following{/other_user}","gists_url":"https://api.github.com/users/parheliamm/gists{/gist_id}","starred_url":"https://api.github.com/users/parheliamm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parheliamm/subscriptions","organizations_url":"https://api.github.com/users/parheliamm/orgs","repos_url":"https://api.github.com/users/parheliamm/repos","events_url":"https://api.github.com/users/parheliamm/events{/privacy}","received_events_url":"https://api.github.com/users/parheliamm/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-01-09T09:38:00Z","updated_at":"2024-01-10T22:24:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/77","html_url":"https://github.com/tukaani-project/xz/pull/77","diff_url":"https://github.com/tukaani-project/xz/pull/77.diff","patch_url":"https://github.com/tukaani-project/xz/pull/77.patch","merged_at":null},"body":"The CRC32 instructions in ARM64 can calculate the CRC32 result for 8 bytes in a single operation, making the use of ARM64 instructions much faster compared to the general CRC32 algorithm.\r\n\r\nOptimized CRC32 will be enabled if ARM64 has CRC extension running on Linux.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [x] Build was run locally and without warnings or errors\r\n- [ ] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\n- Enable optimized CRC32 algorithm if ARM64 support CRC extension.\r\n  -\r\n  -\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nBenchmark data will be updated soon","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/77/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/77/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1885838273","html_url":"https://github.com/tukaani-project/xz/pull/77#issuecomment-1885838273","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/77","id":1885838273,"node_id":"IC_kwDOIQBEvs5wZ5vB","user":{"login":"hansjans162","id":133907478,"node_id":"U_kgDOB_tEFg","avatar_url":"https://avatars.githubusercontent.com/u/133907478?v=4","gravatar_id":"","url":"https://api.github.com/users/hansjans162","html_url":"https://github.com/hansjans162","followers_url":"https://api.github.com/users/hansjans162/followers","following_url":"https://api.github.com/users/hansjans162/following{/other_user}","gists_url":"https://api.github.com/users/hansjans162/gists{/gist_id}","starred_url":"https://api.github.com/users/hansjans162/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hansjans162/subscriptions","organizations_url":"https://api.github.com/users/hansjans162/orgs","repos_url":"https://api.github.com/users/hansjans162/repos","events_url":"https://api.github.com/users/hansjans162/events{/privacy}","received_events_url":"https://api.github.com/users/hansjans162/received_events","type":"User","site_admin":false},"created_at":"2024-01-10T22:24:00Z","updated_at":"2024-01-10T22:24:00Z","author_association":"CONTRIBUTOR","body":"Over the holidays I got an odroid which has the crc instruction and pmull, so I have been working on an arm64 clmul implementation for crc32 and crc64. I have compared this to my implementation with clmul and found that the performance is similar to mine for smaller inputs, but becomes faster the larger the input size. From what I have found it seems like the arm64 crc instruction is also more supported than the pmull instruction that the clmul implementation depends on.\r\n\r\nI will look into seeing how commonly supported the crc instruction and pmull are, and if runtime checks would be necessary. I have already run into cases where pmull has not been supported so it is likely we would need runtime check if we wanted to include crc64 clmul. The speed increase of crc clmul and the crc instruction were both very significant for larger bytes. The crc64 clmul reached up to 3 times as fast for these inputs.\r\n\r\nI still need to clean up my code and remove the crc32 clmul so I can make a pr for it after this is resolved.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1885838273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-01-10T22:24:02Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
