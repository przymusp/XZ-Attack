{"id":"31785601341","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15017979239,"size":24,"distinct_size":22,"ref":"refs/heads/xz_for_msvc","head":"5e50c23cd8af33394e346cbda0794efa044ac91b","before":"c5ae573fb9f3bb67b811cdfe5e32f8d6c42dfb97","commits":[{"sha":"5d691fe58286b92d704c0dc5cd0c4df22881c6c6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Fix unconditionally defining HAVE_CLOCK_MONOTONIC.\n\nIf HAVE_CLOCK_GETTIME was defined, then HAVE_CLOCK_MONOTONIC was always\nadded as a compile definition even if the check for it failed.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5d691fe58286b92d704c0dc5cd0c4df22881c6c6"},{"sha":"7379bb3eed428c0ae734d0cc4a1fd04359d53f08","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Fix time.h checks not running on second CMake run.\n\nIf CMake was configured more than once, HAVE_CLOCK_GETTIME and\nHAVE_CLOCK_MONOTONIC would not be set as compile definitions. The check\nfor librt being needed to provide HAVE_CLOCK_GETTIME was also\nsimplified.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7379bb3eed428c0ae734d0cc4a1fd04359d53f08"},{"sha":"f7e453b15346779e081d7a9ff2395d2b259bc9f9","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"tuklib_physmem: Use simpler code when building for Windows >= 2000.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f7e453b15346779e081d7a9ff2395d2b259bc9f9"},{"sha":"9baa6f4fdc80ca92a250c86a893befff3dab4541","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib_physmem: Omit the pre-Win2k fallback in Windows >= 2000 builds.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9baa6f4fdc80ca92a250c86a893befff3dab4541"},{"sha":"741f6a248a5180262a45fa612bbc64ddb35588fc","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: Don't #include <unistd.h>.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/741f6a248a5180262a45fa612bbc64ddb35588fc"},{"sha":"109a4ad9479b97a74cdce08bc0c62a5375c4c5c1","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xzdec: Use _fileno and _setmode.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/109a4ad9479b97a74cdce08bc0c62a5375c4c5c1"},{"sha":"4006da383405cfa356c9bfd30b12b150c5032c77","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _fileno() instead of fileno().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4006da383405cfa356c9bfd30b12b150c5032c77"},{"sha":"2466c21f5ad1fbb1f02e6a7c93420a3b1a71605c","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _isatty() from <io.h> to implement isatty().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2466c21f5ad1fbb1f02e6a7c93420a3b1a71605c"},{"sha":"c4a3b3df4fbd425a333e5666e491a370c1a4c112","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _stricmp() instead of strcasecmp() in suffix.c.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c4a3b3df4fbd425a333e5666e491a370c1a4c112"},{"sha":"56ab0a4c3725f386e721bde12e14151ee2b5453f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Use GetTickCount64() to implement mytime_now().\n\nIt's available since Windows Vista.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/56ab0a4c3725f386e721bde12e14151ee2b5453f"},{"sha":"b59c7695b4205fc4dd3631beae9a21d72b440c13","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.\n\nThanks to Kelvin Lee for the original patches\nand testing the modifications I made.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b59c7695b4205fc4dd3631beae9a21d72b440c13"},{"sha":"9cfa6e0a643d2318d546f23c510f053180ab139d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9cfa6e0a643d2318d546f23c510f053180ab139d"},{"sha":"91dd1ed6a460c31a0f7dc22e2046bc6f30025ad1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.\n\nThis makes no difference for GCC or Clang as they support\nGNU C's __attribute__((__noreturn__)) but this helps with MSVC\nas VS2015 supports _Noreturn from C11/C17. C23 will deprecate\n_Noreturn (and <stdnoreturn.h>) for [[noreturn]] so this commit\nanticipates that.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/91dd1ed6a460c31a0f7dc22e2046bc6f30025ad1"},{"sha":"72dae317c09e10c122dac8381bba893f0ce89976","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit -Wc99-c11-compat since it warns about _Noreturn.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/72dae317c09e10c122dac8381bba893f0ce89976"},{"sha":"cae22538663567ef6cfe93c037c5fdcd94887202","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove incorrect uses of __attribute__((__malloc__)).\n\nxrealloc() is obviously incorrect, modern GCC docs even\nmention realloc() as an example where this attribute\ncannot be used.\n\nliblzma's lzma_alloc() and lzma_alloc_zero() would be\ncorrect uses most of the time but custom allocators\nmay use a memory pool or otherwise hold the pointer\nso aliasing issues could happen in theory.\n\nThe xstrdup() case likely was correct but I removed it anyway.\nNow there are no __malloc__ attributes left in the code.\nThe allocations aren't in hot paths so this should make\nno practical difference.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cae22538663567ef6cfe93c037c5fdcd94887202"},{"sha":"b3e2e699cbcb32abf931cfe2d008ba5f4591f2a7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.\n\nFor compatibility with C23's [[noreturn]], tuklib_attr_noreturn\nmust be at the beginning of declaration (before \"extern\" or\n\"static\", and even before any GNU C's __attribute__).\n\nThis commit also moves all other function attributes to\nthe beginning of function declarations. \"extern\" is kept\nat the beginning of a line so the attributes are listed on\nseparate lines before \"extern\" or \"static\".","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b3e2e699cbcb32abf931cfe2d008ba5f4591f2a7"},{"sha":"7ba5785e76e960484f4e374c0b5c2946863bf024","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Move a few __attribute__ uses in function declarations.\n\nThe API headers have many attributes but these were left\nas is for now.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7ba5785e76e960484f4e374c0b5c2946863bf024"},{"sha":"28053efe275df0b36cd05e755c4a8bf1ab14290e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Doxygen: Add more C macro names to PREDEFINED.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/28053efe275df0b36cd05e755c4a8bf1ab14290e"},{"sha":"0194fcb7436b528cb1c21d0d472f117ec55b77c2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"lib/getopt*.c: Include <config.h> only HAVE_CONFIG_H is defined.\n\nThe CMake-based build doesn't use config.h.\n\nUp-to-date getopt_long in Gnulib is LGPLv2 so at some\npoint it could be included in XZ Utils too but for now\nthis commit is enough to make CMake-based build possible.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/0194fcb7436b528cb1c21d0d472f117ec55b77c2"},{"sha":"6f7c2a4dec467ceefcd1972986cbfee9b004550c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Bump maximum policy version to 3.27.\n\nThere are several new policies. CMP0149 may affect the Windows SDK\nversion that CMake will choose by default. The new behavior is more\npredictable, always choosing the latest SDK version by default.\n\nThe other new policies shouldn't affect this package.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6f7c2a4dec467ceefcd1972986cbfee9b004550c"}]},"public":true,"created_at":"2023-09-12T20:54:12Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
