commit 747c7f2b34bd498f6702c6875500a26b06201772
Author: Jia Tan <jiat0218@gmail.com>
Date:   Sat Jan 7 11:16:55 2023 +0800

    CI/CD: Reduce job runners to 4 instead of using matrix strategy.
    
    The old version used too many runners that resulted in unnecessary
    dependency downloads. Now, the runners are reused for the different
    configurations for each OS and build system.

diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
index d86c696c..4a46e256 100644
--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ -1,72 +1,143 @@
 #############################################################################
 #
 # Author: Jia Tan
 #
 # This file has been put into the public domain.
 # You can do whatever you want with this file.
 #
 #############################################################################
 
 name: CI
 
 on:
   # Triggers the workflow on push or pull request events but only for the master branch
   push:
     branches: [ master ]
   pull_request:
     branches: [ master ]
 
   # Allows running workflow manually
   workflow_dispatch:
 
 jobs:
   # When CMake can support disabling check types and
   # encoders/decoders/threads, it will be combined to one Linux job
   # and another matrix list.
   Linux-Autotools:
     # Just run on latest ubuntu
     runs-on: ubuntu-latest
-    strategy:
-      matrix:
-        check_types: ["crc32", "crc32,crc64", "crc32,sha256", "crc32,crc64,sha256"]
-        disable: [encoders, decoders, bcj, delta, threads]
     steps:
       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       - uses: actions/checkout@v2
       - name: Install Dependencies
         run: sudo apt-get install -y autoconf automake build-essential po4a autopoint
-      - name: Build
-        run: ./build-aux/ci_build.sh -b autotools -c ${{ matrix.check_types }} -d ${{ matrix.disable }}
+
+      # -b specifies the build system to use.
+      # -p specifies the phase (build or test) to help narrow down an error
+      #    if one occurs.
+      - name: Build with full features
+        run: ./build-aux/ci_build.sh -b autotools -p build
+      - name: Test with full features
+        run: ./build-aux/ci_build.sh -b autotools -p test
+
+      - name: Build without encoders
+        run: ./build-aux/ci_build.sh -b autotools -d encoders -p build
+      - name: Test without encoders
+        run: ./build-aux/ci_build.sh -b autotools -d encoders -p test
+
+      - name: Build without decoders
+        run: ./build-aux/ci_build.sh -b autotools -d decoders -p build
+      - name: Test without decoders
+        run: ./build-aux/ci_build.sh -b autotools -d decoders -p test
+
+      - name: Build without threads
+        run: ./build-aux/ci_build.sh -b autotools -d threads -p build
+      - name: Test without threads
+        run: ./build-aux/ci_build.sh -b autotools -d threads -p test
+
+      - name: Build without BCJ filters
+        run: ./build-aux/ci_build.sh -b autotools -d bcj -p build
+      - name: Test without BCJ filters
+        run: ./build-aux/ci_build.sh -b autotools -d bcj -p test
+
+      - name: Build without Delta filters
+        run: ./build-aux/ci_build.sh -b autotools -d delta -p build
+      - name: Test without Delta filters
+        run: ./build-aux/ci_build.sh -b autotools -d delta -p test
+
+      - name: Build without sha256 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,crc64 -p build
+      - name: Test without sha256 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,crc64 -p test
+
+      - name: Build without crc64 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,sha256 -p build
+      - name: Test without crc64 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,sha256 -p test
 
   Linux-CMake:
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
       - name: Install Dependencies
         run: sudo apt-get install -y build-essential cmake
       - name: Build
         run: ./build-aux/ci_build.sh -b cmake
 
   MacOS-Autotools:
     runs-on: macos-latest
-    strategy:
-      matrix:
-        check_types: ["crc32", "crc32,crc64", "crc32,sha256", "crc32,crc64,sha256"]
-        disable: [encoders, decoders, bcj, delta, threads]
     steps:
       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       - uses: actions/checkout@v2
       - name: Install Dependencies
         run: brew install autoconf automake libtool po4a
-      - name: Build
-        run: ./build-aux/ci_build.sh -b autotools -c ${{ matrix.check_types }} -d ${{ matrix.disable }}
+
+      - name: Build with full features
+        run: ./build-aux/ci_build.sh -b autotools -p build
+      - name: Test with full features
+        run: ./build-aux/ci_build.sh -b autotools -p test
+
+      - name: Build without encoders
+        run: ./build-aux/ci_build.sh -b autotools -d encoders -p build
+      - name: Test without encoders
+        run: ./build-aux/ci_build.sh -b autotools -d encoders -p test
+
+      - name: Build without decoders
+        run: ./build-aux/ci_build.sh -b autotools -d decoders -p build
+      - name: Test without decoders
+        run: ./build-aux/ci_build.sh -b autotools -d decoders -p test
+
+      - name: Build without threads
+        run: ./build-aux/ci_build.sh -b autotools -d threads -p build
+      - name: Test without threads
+        run: ./build-aux/ci_build.sh -b autotools -d threads -p test
+
+      - name: Build without BCJ filters
+        run: ./build-aux/ci_build.sh -b autotools -d bcj -p build
+      - name: Test without BCJ filters
+        run: ./build-aux/ci_build.sh -b autotools -d bcj -p test
+
+      - name: Build without Delta filters
+        run: ./build-aux/ci_build.sh -b autotools -d delta -p build
+      - name: Test without Delta filters
+        run: ./build-aux/ci_build.sh -b autotools -d delta -p test
+
+      - name: Build without sha256 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,crc64 -p build
+      - name: Test without sha256 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,crc64 -p test
+
+      - name: Build without crc64 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,sha256 -p build
+      - name: Test without crc64 check
+        run: ./build-aux/ci_build.sh -b autotools -c crc32,sha256 -p test
 
   MacOS-CMake:
     runs-on: macos-latest
     steps:
       - uses: actions/checkout@v2
       - name: Install Dependencies
         run: brew install cmake
       - name: Build
         run: ./build-aux/ci_build.sh -b cmake
     
\ No newline at end of file