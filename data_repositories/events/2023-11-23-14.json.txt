{"id":"33576785764","type":"CreateEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"isatty_windows_fix","ref_type":"branch","master_branch":"master","description":"XZ Utils Official Repository","pusher_type":"user"},"public":true,"created_at":"2023-11-23T14:20:26Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"33577136602","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15941420834,"size":2,"distinct_size":2,"ref":"refs/heads/isatty_windows_fix","head":"c87572c31f31a15a95c1e947af3b2cf2dbcfba56","before":"81722bd053b112ecd7dec330e8c42cb5e986b023","commits":[{"sha":"428caa58bbafae47f64ff70f777b095c66bd712e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Create separate is_tty() function.\n\nThe new is_tty() will report if a file descriptor is a terminal or not.\nOn POSIX systems, it is a wrapper around isatty(). However, the native\nWindows implementation of isatty() will return true for all character\ndevices, not just terminals. So is_tty() has a special case for Windows\nso it can use alternative Windows API functions to determine if a file\ndescriptor is a terminal.\n\nThis fixes a bug with MSVC and MinGW-64 builds that refused to read from\nor write to non-terminal character devices because xz thought it was a\nterminal. For instance:\n\n    xz foo -c > /dev/null\n\nwould fail because /dev/null was assumed to be a terminal.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/428caa58bbafae47f64ff70f777b095c66bd712e"},{"sha":"c87572c31f31a15a95c1e947af3b2cf2dbcfba56","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Use is_tty() in message.c.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c87572c31f31a15a95c1e947af3b2cf2dbcfba56"}]},"public":true,"created_at":"2023-11-23T14:32:05Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"33577468367","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15941585165,"size":6,"distinct_size":4,"ref":"refs/heads/ifunc_detect_fix","head":"b20cc6fba72ead21e3cc206da7beffbcf13ec41d","before":"afc9fea4d7eeed3309c02fab2ec77e5adfa4ac1d","commits":[{"sha":"584e3a258f32d579b1d07f99b4dc6e856c10ac7e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Create separate is_tty() function.\n\nThe new is_tty() will report if a file descriptor is a terminal or not.\nOn POSIX systems, it is a wrapper around isatty(). However, the native\nWindows implementation of isatty() will return true for all character\ndevices, not just terminals. So is_tty() has a special case for Windows\nso it can use alternative Windows API functions to determine if a file\ndescriptor is a terminal.\n\nThis fixes a bug with MSVC and MinGW-w64 builds that refused to read from\nor write to non-terminal character devices because xz thought it was a\nterminal. For instance:\n\n    xz foo -c > /dev/null\n\nwould fail because /dev/null was assumed to be a terminal.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/584e3a258f32d579b1d07f99b4dc6e856c10ac7e"},{"sha":"2ab2e4b5a542eab93902985ce4e642719a8b7a4e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Use is_tty() in message.c.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2ab2e4b5a542eab93902985ce4e642719a8b7a4e"},{"sha":"5afd1ab87101b840f9249d9d964eb1bc92f859d1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Only test for ifunc support on glibc Linux and FreeBSD.\n\nIf the dynamic linker does not support the relocation type needed for\nthe GNU indirect functions, it will crash on process start up. The\ncompiler is able to create the binary since it supports\n__attribute__((__ifunc__())), but the resulting binary is unusable. The\nfeature test could not reliably determine if the linker supports GNU\nindirect functions since the feature tests are not linked or executed.\n\nInstead, we white-list GNU Linux and FreeBSD systems because we know\nthey can support ifunc. If ifunc is adopted more widely in the future\nthen this over-restrictive test will have to be relaxed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5afd1ab87101b840f9249d9d964eb1bc92f859d1"},{"sha":"bbd5ddb3222e482e6fac6497d4e577d307c2d443","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Change __attribute__((__ifunc__())) detection.\n\nBefore, if the compiler supported __attribute__((__ifunc__())) but the\ndynamic linker did not then it was possible to create a broken liblzma.\nThis is possible with libc implementations that do not support the\nnecessary relocation type required by ifuncs, such as musl.\n\nNow, ALLOW_ATTR_IFUNC has three accepted values:\n\n    - auto. This is the default. This will try to detect ifunc support\n      by compiling and running a program using ifunc. This means that\n      ifunc will not be used when cross compiling.\n\n    - ON. This will try to compile a program that using ifunc, but not\n      execute it. This is for advanced users that know their system will\n      support ifunc but they may be cross-compiling or using an\n      appropriate dynamic linker at runtime that they do not have when\n      configuring. This throw an error if the compiler does not support\n      ifunc.\n\n    - OFF (or any falsey value). This disables ifunc support completely.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bbd5ddb3222e482e6fac6497d4e577d307c2d443"},{"sha":"56fbceefee3e22cd5b79f5499a11cf6c62f58272","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Allow ci_build.sh to set a different C compiler.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/56fbceefee3e22cd5b79f5499a11cf6c62f58272"},{"sha":"b20cc6fba72ead21e3cc206da7beffbcf13ec41d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Test musl libc builds on Ubuntu runner.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b20cc6fba72ead21e3cc206da7beffbcf13ec41d"}]},"public":true,"created_at":"2023-11-23T14:43:54Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"33577488374","type":"DeleteEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"isatty_windows_fix","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2023-11-23T14:44:38Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
