{"id":"35649734250","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":17077570494,"size":14,"distinct_size":14,"ref":"refs/heads/misc","head":"4719f6ab2cdc7b06ea39e9119627fc8c17922a03","before":"107c4145f0833bd384c77798d91eae4a9f5207e0","commits":[{"sha":"15b68bd85f22525431f5baf31ff7ba4fde093016","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: LZMA decoder improvements.\n\nThis adds macros for bittree decoding which prepares the code\nfor alternative C versions and inline assembly.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/15b68bd85f22525431f5baf31ff7ba4fde093016"},{"sha":"d93d0572441b1cd4346ec6a54b10ec714b2357da","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: LZMA decoder: Get rid of next_state[].\n\nIt's not completely obvious if this is better in the decoder.\nIt should be good if compiler can avoid creating a branch\n(like using CMOV on x86).\n\nThis also makes lzma_encoder.c use the new macros.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d93d0572441b1cd4346ec6a54b10ec714b2357da"},{"sha":"558c514b1ccdaad73be624aaee60cf7f883f8fcd","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Optimize LZ decoder slightly.\n\nNow extra buffer space is reserved so that repeating bytes for\nany single match will never need to copy from two places (both\nthe beginning and the end of the buffer). This simplifies\ndict_repeat() and helps a little with speed.\n\nThis seems to reduce .lzma decompression time about 2 %, so\nwith .xz and CRC it could be slightly less. The small things\nadd up still.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/558c514b1ccdaad73be624aaee60cf7f883f8fcd"},{"sha":"1a9f3fa1bb8e9c9382f41b1381e2576c53797365","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: LZ decoder: Remove a useless unlikely().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1a9f3fa1bb8e9c9382f41b1381e2576c53797365"},{"sha":"7f37f7f20eaa2ad4c793dd32db8009313accf98c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: LZ decoder: Add unlikely().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7f37f7f20eaa2ad4c793dd32db8009313accf98c"},{"sha":"011096e95fd97753ed023108817977cf9d653fa8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Optimize literal_subcoder() macro slightly.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/011096e95fd97753ed023108817977cf9d653fa8"},{"sha":"90d01e071080067f08d7e3bc271ab4d51b216ee8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: LZMA decoder: Optimize loop comparison.\n\nBut now it needs one more local variable.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/90d01e071080067f08d7e3bc271ab4d51b216ee8"},{"sha":"16117a64bde7729af7c0657a09684fecff873a3b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Clarify a comment.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/16117a64bde7729af7c0657a09684fecff873a3b"},{"sha":"8147ecdecd54fc8e4dc0fd0a7cc757c5e1a19e81","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Range decoder: Add branchless C code.\n\nIt's used only for basic bittrees and fixed-size reverse bittree\nbecause those showed a clear benefit on x86-64 with GCC and Clang.\nThe other methods were more mixed and thus are commented out but\nthey should be tested on other archs.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8147ecdecd54fc8e4dc0fd0a7cc757c5e1a19e81"},{"sha":"0bb80ad0ca8ef95d2d0969a3184059931e9f6a80","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Range decoder: Add x86-64 inline assembly.\n\nIt's compatible with GCC and Clang.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/0bb80ad0ca8ef95d2d0969a3184059931e9f6a80"},{"sha":"d12b7e032562cd0a49ef8ef3c9d1d70ec9677881","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Fix outdated threading related info on the man page.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d12b7e032562cd0a49ef8ef3c9d1d70ec9677881"},{"sha":"c95e6b7a92aa1e4629ebfd3ef82448c9e287161a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Choose the range decoder variants using a bitmask macro.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c95e6b7a92aa1e4629ebfd3ef82448c9e287161a"},{"sha":"9fd49fc63aee5627774c39df0a346fe4bb38bb46","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Mention lzmainfo if trying to use 'lzma --list'.\n\nThis kind of fixes the problem reported here:\nhttps://bugs.launchpad.net/ubuntu/+source/xz-utils/+bug/1291020","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9fd49fc63aee5627774c39df0a346fe4bb38bb46"},{"sha":"4719f6ab2cdc7b06ea39e9119627fc8c17922a03","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Scripts: Add lz4 support to xzgrep and xzdiff.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4719f6ab2cdc7b06ea39e9119627fc8c17922a03"}]},"public":true,"created_at":"2024-02-13T20:46:07Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
