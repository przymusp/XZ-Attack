{"id":"39004089766","type":"PushEvent","actor":{"id":39814207,"login":"pull[bot]","display_login":"pull","gravatar_id":"","url":"https://api.github.com/users/pull[bot]","avatar_url":"https://avatars.githubusercontent.com/u/39814207?"},"repo":{"id":722690562,"name":"sysfce2/xz","url":"https://api.github.com/repos/sysfce2/xz"},"payload":{"repository_id":722690562,"push_id":18733477086,"size":14,"distinct_size":14,"ref":"refs/heads/master","head":"e0d6d05ce0d464e966c0669bbf869202a43cc2f7","before":"b8d134e61ede9f4a296226d97f5c20721fb4e8e2","commits":[{"sha":"bb90e1f66d9beb490c4c99763e79519045968710","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"license-check.sh: Fix reporting of unclear license info\n\nThe main feature was broken because an old variable name hadn't\nbeen updated to match the rest of the script.","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/bb90e1f66d9beb490c4c99763e79519045968710"},{"sha":"b69768c8bd1a34fde311935c551d061ba52d9a3f","author":{"email":"sam@gentoo.org","name":"Sam James"},"message":"xz: list: suppress -Wformat-nonliteral for Solaris\n\nSolaris' GCC can't understand that our use is fine, unlike modern compilers:\n```\nlist.c: In function 'print_totals_basic':\nlist.c:1191:4: error: format not a string literal, argument types not checked [-Werror=format-nonliteral]\n  uint64_to_str(totals.files, 0));\n  ^~~~~~~~~~~~~\ncc1: all warnings being treated as errors\n```\n\nIt's presumably because of older gettext missing format attributes.\n\nThis is with `gcc (GCC) 7.3.0`.","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/b69768c8bd1a34fde311935c551d061ba52d9a3f"},{"sha":"08cdf4be9a673d78efe393b53dd73bf43c81dd95","author":{"email":"sam@gentoo.org","name":"Sam James"},"message":"ci: add Solaris\n\nInspired by https://github.com/RsyncProject/rsync/commit/3f2a38b01184cae9a931280b534acf5a3dae2e94.\n\nIt runs on Solaris 5.11 via a VirtualBox VM.","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/08cdf4be9a673d78efe393b53dd73bf43c81dd95"},{"sha":"57b440d316da9ac9cb312ee7e6890f5382556f10","author":{"email":"sam@gentoo.org","name":"Sam James"},"message":"ci: add po4a","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/57b440d316da9ac9cb312ee7e6890f5382556f10"},{"sha":"ef616683ef11f11ffdfbe0624da33905e28a70f9","author":{"email":"radarhere@users.noreply.github.com","name":"Andrew Murray"},"message":"Updated actions\n\nCloses: https://github.com/tukaani-project/xz/pull/115","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/ef616683ef11f11ffdfbe0624da33905e28a70f9"},{"sha":"8641f0c24c041136670c975b23408184b45431bc","author":{"email":"christoph.junghans@gmail.com","name":"Christoph Junghans"},"message":"ci: actually fail on FreeBSD\n\nWithout \"set -e\" the job will always be successful.\n\nSee vmactions/freebsd-vm#72","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/8641f0c24c041136670c975b23408184b45431bc"},{"sha":"21b02dd128cf9e8c76325ec124f70381862dcf19","author":{"email":"christoph.junghans@gmail.com","name":"Christoph Junghans"},"message":"ci: set -e on netbsd","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/21b02dd128cf9e8c76325ec124f70381862dcf19"},{"sha":"e885dae37ff5b1dbc760dabc1e03e866a7302ef2","author":{"email":"christoph.junghans@gmail.com","name":"Christoph Junghans"},"message":"ci: set -e on openbsd\n\nCloses: https://github.com/tukaani-project/xz/pull/116","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/e885dae37ff5b1dbc760dabc1e03e866a7302ef2"},{"sha":"35f8649f08341639a627fd06350e938124ca3622","author":{"email":"sam@gentoo.org","name":"Sam James"},"message":"ci: don't pin official GH actions via commit, just tag\n\nThere's no real value in doing it via commit for official GH actions. We\ncan keep using pinned commits for unofficial actions. It's hassle for no\ngain.\n\nMaybe going forward we can limit this further by only being paranoid\nfor the jobs with any access to tokens.","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/35f8649f08341639a627fd06350e938124ca3622"},{"sha":"afa938e429c1ce07d26d02999352fb014b62ff3d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Install liblzma.pc even with MSVC\n\nI had misunderstood that it wouldn't be useful with MSVC.\nvcpkg had been installing liblzma.pc with custom rules since 2020,\nyears before liblzma.pc support was added to CMakeLists.txt.\n\nSee:\nhttps://github.com/microsoft/vcpkg/blob/eb895b95aac6fd7485373702f29f508c42a180a0/ports/liblzma/portfile.cmake\nhttps://github.com/microsoft/vcpkg/pull/39024#issuecomment-2145064670","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/afa938e429c1ce07d26d02999352fb014b62ff3d"},{"sha":"5229bdf5335ce18ed54beb7e646e39927663be86","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CI: Use set -e on Solaris too","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/5229bdf5335ce18ed54beb7e646e39927663be86"},{"sha":"a61c9ab4751f2710dcd5459c7d74bbf20781f0f9","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CI: Don't require po4a on Solaris","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/a61c9ab4751f2710dcd5459c7d74bbf20781f0f9"},{"sha":"e7a42cda7c827e016619e8cab15e2faf5d4181ae","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix version.sh compatiblity with Solaris\n\nThe ancient /bin/tr on Solaris doesn't support '\\n'.\nWith /usr/xpg4/bin/tr it works but it might not be in PATH.\n\nAnother problem was that sed was given input that didn't have a newline\nat the end. Text files must end with a newline to be portable.\n\nFix both problems:\n\n  - Handle multiline input within sed itself to avoid one tr invocation.\n    The default sed even on Solaris does understand \\n.\n\n  - Use octals in tr -d. \\012 works for ASCII \"line feed\", it's even\n    used as an example in the Solaris man page. But we must strip\n    also ASCII \"carriage return\" \\015 and EBCDIC \"next line\" \\025.\n    The EBCDIC case got handled with \\n previously. Stripping \\012\n    and \\015 on EBCDIC system won't matter as those control chars\n    won't be present in the string in the first place.\n\nAn awk-based solution could be an alternative but it might need\nspecial casing on Solaris to used nawk instead of awk. The changes\nin this commit are smaller and should have a smaller risk for\nregressions. It's also possible that version.sh will be dropped\nentirely at some point.","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/e7a42cda7c827e016619e8cab15e2faf5d4181ae"},{"sha":"e0d6d05ce0d464e966c0669bbf869202a43cc2f7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Fix liblzma filename in Windows environments\n\nThis is a mess because liblzma DLL outside Cygwin and MSYS2\nis liblzma.dll instead of lzma.dll to avoid a conflict with\nlzma.dll from LZMA SDK.\n\nOn Cygwin the name was \"liblzma-5.dll\" while \"cyglzma-5.dll\"\nwould have been correct (and match what Libtool produces).\nMSYS2 likely was broken too as it uses the \"msys-\" prefix.\n\nThis change has no effect with MinGW-w64 because with that\nthe \"lib\" prefix was correct already.\n\nWith MSVC builds this is a small breaking change that requires developers\nto adjust the library name when linking against liblzma. The liblzma.dll\nname is kept as is but the import library and static library are now\nlzma.lib instead of liblzma.lib. This is helpful when using pkgconf\nbecause \"pkgconf --msvc-syntax --libs liblzma\" outputs \"lzma.lib\"\n(it's converted from \"-llzma\" in liblzma.pc). It would be easy to\nkeep the liblzma.lib naming but the pkgconf compatibility seems worth\nit in the long run. The lzma.lib name is compatible with MinGW-w64\ntoo as -llzma will find also lzma.lib.\n\nvcpkg had been patching CMakeLists.txt this way since 2022 but I\nlearned this only recently. The reasoning for the patch makes sense,\nand while this is a small breaking change with MSVC, it seems like\na decent compromise as it keeps the DLL name the same.\n\n2022 patch in vcpkg: https://github.com/microsoft/vcpkg/blob/0707a17ecf1466d64cf1a3c1ee18c8ff02aadb2d/ports/liblzma/win_output_name.patch\nSee the discussion: https://github.com/microsoft/vcpkg/pull/39024\n\nThanks to Vincent Torri for confirming the naming issue on Cygwin.","distinct":true,"url":"https://api.github.com/repos/sysfce2/xz/commits/e0d6d05ce0d464e966c0669bbf869202a43cc2f7"}]},"public":true,"created_at":"2024-06-05T01:34:00Z"}
