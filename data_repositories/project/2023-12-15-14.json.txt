{"id":"34203189511","type":"PushEvent","actor":{"id":128721112,"login":"MykolaMykhno","display_login":"MykolaMykhno","gravatar_id":"","url":"https://api.github.com/users/MykolaMykhno","avatar_url":"https://avatars.githubusercontent.com/u/128721112?"},"repo":{"id":717869651,"name":"MykolaMykhno/oss-fuzz","url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz"},"payload":{"repository_id":717869651,"push_id":16296155346,"size":29,"distinct_size":29,"ref":"refs/heads/master","head":"4822c5b56cb2c50e2ac0f5bae0bc723669bffdf0","before":"0fca349e89600db3f80c6397a3a1d9368e86887e","commits":[{"sha":"3a8b77fdde3becdc82b2b9b03d54d74463f45a58","author":{"email":"arthur.chan@adalogics.com","name":"Arthur Chan"},"message":"jackson-dataformats-{binary, text}: fix exception blockers for fuzzers (#11335)\n\nThis PR fixes the fuzzer problem for\r\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64729 which is\r\ndeserialising an unsupported type. This PR also fixes some logic in the\r\nfuzzers to increase coverage in project jackson-dataformats-binary and\r\njackson-dataformats-text.\r\n\r\n---------\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/3a8b77fdde3becdc82b2b9b03d54d74463f45a58"},{"sha":"6b64a6b331eb687d8609616f467e0cb48ebc9336","author":{"email":"arthur.chan@adalogics.com","name":"Arthur Chan"},"message":"jackson-datatypes-collections: Fix OOM on Iterable creation of primitive byte array (#11339)\n\nThis PR fixes 3 false positive issues in\r\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64623,\r\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64625 and\r\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64634 which\r\naccidentally loops a very large byte array for too many times.\r\n\r\nIn `GuavaSerailizerFuzzer` case 11. The logic uses a combination of\r\n`Iterables.cycle(T...)` and `Iterables.limit(Iterable, int)` to create\r\nan iterator for the fuzzing process. But there is a bug in the creation\r\ncausing OOM.\r\n\r\nIn Java, the generic type application is only possible for non-primitive\r\ntype. For example, if the following code is run, the result is 2 and\r\n`elements[0] = 1` and `elements[1] = 2` inside `genericTest(T...)`\r\nbecause the generic type retrieves the Integer type successfully and `T`\r\nis treated as `Integer`.\r\n```java\r\npublic class Test {\r\n  public static void main (String[] args) {\r\n    Integer[] test = {1, 2};\r\n    genericTest(test);\r\n  }\r\n\r\n  public static <T> T genericTest(T...elements) {\r\n    System.out.println(elements.length);\r\n  }\r\n}\r\n```\r\nBut if the code changes to use a primitive type array instead like the\r\nfollowing, the result is 2 and `elements[0][0] = 1` and `elements[0][1]\r\n= 2` inside `genericTest(T...)` because the generic type fails to\r\nconvert the primitive type and thus it treats `T` as `int[]`.\r\n```java\r\npublic class Test {\r\n  public static void main (String[] args) {\r\n    int[] test = {1, 2};\r\n    genericTest(test);\r\n  }\r\n\r\n  public static <T> T genericTest(T...elements) {\r\n    System.out.println(elements.length);\r\n  }\r\n}\r\n```\r\n\r\nBecause of the above reason, the original code in\r\n`GuavaSerializerFuzzer` shown below provides a `byte[]` to the\r\n`Iterables.cycle(T...)` method. Thus the later\r\n`Iterables.limit(Iterable, int)` is looping through the whole byte[] for\r\nlimit time, instead of looping the byte elements in the byte[]. It\r\nresults in OOM in some issues when the `data.consumeRemainingAsBytes()`\r\nreturns a very large byte array (e.g. 10k bytes). Instead of looping\r\neach byte in the byte array, it actually loops the whole byte array as a\r\nsingle object for 10k times which uses up the heap memory and causes\r\nOOM.\r\n```java\r\nIterables.limit(Iterables.cycle(data.consumeRemainingAsBytes()), remainingBytes))\r\n```\r\n\r\n\r\nThis PR fixes the problem by using the `Bytes.asList()` to retrieve the\r\ncorrect iterable objects for the fuzzing.\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/6b64a6b331eb687d8609616f467e0cb48ebc9336"},{"sha":"e28cf00feedf5d5ec989c98453d1d31936629d61","author":{"email":"arthur.chan@adalogics.com","name":"Arthur Chan"},"message":"jackson-dataformat-xml: Add more fuzzers to increase coverage (#11337)\n\nThis PR adds fuzzers to proejct jackson-dataformat-xml to increase code\r\ncoverage.\r\n\r\n---------\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/e28cf00feedf5d5ec989c98453d1d31936629d61"},{"sha":"1e1e5a52339c2f748a8220456c8a0116554b83ad","author":{"email":"estetus@gmail.com","name":"Sergey Bronnikov"},"message":"tarantool: enable bundled curl (#11338)\n\nIn [1] we want to use a symbol that is not available in binary package.\r\n\r\n1. https://github.com/tarantool/tarantool/pull/9341","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/1e1e5a52339c2f748a8220456c8a0116554b83ad"},{"sha":"888661286ee5965c0aa74ac4d1b4e342c1198485","author":{"email":"arthur.chan@adalogics.com","name":"Arthur Chan"},"message":"apache-commons-lang: Fix fuzzers (#11336)\n\nThis PR fixes a possible unexpected end of fuzzer execution for\r\nReflectUtilsFuzzer in\r\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64856.\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/888661286ee5965c0aa74ac4d1b4e342c1198485"},{"sha":"e5bc945b6936d757a4d0a57f4df0a11827a6488d","author":{"email":"david@adalogics.com","name":"DavidKorczynski"},"message":"llvm: fix coverage build (#11340)\n\nThe most recent coverage build got close but got killed at the last\r\nfuzzer (clangd-fuzzer)\r\n[log](https://oss-fuzz-build-logs.storage.googleapis.com/log-5a5b1493-2f55-47cf-8c59-f13bd20ed59d.txt).\r\nAm disabling this fuzzer in coverage builds for now.\r\n\r\nSigned-off-by: David Korczynski <david@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/e5bc945b6936d757a4d0a57f4df0a11827a6488d"},{"sha":"4a62396e2cd867578ca0d275789fda3f323abdb3","author":{"email":"tim.ruehsen@gmx.de","name":"Tim Rühsen"},"message":"[wget] Fix nettle build (#11344)\n\nAdd `--disable-openssl` configure flag to nettle build.","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/4a62396e2cd867578ca0d275789fda3f323abdb3"},{"sha":"e32dc3bb55950f3bdf7d6f117f70052cd5c06e88","author":{"email":"tim.ruehsen@gmx.de","name":"Tim Rühsen"},"message":"[wget2] Fix nettle build (#11343)\n\nAdd `--disable-openssl` configure flag to nettle build.","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/e32dc3bb55950f3bdf7d6f117f70052cd5c06e88"},{"sha":"2de46953155fb8be2fa672c0428325f49370cb5e","author":{"email":"anton@medv.io","name":"Anton Medvedev"},"message":"Update expr project repo url (#11341)","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/2de46953155fb8be2fa672c0428325f49370cb5e"},{"sha":"20c4b158f9afe3e8d1974c7f8518e932c23a5713","author":{"email":"nathaniel.brough@gmail.com","name":"Nathaniel Brough"},"message":"image-png: Add seed-corpus (#11342)","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/20c4b158f9afe3e8d1974c7f8518e932c23a5713"},{"sha":"272a112eeba4ae04bab018d20583cfa84c115ee1","author":{"email":"mike.dalessio@gmail.com","name":"Mike Dalessio"},"message":"Update nokogiri project contact info (#11345)\n\n:wave: I'm the maintainer of Nokogiri. I'm moving myself to primary\r\ncontact (but keeping fuzzy.boiiii23a as a CC), and CCing a project\r\nmailing list.","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/272a112eeba4ae04bab018d20583cfa84c115ee1"},{"sha":"9d675f678b6a74700caf50bed34f8081ba52159a","author":{"email":"53172+pwithnall@users.noreply.github.com","name":"Philip Withnall"},"message":"glib: Install packaging Python module (#11348)\n\nIt’s now a dependency of GLib.\r\n\r\nSee https://gitlab.gnome.org/GNOME/glib/-/merge_requests/3740\r\n\r\nSigned-off-by: Philip Withnall <pwithnall@gnome.org>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/9d675f678b6a74700caf50bed34f8081ba52159a"},{"sha":"84d85c9dafef4838d3b011ffc0c46c618eb0372d","author":{"email":"mike.dalessio@gmail.com","name":"Mike Dalessio"},"message":"nokogiri: add steve checkoway to the project (#11349)\n\n@stevecheckoway is a co-maintainer of Nokogiri and the libgumbo fork.","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/84d85c9dafef4838d3b011ffc0c46c618eb0372d"},{"sha":"b6690f0a95e708bad6e458f8ca4f7f799f40700e","author":{"email":"thomas@t-8ch.de","name":"Thomas Weißschuh"},"message":"util-linux: use all fuzzers (#11351)\n\nBy removing the explicit list of fuzzers the project falls back to the\r\ndefault configuration which is all fuzzers.\r\nEspecially this enables the centipede fuzzer today.\r\n\r\nCc @karelzak\r\n\r\nSigned-off-by: Thomas Weißschuh <thomas@t-8ch.de>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/b6690f0a95e708bad6e458f8ca4f7f799f40700e"},{"sha":"50c127e2e33d587705929380e96b0d0ca9161d2d","author":{"email":"44787359+AdamKorcz@users.noreply.github.com","name":"AdamKorcz"},"message":"nodejs: temporarily use fork with fixes and new fuzzers (#11350)\n\nSwitches the node build to my fork which contains fixes for Nodes\r\ncurrently broken fuzzer and 2 new fuzzers. The PRs for the fix and the\r\nnew fuzzers have been made upstream. This change in repo is temporary\r\nuntil Nodejs merges in the changes.\r\n\r\nSigned-off-by: Adam Korczynski <adam@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/50c127e2e33d587705929380e96b0d0ca9161d2d"},{"sha":"3c4e2c6724f7d6f090b085f1c28d937bdeaf3918","author":{"email":"79209337+mvatsyk-lsg@users.noreply.github.com","name":"mvatsyk-lsg"},"message":"XZ: update build.sh (#11279)\n\nUpdate build.sh to support 11 new fuzzing targets, added to the XZ\r\nrepository in the [following pull\r\nrequest.](https://github.com/tukaani-project/xz/pull/73)","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/3c4e2c6724f7d6f090b085f1c28d937bdeaf3918"},{"sha":"561a2c357aeab72ddfe4bac6de393a302a245c7e","author":{"email":"hghwng@gmail.com","name":"Hugh Wang"},"message":"binutils: fix corpus name mismatch (#11352)","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/561a2c357aeab72ddfe4bac6de393a302a245c7e"},{"sha":"c4348af80fb967278de42f9b4fa84a19c0d17ebc","author":{"email":"guidovranken@users.noreply.github.com","name":"Guido Vranken"},"message":"[libecc] Fix build (#11356)","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/c4348af80fb967278de42f9b4fa84a19c0d17ebc"},{"sha":"e45bbec845efd97d39d903d5efd04b9829b4bfc3","author":{"email":"7168263+aureliendavid@users.noreply.github.com","name":"A. David"},"message":"gpac: extend build.sh to allow for more fuzzers (#11355)\n\nHello, \r\n\r\nWe would like to update the build.sh for gpac to allow us to add fuzzers\r\non our side without rewriting the script each time.\r\n\r\nI took inspiration from the way libssh is doing it. \r\n\r\nthanks\r\n\r\ncc @jeanlf","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/e45bbec845efd97d39d903d5efd04b9829b4bfc3"},{"sha":"b7c6f9aa3f10170c349372ca7158c3aac9dad783","author":{"email":"arthur.chan@adalogics.com","name":"Arthur Chan"},"message":"apache-commons-codec: Catch new IllegalArgumentException (#11360)\n\nIn https://issues.apache.org/jira/browse/CODEC-314, we push a fix\r\nupstream to capture an unexpected IndexOutOfBoundException. The new\r\nlogic will wrap the unexpected IndexOutOfBoundException and throw an\r\nIllegalArgumentException instead. This PR fixes the original fuzzer to\r\ncapture the new IllegalArgumentException to meet the new logic. This PR\r\nshould close\r\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64362.\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>","distinct":true,"url":"https://api.github.com/repos/MykolaMykhno/oss-fuzz/commits/b7c6f9aa3f10170c349372ca7158c3aac9dad783"}]},"public":true,"created_at":"2023-12-15T14:51:11Z"}
