commit 8ebaf3f665ddc7e4f19c613005050dde5ccbe499
Author: Jia Tan <jiat0218@gmail.com>
Date:   Wed Sep 27 00:02:11 2023 +0800

    liblzma: Avoid compiler warning without creating extra symbol.
    
    When the generic fast crc64 method is used, then we omit
    lzma_crc64_table[][]. Similar to
    d9166b52cf3458a4da3eb92224837ca8fc208d79, we can avoid compiler warnings
    with -Wempty-translation-unit (Clang) or -pedantic (GCC) by creating a
    never used typedef instead of an extra symbol.

diff --git a/src/liblzma/check/crc64_table.c b/src/liblzma/check/crc64_table.c
index 241adcd4..6f9adb04 100644
--- a/src/liblzma/check/crc64_table.c
+++ b/src/liblzma/check/crc64_table.c
@@ -1,35 +1,34 @@
 ///////////////////////////////////////////////////////////////////////////////
 //
 /// \file       crc64_table.c
 /// \brief      Precalculated CRC64 table with correct endianness
 //
 //  Author:     Lasse Collin
 //
 //  This file has been put into the public domain.
 //  You can do whatever you want with this file.
 //
 ///////////////////////////////////////////////////////////////////////////////
 
 #include "common.h"
 
 
 // FIXME: Compared to crc64_fast.c this has to check for __x86_64__ too
 // so that in 32-bit builds crc64_x86.S won't break due to a missing table.
 #if (defined(__x86_64__) && defined(__SSSE3__) \
 			&& defined(__SSE4_1__) && defined(__PCLMUL__)) \
 		|| (defined(__e2k__) && __iset__ >= 6)
 // No table needed but something has to be exported to keep some toolchains
 // happy. Also use a declaration to silence compiler warnings.
-extern const char lzma_crc64_dummy;
-const char lzma_crc64_dummy;
+typedef void lzma_crc64_dummy;
 
 #else
 // Having the declaration here silences clang -Wmissing-variable-declarations.
 extern const uint64_t lzma_crc64_table[4][256];
 
 #	if defined(WORDS_BIGENDIAN)
 #		include "crc64_table_be.h"
 #	else
 #		include "crc64_table_le.h"
 #	endif
 #endif