{"id":"29511765187","type":"PushEvent","actor":{"id":4435445,"login":"simnalamburt","display_login":"simnalamburt","gravatar_id":"","url":"https://api.github.com/users/simnalamburt","avatar_url":"https://avatars.githubusercontent.com/u/4435445?"},"repo":{"id":31030599,"name":"xz-mirror/xz","url":"https://api.github.com/repos/xz-mirror/xz"},"payload":{"repository_id":31030599,"push_id":13861187686,"size":99,"distinct_size":99,"ref":"refs/heads/master","head":"c247d06e1f6cada9a76f4f6225cbd97ea760f52f","before":"1dbe12b90cff79bb51923733ac0840747b4b4131","commits":[{"sha":"9255fffdb13e59874bf7f95c370c410ad3a7e114","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in index_hash.h.\n\nAll functions now explicitly specify parameter and return values.\nAlso reworded the description of lzma_index_hash_init() for readability.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/9255fffdb13e59874bf7f95c370c410ad3a7e114"},{"sha":"90d0e628ff11e5030bcc4fc000bca056adda6603","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add comments for macros in delta.h.\n\nDocument LZMA_DELTA_DIST_MIN and LZMA_DELTA_DIST_MAX for completeness\nand to avoid Doxygen warnings.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/90d0e628ff11e5030bcc4fc000bca056adda6603"},{"sha":"867b08ae4254bf55dd1f7fd502cc618231b92f75","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Minor improvements to vli.h.\n\nAdded [out] annotations to parameters that are pointers and can have\ntheir value changed. Also added a clarification to lzma_vli_is_valid.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/867b08ae4254bf55dd1f7fd502cc618231b92f75"},{"sha":"862dacef1a4e7e1b28d465956fa4244ed01df154","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add one more missing [out] annotation in vli.h","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/862dacef1a4e7e1b28d465956fa4244ed01df154"},{"sha":"816fec125aa74bcef46512c73acc6d9e5a700d15","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation for base.h.\n\nStandardizing each function to always specify params and return values.\nAlso fixed a small grammar mistake.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/816fec125aa74bcef46512c73acc6d9e5a700d15"},{"sha":"0c9e4fc2ad6d88d54f299240fcc5a2ce7d695d96","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Fix documentation for LZMA_MEMLIMIT_ERROR.\n\nLZMA_MEMLIMIT_ERROR was missing the \"<\" character needed to put\ndocumentation after a member.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/0c9e4fc2ad6d88d54f299240fcc5a2ce7d695d96"},{"sha":"b67539484981351d501b68de5e925425e50c59b1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Omit lzma_index_iter's internal field from Doxygen docs.\n\nAdd \\private above this field and its sub-fields since it is not meant\nto be modified by users.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/b67539484981351d501b68de5e925425e50c59b1"},{"sha":"421f2f2e160720f6009e3b6a125cafe2feaa9419","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Reword a comment in index.h.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/421f2f2e160720f6009e3b6a125cafe2feaa9419"},{"sha":"9c71db4e884fd49aea3d1e711036bff45ca66487","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in index.h\n\nAll functions now explicitly specify parameter and return values.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/9c71db4e884fd49aea3d1e711036bff45ca66487"},{"sha":"43ec344c868f930e96879eb9e49212cce92a9884","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in check.h.\n\nAll functions now explicitly specify parameter and return values.\nAlso moved the note about SHA-256 functions not being exported to the\ntop of the file.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/43ec344c868f930e96879eb9e49212cce92a9884"},{"sha":"13d99e75a543e9e5f8633cc241eae55b91a3b242","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in lzma12.h.\n\nAll functions now explicitly specify parameter and return values.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/13d99e75a543e9e5f8633cc241eae55b91a3b242"},{"sha":"87c53553fa7d50f777b4edfa99f2083628f590fe","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":" liblzma: Improve documentation for stream_flags.h\n\nStandardizing each function to always specify parameters and return\nvalues. Also moved the parameters and return values to the end of each\nfunction description.\n\nA few small things were reworded and long sentences broken up.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/87c53553fa7d50f777b4edfa99f2083628f590fe"},{"sha":"718b22a6c5e3ee5de123323ea798872381f9320e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Silence a warning from MSVC.\n\nIt gives C4146 here since unary minus with unsigned integer\nis still unsigned (which is the intention here). Doing it\nwith substraction makes it clearer and avoids the warning.\n\nThanks to Nathan Moinvaziri for reporting this.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/718b22a6c5e3ee5de123323ea798872381f9320e"},{"sha":"efa498c13b883810497e0ea8a169efd6f48f5026","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Rename field => member in documentation.\n\nAlso adjusted preset value => preset level.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/efa498c13b883810497e0ea8a169efd6f48f5026"},{"sha":"a5de68bac2bb7e1b9119e6cea7d761a22ea73e9c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Adjust documentation in bcj.h for consistent style.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/a5de68bac2bb7e1b9119e6cea7d761a22ea73e9c"},{"sha":"f029daea39c215fd7d5cb6b6798818b055cf5b22","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Adjust spacing in doc headers in bcj.h.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/f029daea39c215fd7d5cb6b6798818b055cf5b22"},{"sha":"d831072cceca458d94d2d5da201862f6d43a417b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Very minor API doc tweaks.\n\nUse \"member\" to refer to struct members as that's the term used\nby the C standard.\n\nUse lzma_options_delta.dist and such in docs so that in Doxygen's\nHTML output they will link to the doc of the struct member.\n\nClean up a few trailing white spaces too.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/d831072cceca458d94d2d5da201862f6d43a417b"},{"sha":"2ee86d20e49985b903b78ebcfa3fa672e73e93aa","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Use only the generic symbol versioning on MicroBlaze.\n\nOn MicroBlaze, GCC 12 is broken in sense that\n__has_attribute(__symver__) returns true but it still doesn't\nsupport the __symver__ attribute even though the platform is ELF\nand symbol versioning is supported if using the traditional\n__asm__(\".symver ...\") method. Avoiding the traditional method is\ngood because it breaks LTO (-flto) builds with GCC.\n\nSee also: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766\n\nFor now the only extra symbols in liblzma_linux.map are the\ncompatibility symbols with the patch that spread from RHEL/CentOS 7.\nThese require the use of __symver__ attribute or __asm__(\".symver ...\")\nin the C code. Compatibility with the patch from CentOS 7 doesn't\nseem valuable on MicroBlaze so use liblzma_generic.map on MicroBlaze\ninstead. It doesn't require anything special in the C code and thus\nno LTO issues either.\n\nAn alternative would be to detect support for __symver__\nattribute in configure.ac and CMakeLists.txt and fall back\nto __asm__(\".symver ...\") but then LTO would be silently broken\non MicroBlaze. It sounds likely that MicroBlaze is a special\ncase so let's treat it as a such because that is simpler. If\na similar issue exists on some other platform too then hopefully\nsomeone will report it and this can be reconsidered.\n\n(This doesn't do the same fix in CMakeLists.txt. Perhaps it should\nbut perhaps CMake build of liblzma doesn't matter much on MicroBlaze.\nThe problem breaks the build so it's easy to notice and can be fixed\nlater.)\n\nThanks to Vincent Fazio for reporting the problem and proposing\na patch (in the end that solution wasn't used):\nhttps://github.com/tukaani-project/xz/pull/32","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/2ee86d20e49985b903b78ebcfa3fa672e73e93aa"},{"sha":"b9f171dd00a3cc32b6d41ea8e082cf545640ec2a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/b9f171dd00a3cc32b6d41ea8e082cf545640ec2a"},{"sha":"c9c8bfae3502842dcead85eeb2b951b437c2cd88","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add LZIP decoder test to list of tests.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/c9c8bfae3502842dcead85eeb2b951b437c2cd88"}]},"public":true,"created_at":"2023-06-04T02:05:43Z","org":{"id":11079172,"login":"xz-mirror","gravatar_id":"","url":"https://api.github.com/orgs/xz-mirror","avatar_url":"https://avatars.githubusercontent.com/u/11079172?"}}
{"id":"29511765205","type":"PushEvent","actor":{"id":4435445,"login":"simnalamburt","display_login":"simnalamburt","gravatar_id":"","url":"https://api.github.com/users/simnalamburt","avatar_url":"https://avatars.githubusercontent.com/u/4435445?"},"repo":{"id":31030599,"name":"xz-mirror/xz","url":"https://api.github.com/repos/xz-mirror/xz"},"payload":{"repository_id":31030599,"push_id":13861187698,"size":39,"distinct_size":39,"ref":"refs/heads/v5.2","head":"774145adfda4c33c07ef6543c081230edf63ba04","before":"f7c2cc55618b9af3318f0c908cf8db0df1e28e7c","commits":[{"sha":"f62e5aae51c6dcb03ea675f67f8a0cf72ea8d259","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Update .gitignore for CMake artifacts from in source build.\n\nIn source builds are not recommended, but we can make it easier\nby ignoring the generated artifacts from CMake.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/f62e5aae51c6dcb03ea675f67f8a0cf72ea8d259"},{"sha":"7067c1ca6534bfb4a5f0293109e945d8316ebbf5","author":{"email":"jiat0218@gmail.com","name":"Jia Cheong Tan"},"message":"Doxygen: Update .gitignore for generating docs for in source build.\n\nIn source builds are not recommended, but we should still ignore\nthe generated artifacts.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/7067c1ca6534bfb4a5f0293109e945d8316ebbf5"},{"sha":"2155fef5285bd524a9b8476dd7d146d845c846a9","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update documentation for lzma_filter_encoder.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/2155fef5285bd524a9b8476dd7d146d845c846a9"},{"sha":"4dbdbd02d2a09e7e8c530d46de3d31e31c8f09a7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake/Windows: Add resource files to xz.exe and xzdec.exe.\n\nThe command line tools cannot be built with MSVC for now but\nthey can be built with MinGW-w64.\n\nThanks to Iouri Kharon for the bug report and the original patch.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/4dbdbd02d2a09e7e8c530d46de3d31e31c8f09a7"},{"sha":"7c337404bf8eedf574b30322524063048873df96","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Fix a copypaste error in xzdec Windows resource file handling.\n\nIt was my mistake. Thanks to Iouri Kharon for the bug report.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/7c337404bf8eedf574b30322524063048873df96"},{"sha":"f8cae7cee0c03f72ac7ada7677e9c65682955e84","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/f8cae7cee0c03f72ac7ada7677e9c65682955e84"},{"sha":"35167d71f8bdc72e68296aa808f80d2113eb5bcd","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Update cmake_minimum_required from 3.13...3.16 to 3.13...3.25.\n\nThe changes listed on cmake-policies(7) for versions 3.17 to 3.25\nshouldn't affect this project.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/35167d71f8bdc72e68296aa808f80d2113eb5bcd"},{"sha":"f2192d13b5723e4869bb7f1b18c4b21cd72975af","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake/Windows: Add a workaround for windres from GNU binutils.\n\nThis is combined from the following commits in the master branch:\n443dfebced041adc88f10d824188eeef5b5821a9\n6b117d3b1fe91eb26d533ab16a2e552f84148d47\n5e34774c31d1b7509b5cb77a3be9973adec59ea0\n\nThanks to Iouri Kharon for the bug report, the original patch,\nand testing.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/f2192d13b5723e4869bb7f1b18c4b21cd72975af"},{"sha":"3e2b345cfd28bdf0aabbd326254bc7246dd1125e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Fix warning -Wformat-nonliteral on clang in message.c.\n\nclang and gcc differ in how they handle -Wformat-nonliteral. gcc will\r\nallow a non-literal format string as long as the function takes its\r\nformat arguments as a va_list.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/3e2b345cfd28bdf0aabbd326254bc7246dd1125e"},{"sha":"f900dd937f35f88b80536a60e8040664ba53dc1f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix warnings from clang -Wdocumentation.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/f900dd937f35f88b80536a60e8040664ba53dc1f"},{"sha":"2ca95b7cfea589fa7c79c38b99deafc44d851803","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Silence warnings from clang -Wconditional-uninitialized.\n\nThis is similar to 2ce4f36f179a81d0c6e182a409f363df759d1ad0.\nThe actual initialization of the variables is done inside\nmythread_sync() macro. Clang doesn't seem to see that\nthe initialization code inside the macro is always executed.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/2ca95b7cfea589fa7c79c38b99deafc44d851803"},{"sha":"6df383be4a22963e87ee06f9ac630d4c0ed927c9","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Use ssize_t for the to-be-ignored return value from write(fd, ptr, 1).\n\nIt makes no difference here as the return value fits into an int\ntoo and it then gets ignored but this looks better.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/6df383be4a22963e87ee06f9ac630d4c0ed927c9"},{"sha":"ccbb991efab1b03783fa00bc7bb2ab14180674f8","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Do not set compression settings with raw format in list mode.\n\nCalling coder_set_compression_settings() in list mode with verbose mode\non caused the filter chain and memory requirements to print. This was\nunnecessary since the command results in an error and not consistent\nwith other formats like lzma and alone.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/ccbb991efab1b03783fa00bc7bb2ab14180674f8"},{"sha":"6c9a2c2e465a80aa079cf3c8b3fdd382b396d21f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Add missing comment for coder_set_compression_settings()","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/6c9a2c2e465a80aa079cf3c8b3fdd382b396d21f"},{"sha":"8daaac8e10f68289b44f68d0925e169176ce8a5c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"tuklib_physmem: Silence warning from -Wcast-function-type on MinGW-w64.\n\ntuklib_physmem depends on GetProcAddress() for both MSVC and MinGW-w64\nto retrieve a function address. The proper way to do this is to cast the\nreturn value to the type of function pointer retrieved. Unfortunately,\nthis causes a cast-function-type warning, so the best solution is to\nsimply ignore the warning.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/8daaac8e10f68289b44f68d0925e169176ce8a5c"},{"sha":"050c6dbf96b15dc3b546589e554e0abc83e19816","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Fix documentation for LZMA_MEMLIMIT_ERROR.\n\nLZMA_MEMLIMIT_ERROR was missing the \"<\" character needed to put\ndocumentation after a member.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/050c6dbf96b15dc3b546589e554e0abc83e19816"},{"sha":"3cc8ece2dcd7bd60835b4a7b0619254d9f75e164","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Use only the generic symbol versioning on MicroBlaze.\n\nOn MicroBlaze, GCC 12 is broken in sense that\n__has_attribute(__symver__) returns true but it still doesn't\nsupport the __symver__ attribute even though the platform is ELF\nand symbol versioning is supported if using the traditional\n__asm__(\".symver ...\") method. Avoiding the traditional method is\ngood because it breaks LTO (-flto) builds with GCC.\n\nSee also: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766\n\nFor now the only extra symbols in liblzma_linux.map are the\ncompatibility symbols with the patch that spread from RHEL/CentOS 7.\nThese require the use of __symver__ attribute or __asm__(\".symver ...\")\nin the C code. Compatibility with the patch from CentOS 7 doesn't\nseem valuable on MicroBlaze so use liblzma_generic.map on MicroBlaze\ninstead. It doesn't require anything special in the C code and thus\nno LTO issues either.\n\nAn alternative would be to detect support for __symver__\nattribute in configure.ac and CMakeLists.txt and fall back\nto __asm__(\".symver ...\") but then LTO would be silently broken\non MicroBlaze. It sounds likely that MicroBlaze is a special\ncase so let's treat it as a such because that is simpler. If\na similar issue exists on some other platform too then hopefully\nsomeone will report it and this can be reconsidered.\n\n(This doesn't do the same fix in CMakeLists.txt. Perhaps it should\nbut perhaps CMake build of liblzma doesn't matter much on MicroBlaze.\nThe problem breaks the build so it's easy to notice and can be fixed\nlater.)\n\nThanks to Vincent Fazio for reporting the problem and proposing\na patch (in the end that solution wasn't used):\nhttps://github.com/tukaani-project/xz/pull/32","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/3cc8ece2dcd7bd60835b4a7b0619254d9f75e164"},{"sha":"d9445b5b2da0e666e9dfd92b3120d769de7bd9d1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/d9445b5b2da0e666e9dfd92b3120d769de7bd9d1"},{"sha":"09363bea466ec0bf93f8a9d55609296bdd345780","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Avoid null pointer + 0 (undefined behavior in C).\n\nIn the C99 and C17 standards, section 6.5.6 paragraph 8 means that\nadding 0 to a null pointer is undefined behavior. As of writing,\n\"clang -fsanitize=undefined\" (Clang 15) diagnoses this. However,\nI'm not aware of any compiler that would take advantage of this\nwhen optimizing (Clang 15 included). It's good to avoid this anyway\nsince compilers might some day infer that pointer arithmetic implies\nthat the pointer is not NULL. That is, the following foo() would then\nunconditionally return 0, even for foo(NULL, 0):\n\n    void bar(char *a, char *b);\n\n    int foo(char *a, size_t n)\n    {\n        bar(a, a + n);\n        return a == NULL;\n    }\n\nIn contrast to C, C++ explicitly allows null pointer + 0. So if\nthe above is compiled as C++ then there is no undefined behavior\nin the foo(NULL, 0) call.\n\nTo me it seems that changing the C standard would be the sane\nthing to do (just add one sentence) as it would ensure that a huge\namount of old code won't break in the future. Based on web searches\nit seems that a large number of codebases (where null pointer + 0\noccurs) are being fixed instead to be future-proof in case compilers\nwill some day optimize based on it (like making the above foo(NULL, 0)\nreturn 0) which in the worst case will cause security bugs.\n\nSome projects don't plan to change it. For example, gnulib and thus\nmany GNU tools currently require that null pointer + 0 is defined:\n\n    https://lists.gnu.org/archive/html/bug-gnulib/2021-11/msg00000.html\n\n    https://www.gnu.org/software/gnulib/manual/html_node/Other-portability-assumptions.html\n\nIn XZ Utils null pointer + 0 issue should be fixed after this\ncommit. This adds a few if-statements and thus branches to avoid\nnull pointer + 0. These check for size > 0 instead of ptr != NULL\nbecause this way bugs where size > 0 && ptr == NULL will likely\nget caught quickly. None of them are in hot spots so it shouldn't\nmatter for performance.\n\nA little less readable version would be replacing\n\n    ptr + offset\n\nwith\n\n    offset != 0 ? ptr + offset : ptr\n\nor creating a macro for it:\n\n    #define my_ptr_add(ptr, offset) \\\n            ((offset) != 0 ? ((ptr) + (offset)) : (ptr))\n\nChecking for offset != 0 instead of ptr != NULL allows GCC >= 8.1,\nClang >= 7, and Clang-based ICX to optimize it to the very same code\nas ptr + offset. That is, it won't create a branch. So for hot code\nthis could be a good solution to avoid null pointer + 0. Unfortunately\nother compilers like ICC 2021 or MSVC 19.33 (VS2022) will create a\nbranch from my_ptr_add().\n\nThanks to Marcin Kowalczyk for reporting the problem:\nhttps://github.com/tukaani-project/xz/issues/36","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/09363bea466ec0bf93f8a9d55609296bdd345780"},{"sha":"2333bb5454631226393d82b336340ada0eaa7ed7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/2333bb5454631226393d82b336340ada0eaa7ed7"}]},"public":true,"created_at":"2023-06-04T02:05:43Z","org":{"id":11079172,"login":"xz-mirror","gravatar_id":"","url":"https://api.github.com/orgs/xz-mirror","avatar_url":"https://avatars.githubusercontent.com/u/11079172?"}}
{"id":"29511765215","type":"PushEvent","actor":{"id":4435445,"login":"simnalamburt","display_login":"simnalamburt","gravatar_id":"","url":"https://api.github.com/users/simnalamburt","avatar_url":"https://avatars.githubusercontent.com/u/4435445?"},"repo":{"id":31030599,"name":"xz-mirror/xz","url":"https://api.github.com/repos/xz-mirror/xz"},"payload":{"repository_id":31030599,"push_id":13861187704,"size":80,"distinct_size":80,"ref":"refs/heads/v5.4","head":"238b4e5458b4bd2cadefb768b8ea7c6b70a191ac","before":"e970c28ac3cb2e8051925f81db2fe953664c2645","commits":[{"sha":"59c7bb8931159fdb1a31bbbeaed0e6984e2d3c81","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in index_hash.h.\n\nAll functions now explicitly specify parameter and return values.\nAlso reworded the description of lzma_index_hash_init() for readability.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/59c7bb8931159fdb1a31bbbeaed0e6984e2d3c81"},{"sha":"7124b8a16ae60cb2e93218ff531868eebd673bde","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add comments for macros in delta.h.\n\nDocument LZMA_DELTA_DIST_MIN and LZMA_DELTA_DIST_MAX for completeness\nand to avoid Doxygen warnings.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/7124b8a16ae60cb2e93218ff531868eebd673bde"},{"sha":"2287d5668384e289d51e72724997dc920483768e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Minor improvements to vli.h.\n\nAdded [out] annotations to parameters that are pointers and can have\ntheir value changed. Also added a clarification to lzma_vli_is_valid.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/2287d5668384e289d51e72724997dc920483768e"},{"sha":"135d5a1a65a9e199b9a5550c1f788cf43cd81018","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation for base.h.\n\nStandardizing each function to always specify params and return values.\nAlso fixed a small grammar mistake.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/135d5a1a65a9e199b9a5550c1f788cf43cd81018"},{"sha":"28757fa46d8e0f0a9c17628b2b6af9bcb3cd96fc","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Fix documentation for LZMA_MEMLIMIT_ERROR.\n\nLZMA_MEMLIMIT_ERROR was missing the \"<\" character needed to put\ndocumentation after a member.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/28757fa46d8e0f0a9c17628b2b6af9bcb3cd96fc"},{"sha":"1f157d214bc09338876d2467b549935679abc0bf","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Omit lzma_index_iter's internal field from Doxygen docs.\n\nAdd \\private above this field and its sub-fields since it is not meant\nto be modified by users.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/1f157d214bc09338876d2467b549935679abc0bf"},{"sha":"918e208af5960728b6def01e692b395f7d8e3701","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Reword a comment in index.h.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/918e208af5960728b6def01e692b395f7d8e3701"},{"sha":"765fa2865aab97ea713c1715922e322b3cf599a7","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in index.h\n\nAll functions now explicitly specify parameter and return values.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/765fa2865aab97ea713c1715922e322b3cf599a7"},{"sha":"ebebaa8d9381afea440eb1b01917117551adf68f","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in check.h.\n\nAll functions now explicitly specify parameter and return values.\nAlso moved the note about SHA-256 functions not being exported to the\ntop of the file.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/ebebaa8d9381afea440eb1b01917117551adf68f"},{"sha":"2796bb4736f645d34939b5d62d5958f534e41e69","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation in lzma12.h.\n\nAll functions now explicitly specify parameter and return values.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/2796bb4736f645d34939b5d62d5958f534e41e69"},{"sha":"d83da006b3e8dbad9112e6cde6b27049d193c9ec","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation for stream_flags.h\n\nStandardizing each function to always specify parameters and return\nvalues. Also moved the parameters and return values to the end of each\nfunction description.\n\nA few small things were reworded and long sentences broken up.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/d83da006b3e8dbad9112e6cde6b27049d193c9ec"},{"sha":"0ce1db0223854d94b4a0d17737ac0486a75d9e6a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Silence a warning from MSVC.\n\nIt gives C4146 here since unary minus with unsigned integer\nis still unsigned (which is the intention here). Doing it\nwith substraction makes it clearer and avoids the warning.\n\nThanks to Nathan Moinvaziri for reporting this.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/0ce1db0223854d94b4a0d17737ac0486a75d9e6a"},{"sha":"762c4d0b62d2694cf3a01e030fdfe68e09e7b503","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Rename field => member in documentation.\n\nAlso adjusted preset value => preset level.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/762c4d0b62d2694cf3a01e030fdfe68e09e7b503"},{"sha":"701e9be6bede19771895f756082db0c017f86f07","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Adjust documentation in bcj.h for consistent style.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/701e9be6bede19771895f756082db0c017f86f07"},{"sha":"d31fbd28be5b79eb682db50004b0fb7aad5299ec","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Adjust spacing in doc headers in bcj.h.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/d31fbd28be5b79eb682db50004b0fb7aad5299ec"},{"sha":"bc34e5ac9996667d2c1ec9a7895ec5931ac4caea","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Very minor API doc tweaks.\n\nUse \"member\" to refer to struct members as that's the term used\nby the C standard.\n\nUse lzma_options_delta.dist and such in docs so that in Doxygen's\nHTML output they will link to the doc of the struct member.\n\nClean up a few trailing white spaces too.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/bc34e5ac9996667d2c1ec9a7895ec5931ac4caea"},{"sha":"076e911ba25cadf2cbdfbd0f65991a002e210c0b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Use only the generic symbol versioning on MicroBlaze.\n\nOn MicroBlaze, GCC 12 is broken in sense that\n__has_attribute(__symver__) returns true but it still doesn't\nsupport the __symver__ attribute even though the platform is ELF\nand symbol versioning is supported if using the traditional\n__asm__(\".symver ...\") method. Avoiding the traditional method is\ngood because it breaks LTO (-flto) builds with GCC.\n\nSee also: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766\n\nFor now the only extra symbols in liblzma_linux.map are the\ncompatibility symbols with the patch that spread from RHEL/CentOS 7.\nThese require the use of __symver__ attribute or __asm__(\".symver ...\")\nin the C code. Compatibility with the patch from CentOS 7 doesn't\nseem valuable on MicroBlaze so use liblzma_generic.map on MicroBlaze\ninstead. It doesn't require anything special in the C code and thus\nno LTO issues either.\n\nAn alternative would be to detect support for __symver__\nattribute in configure.ac and CMakeLists.txt and fall back\nto __asm__(\".symver ...\") but then LTO would be silently broken\non MicroBlaze. It sounds likely that MicroBlaze is a special\ncase so let's treat it as a such because that is simpler. If\na similar issue exists on some other platform too then hopefully\nsomeone will report it and this can be reconsidered.\n\n(This doesn't do the same fix in CMakeLists.txt. Perhaps it should\nbut perhaps CMake build of liblzma doesn't matter much on MicroBlaze.\nThe problem breaks the build so it's easy to notice and can be fixed\nlater.)\n\nThanks to Vincent Fazio for reporting the problem and proposing\na patch (in the end that solution wasn't used):\nhttps://github.com/tukaani-project/xz/pull/32","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/076e911ba25cadf2cbdfbd0f65991a002e210c0b"},{"sha":"cd82ef2fb48b174c57cd03b84a9a0f978772cb89","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/cd82ef2fb48b174c57cd03b84a9a0f978772cb89"},{"sha":"b9a3511bb61d3b6ce49abd33dce6155a573f5272","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add LZIP decoder test to list of tests.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/b9a3511bb61d3b6ce49abd33dce6155a573f5272"},{"sha":"b8331077c626e6bf14f4671d09b561146eaf816a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Improve documentation for container.h\n\nStandardizing each function to always specify parameters and return\nvalues. Also moved the parameters and return values to the end of each\nfunction description.","distinct":true,"url":"https://api.github.com/repos/xz-mirror/xz/commits/b8331077c626e6bf14f4671d09b561146eaf816a"}]},"public":true,"created_at":"2023-06-04T02:05:44Z","org":{"id":11079172,"login":"xz-mirror","gravatar_id":"","url":"https://api.github.com/orgs/xz-mirror","avatar_url":"https://avatars.githubusercontent.com/u/11079172?"}}
