{"id":"26310540288","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"push_id":12224929529,"size":16,"distinct_size":16,"ref":"refs/heads/v5.4","head":"43521e77acc907863fa4f94aae276366172cb9ee","before":"f204d1050a515d17851eed9049862ce5a9c729c1","commits":[{"sha":"3f0130aa288e4ed57ace609517db9700a41223af","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Add missing stream_decoder_mt.c to .vcxproj files.\n\nThe line in the .vcxproj files for building with was missing in 5.4.0.\nThank to Hajin Jang for reporting the issue.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3f0130aa288e4ed57ace609517db9700a41223af"},{"sha":"39d2585dcd3e827cfc3c46025ab6708c4aeb36c6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Style: Change #if !defined() to #ifndef in mythread.h.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/39d2585dcd3e827cfc3c46025ab6708c4aeb36c6"},{"sha":"db714d30e0c74d1dd4af1a23ed62b44e0e8e4efc","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Replaced hardcoded 0x0 index indicator byte with macro","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/db714d30e0c74d1dd4af1a23ed62b44e0e8e4efc"},{"sha":"2ac7bafc8f07c1edefe96a4a7a040ddfff0eb5bb","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add NULL check to lzma_index_hash_append.\n\nThis is for consistency with lzma_index_append.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2ac7bafc8f07c1edefe96a4a7a040ddfff0eb5bb"},{"sha":"692ccdf5516dfe55fb6e9c5cdfb31f4c02c1ecd1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Remove common.h include from common/index.h.\n\ncommon/index.h is needed by liblzma internally and tests. common.h will\ninclude and define many things that are not needed by the tests.\n\nAlso, this prevents include order problems because both common.h and\nlzma.h define LZMA_API. On most platforms it results only in a warning\nbut on Windows it would break the build as the definition in common.h\nmust be used only for building liblzma itself.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/692ccdf5516dfe55fb6e9c5cdfb31f4c02c1ecd1"},{"sha":"bad44cfe19e8be8ae76755369be2a34abcd2b4fa","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Creates test_index_hash.c\n\nTests all API functions exported from index_hash.h. Does not have a\ndedicated test for lzma_index_hash_end.\n\n[Minor edits were made by Lasse Collin.]","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bad44cfe19e8be8ae76755369be2a34abcd2b4fa"},{"sha":"52bc1ee34dda9bb6fb40175e5952863066681b77","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Require that _mm_set_epi64x() is usable to enable CLMUL support.\n\nVS2013 doesn't have _mm_set_epi64x() so this way CLMUL gets\ndisabled with VS2013.\n\nThanks to Iouri Kharon for the bug report.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/52bc1ee34dda9bb6fb40175e5952863066681b77"},{"sha":"e96dee55df04113c33b387ccdb6cb70935422d91","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: CLMUL CRC64: Workaround a bug in MSVC (VS2015-2022).\n\nI haven't tested with MSVC myself and there doesn't seem to be\ninformation about the problem online, so I'm relying on the bug report.\n\nThanks to Iouri Kharon for the bug report and the patch.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e96dee55df04113c33b387ccdb6cb70935422d91"},{"sha":"706bce5018d7cf83094e13454a0731169ec119b5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake/Windows: Add resource files to xz.exe and xzdec.exe.\n\nThe command line tools cannot be built with MSVC for now but\nthey can be built with MinGW-w64.\n\nThanks to Iouri Kharon for the bug report and the original patch.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/706bce5018d7cf83094e13454a0731169ec119b5"},{"sha":"3d45987451b1c3bb42697b29341824c0e5484cba","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Fix a copypaste error in xzdec Windows resource file handling.\n\nIt was my mistake. Thanks to Iouri Kharon for the bug report.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3d45987451b1c3bb42697b29341824c0e5484cba"},{"sha":"c0c13d9d82eb8a4302c8bbb8b4c5178d285fe9ab","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c0c13d9d82eb8a4302c8bbb8b4c5178d285fe9ab"},{"sha":"99fcd57f2ea35eaa94e09f674d5364329c880fa2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/99fcd57f2ea35eaa94e09f674d5364329c880fa2"},{"sha":"ce3a3fbc7c2c399aeed644d54f3bd56ac914dfee","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Update cmake_minimum_required from 3.13...3.16 to 3.13...3.25.\n\nThe changes listed on cmake-policies(7) for versions 3.17 to 3.25\nshouldn't affect this project.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ce3a3fbc7c2c399aeed644d54f3bd56ac914dfee"},{"sha":"1bbefa9659b202ba31bd244a9d0e4f0d37ff3ed7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: tuktest.h: Support tuktest_malloc(0).\n\nIt's not needed in XZ Utils at least for now. It's good to support\nit still because if such use is needed later, it wouldn't be\ncaught on GNU/Linux since malloc(0) from glibc returns non-NULL.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1bbefa9659b202ba31bd244a9d0e4f0d37ff3ed7"},{"sha":"6b44cead95d767414272dc3a67898a36bfdf95b3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Refactors existing filter flags tests.\n\nConverts the existing filter flags tests into tuktests.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6b44cead95d767414272dc3a67898a36bfdf95b3"},{"sha":"43521e77acc907863fa4f94aae276366172cb9ee","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: test_filter_flags: Clean up minor issues.\n\nHere are the list of the most significant issues addressed:\n- Avoid using internal common.h header. It's not good to copy the\nconstants like this but common.h cannot be included for use outside\nof liblzma. This is the quickest thing to do that could be fixed later.\n\n- Omit the INIT_FILTER macro. Initialization should be done with just\nregular designated initializers.\n\n- Use start_offset = 257 for BCJ tests. It demonstrates that Filter\nFlags encoder and decoder don't validate the options thoroughly.\n257 is valid only for the x86 filter. This is a bit silly but\nnot a significant problem in practice because the encoder and\ndecoder initialization functions will catch bad alignment still.\nPerhaps this should be fixed but it's not urgent and doesn't need\nto be in 5.4.x.\n\n- Various tweaks to comments such as filter id -> Filter ID","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/43521e77acc907863fa4f94aae276366172cb9ee"}]},"public":true,"created_at":"2023-01-09T15:05:09Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
