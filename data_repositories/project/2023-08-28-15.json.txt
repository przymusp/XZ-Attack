{"id":"31423574835","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":14833117042,"size":6,"distinct_size":6,"ref":"refs/heads/master","head":"74c3449d8b816a724b12ebce7417e00fb597309a","before":"f2e94d064f305bb8ad77ca70f91d93e55f5cf856","commits":[{"sha":"1057765aaabfe0f1397b8094531846655376ae38","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Esperanto translation.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1057765aaabfe0f1397b8094531846655376ae38"},{"sha":"ae5c07b22a6b3766b84f409f1b6b5c100469068a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add overflow check for Unpadded size in lzma_index_append().\n\nThis was not a security bug since there was no path to overflow\nUINT64_MAX in lzma_index_append() or when it calls index_file_size().\nThe bug was discovered by a failing assert() in vli_ceil4() when called\nfrom index_file_size() when unpadded_sum (the sum of the compressed size\nof current Stream and the unpadded_size parameter) exceeds LZMA_VLI_MAX.\n\nPreviously, the unpadded_size parameter was checked to be not greater\nthan UNPADDED_SIZE_MAX, but no check was done once compressed_base was\nadded.\n\nThis could not have caused an integer overflow in index_file_size() when\ncalled by lzma_index_append(). The calculation for file_size breaks down\ninto the sum of:\n\n- Compressed base from all previous Streams\n- 2 * LZMA_STREAM_HEADER_SIZE (size of the current Streams header and\n  footer)\n- stream_padding (can be set by lzma_index_stream_padding())\n- Compressed base from the current Stream\n- Unpadded size (parameter to lzma_index_append())\n\nThe sum of everything except for Unpadded size must be less than\nLZMA_VLI_MAX. This is guarenteed by overflow checks in the functions\nthat can set these values including lzma_index_stream_padding(),\nlzma_index_append(), and lzma_index_cat(). The maximum value for\nUnpadded size is enforced by lzma_index_append() to be less than or\nequal UNPADDED_SIZE_MAX. Thus, the sum cannot exceed UINT64_MAX since\nLZMA_VLI_MAX is half of UINT64_MAX.\n\nThanks to Joona Kannisto for reporting this.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ae5c07b22a6b3766b84f409f1b6b5c100469068a"},{"sha":"721e3d9f7a82f59f32795d5fb97e0210d1aa839a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update assert in vli_ceil4().\n\nThe argument to vli_ceil4() should always guarantee the return value\nis also a valid lzma_vli. Thus the highest three valid lzma_vli values\nare invalid arguments. All uses of the function ensure this so the\nassert is updated to match this.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/721e3d9f7a82f59f32795d5fb97e0210d1aa839a"},{"sha":"49be29d6380b94e6fb26e511dd2cdbd9afce0f8b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/49be29d6380b94e6fb26e511dd2cdbd9afce0f8b"},{"sha":"2544274a8b8a27f4ea6c457d2c4c32eb1e4cd336","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve comments in test_index.c.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2544274a8b8a27f4ea6c457d2c4c32eb1e4cd336"},{"sha":"74c3449d8b816a724b12ebce7417e00fb597309a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve invalid unpadded size check in test_lzma_index_append().\n\nThis check was extended to test the code added to fix a failing assert\nin ae5c07b22a6b3766b84f409f1b6b5c100469068a.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/74c3449d8b816a724b12ebce7417e00fb597309a"}]},"public":true,"created_at":"2023-08-28T15:17:54Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
