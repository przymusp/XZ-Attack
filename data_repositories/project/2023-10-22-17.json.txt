{"id":"32753533203","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15519126000,"size":6,"distinct_size":6,"ref":"refs/heads/build_werror2","head":"a1441dea3a3aa7f6819a2c3ff55a165d38dfda0d","before":"ac4cd8c9a8a8ef15fef24d5333306f43e79c9df6","commits":[{"sha":"ec9d9da88f2692a3392ef1be7405e0687b4f2c13","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Fix a bug in ax_gcc_func_attribute.m4.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ec9d9da88f2692a3392ef1be7405e0687b4f2c13"},{"sha":"df05998385c8c5b3b01a536ed903f7b4331c15e0","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Use AX_GCC_FUNC_ATTRIBUTE to detect __attribute__ support.\n\nThis way -Werror isn't needed for these checks as\nAX_GCC_FUNC_ATTRIBUTE looks at compiler's warning messages to see\nif an unsupported attribute was present. Both methods have their\nown problems but I'm hoping that this is the better method.\n\nIt is known that the check for the ifunc attribute this doesn't\nwork with CompCert 3.12. It silently ignores unknown attributes\nin function declarations and in static functions if the function\nappears unused (even though the unknown attribute would make it used).","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/df05998385c8c5b3b01a536ed903f7b4331c15e0"},{"sha":"476ced9777bab1ea966fcedb66b2d6b887b16ed4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Check for func attributes without -Werror.\n\nThis matches the modified m4/ax_gcc_func_attribute.m4.\nOnly constructor and ifunc attribute checks were implemented.\n\nCMake-based build doesn't have the trouble of Autoconf confdefs.h\nbut writing warning-free tests would still some extra care.\nIf looking for attribute-related warnings works well enough then\nthis method should be nicer than the -Werror method in CMake too.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/476ced9777bab1ea966fcedb66b2d6b887b16ed4"},{"sha":"dc950cbe90a63361c3dcffb61e6e6a9acda0a04b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Add a check for __attribute__((__always_inline__)).\n\nAll even remotely relevant GCC and Clang versions support this\nattribute. The test is useful to detect support in compilers that\ndon't define __GNUC__ or __clang__, for example, Solaris Studio.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dc950cbe90a63361c3dcffb61e6e6a9acda0a04b"},{"sha":"914343ae2a81cf5a45e66a7a6dc89236161c0218","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"sysdefs.h: #define lzma_always_inline.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/914343ae2a81cf5a45e66a7a6dc89236161c0218"},{"sha":"a1441dea3a3aa7f6819a2c3ff55a165d38dfda0d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Use lzma_always_inline in memcmplen.h.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a1441dea3a3aa7f6819a2c3ff55a165d38dfda0d"}]},"public":true,"created_at":"2023-10-22T17:35:46Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
