{"id":"37570621069","type":"PushEvent","actor":{"id":15467072,"login":"swift-ci","display_login":"swift-ci","gravatar_id":"","url":"https://api.github.com/users/swift-ci","avatar_url":"https://avatars.githubusercontent.com/u/15467072?"},"repo":{"id":215875945,"name":"apple/llvm-project","url":"https://api.github.com/repos/apple/llvm-project"},"payload":{"repository_id":215875945,"push_id":18049430182,"size":6,"distinct_size":3,"ref":"refs/heads/next","head":"73c3f633d7dd53ab75feaaa08cdb147750bf3549","before":"3cb64e7a27ab1ed078ea09db308b03c081fe4dea","commits":[{"sha":"bbd64c4ddf08be468ab4eb4c161e28bdab6808bb","author":{"email":"preames@rivosinc.com","name":"Philip Reames"},"message":"[RISCV] Add coverage for strength reduction of mul as 2^N - 2^M","distinct":false,"url":"https://api.github.com/repos/apple/llvm-project/commits/bbd64c4ddf08be468ab4eb4c161e28bdab6808bb"},{"sha":"4fd39d9246045969dd16888af1fcb9a65ca68ef9","author":{"email":"am@git-apple-llvm","name":"git apple-llvm automerger"},"message":"Merge commit 'bbd64c4ddf08' from llvm.org/main into next","distinct":true,"url":"https://api.github.com/repos/apple/llvm-project/commits/4fd39d9246045969dd16888af1fcb9a65ca68ef9"},{"sha":"8885813ebb0a61014d99ac776b8118d935848cc9","author":{"email":"koraq@xs4all.nl","name":"Mark de Wever"},"message":"[libc++][chrono] Disables a test.\n\nThis tests seems problematic on different platforms. There is still a\ntest that ensures coverage, but in an automatic fashion. This test needs\nto be investigated.","distinct":false,"url":"https://api.github.com/repos/apple/llvm-project/commits/8885813ebb0a61014d99ac776b8118d935848cc9"},{"sha":"66db38e199d649509bd028cfab4517bb399b1328","author":{"email":"am@git-apple-llvm","name":"git apple-llvm automerger"},"message":"Merge commit '8885813ebb0a' from llvm.org/main into next","distinct":true,"url":"https://api.github.com/repos/apple/llvm-project/commits/66db38e199d649509bd028cfab4517bb399b1328"},{"sha":"0665669876cd7f51f7572cff3bb97485d78f5de5","author":{"email":"i@maskray.me","name":"Fangrui Song"},"message":"[Sema] Mark alias/ifunc targets used and consider mangled names\n\nhttps://reviews.llvm.org/D54188 marked \"alias\" targets as used in C to\nfix -Wunused false positives. This patch extends the approach to handle\nmangled names to support global scope names in C++ and the\n`overloadable` attribute in C.\n\n(Note: we should skip `UsingShadowDecl`, which would trigger an\nassertion failure in `ItaniumMangleContextImpl::mangleCXXName`.\nSee regression test added by commit 1c2afbae9af22b58190c10e3517242d01d89d612.)\n\nIn addition, we mark ifunc targets as used to fix #63957 (temporarily\nused by xz; ifunc was removed by\nhttps://github.com/tukaani-project/xz/commit/689ae2427342a2ea1206eb5ca08301baf410e7e0)\n\nWhile our approach has false negatives for namespace scope names, the\nmajority of alias/ifunc C++ uses (global scope with no overloads) are\nhandled.\n\nNote: The following function with internal linkage but C language\nlinkage type is mangled in Clang but not in GCC. This inconsistency\nmakes alias/ifunc difficult to use in C++ with portability (#88593).\n```\nextern \"C\" {\nstatic void f0() {}\n// GCC: void g0() __attribute__((alias(\"_ZL2f0v\")));\n// Clang: void g0() __attribute__((alias(\"f0\")));\n}\n```\n\nPull Request: https://github.com/llvm/llvm-project/pull/87130","distinct":false,"url":"https://api.github.com/repos/apple/llvm-project/commits/0665669876cd7f51f7572cff3bb97485d78f5de5"},{"sha":"73c3f633d7dd53ab75feaaa08cdb147750bf3549","author":{"email":"am@git-apple-llvm","name":"git apple-llvm automerger"},"message":"Merge commit '0665669876cd' from llvm.org/main into next","distinct":true,"url":"https://api.github.com/repos/apple/llvm-project/commits/73c3f633d7dd53ab75feaaa08cdb147750bf3549"}]},"public":true,"created_at":"2024-04-18T07:08:04Z","org":{"id":10639145,"login":"apple","gravatar_id":"","url":"https://api.github.com/orgs/apple","avatar_url":"https://avatars.githubusercontent.com/u/10639145?"}}
