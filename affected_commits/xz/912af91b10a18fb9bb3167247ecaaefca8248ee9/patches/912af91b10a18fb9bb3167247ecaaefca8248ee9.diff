commit 912af91b10a18fb9bb3167247ecaaefca8248ee9
Author: Jia Tan <jiat0218@gmail.com>
Date:   Thu Jan 26 09:50:21 2023 +0800

    liblzma: Improve documentation for version.h.
    
    Specified parameter and return values for API functions and documented
    a few more of the macros.

diff --git a/src/liblzma/api/lzma/version.h b/src/liblzma/api/lzma/version.h
index fd575653..201104ab 100644
--- a/src/liblzma/api/lzma/version.h
+++ b/src/liblzma/api/lzma/version.h
@@ -18,14 +18,26 @@
 #endif
 
 
-/*
- * Version number split into components
- */
+/** \brief Major version number of the liblzma release. */
 #define LZMA_VERSION_MAJOR 5
+
+/** \brief Minor version number of the liblzma release. */
 #define LZMA_VERSION_MINOR 5
+
+/** \brief Patch version number of the liblzma release. */
 #define LZMA_VERSION_PATCH 0
+
+/**
+ * \brief Version stability marker
+ *
+ * This will always be one of three values:
+ *   - LZMA_VERSION_STABILITY_ALPHA
+ *   - LZMA_VERSION_STABILITY_BETA
+ *   - LZMA_VERSION_STABILITY_STABLE
+ */
 #define LZMA_VERSION_STABILITY LZMA_VERSION_STABILITY_ALPHA
 
+/** \brief Commit version number of the liblzma release */
 #ifndef LZMA_VERSION_COMMIT
 #	define LZMA_VERSION_COMMIT ""
 #endif
@@ -102,9 +114,10 @@
 /**
  * \brief       Run-time version number as an integer
  *
- * Return the value of LZMA_VERSION macro at the compile time of liblzma.
- * This allows the application to compare if it was built against the same,
+ * This allows an application to compare if it was built against the same,
  * older, or newer version of liblzma that is currently running.
+ *
+ * \return The value of LZMA_VERSION macro at the compile time of liblzma
  */
 extern LZMA_API(uint32_t) lzma_version_number(void)
 		lzma_nothrow lzma_attr_const;
@@ -113,8 +126,10 @@ extern LZMA_API(uint32_t) lzma_version_number(void)
 /**
  * \brief       Run-time version as a string
  *
- * This function may be useful if you want to display which version of
- * liblzma your application is currently using.
+ * This function may be useful to display which version of liblzma an
+ * application is currently using.
+ *
+ * \return      Run-time version of liblzma
  */
 extern LZMA_API(const char *) lzma_version_string(void)
 		lzma_nothrow lzma_attr_const;