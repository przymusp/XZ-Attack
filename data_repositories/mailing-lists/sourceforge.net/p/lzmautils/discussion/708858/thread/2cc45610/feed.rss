<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recent posts to Java LZMA (1) support</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/2cc45610/</link><description>Recent posts to Java LZMA (1) support</description><language>en</language><lastBuildDate>Tue, 02 Aug 2016 19:30:01 -0000</lastBuildDate><atom:link href="https://sourceforge.net/p/lzmautils/discussion/708858/thread/2cc45610/feed.rss" rel="self" type="application/rss+xml"></atom:link><item><title>Java LZMA (1) support</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/2cc45610/</link><description>&lt;div class="markdown_content"&gt;&lt;p&gt;My bad. I didn't realize that it was never supported, good to know. I was hoping to use XZ utils to do it all instead of implementing compression with the LZMA SDK directly. Thanks for the information.&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bryan Smith</dc:creator><pubDate>Tue, 02 Aug 2016 19:30:01 -0000</pubDate><guid isPermaLink="false">https://sourceforge.neta5f7f76d1019bcdb936e84f84fa10ab5f1260bb6</guid></item><item><title>Java LZMA (1) support</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/2cc45610/</link><description>&lt;div class="markdown_content"&gt;&lt;p&gt;It was never supported by XZ for Java. Support for it has been requested. Perhaps it will be done in the future.&lt;/p&gt;
&lt;p&gt;LZMA SDK supports LZMA(1) with a different API.&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lasse Collin</dc:creator><pubDate>Sun, 31 Jul 2016 17:55:08 -0000</pubDate><guid isPermaLink="false">https://sourceforge.net478b80b771bb36cda5db570c185468bdd4a6466e</guid></item><item><title>Java LZMA (1) support</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/2cc45610/</link><description>&lt;div class="markdown_content"&gt;&lt;p&gt;I am dealing with a server that passes data in the legacy lzma format. I am using the LZMAInputStream to decompress, but there is not LZMAOutputStream, only LZMA2OutputStream. &lt;/p&gt;
&lt;p&gt;Is lzma (1) compressions still supported for the Java tools? &lt;br/&gt;
If so, can you give me a few tips to get it working?&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bryan Smith</dc:creator><pubDate>Thu, 28 Jul 2016 20:14:29 -0000</pubDate><guid isPermaLink="false">https://sourceforge.net5036ec201a91a866dc63997705707a5e68fbe681</guid></item></channel></rss>