{"id":"27559307511","type":"CreateEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"capsicum_improvements","ref_type":"branch","master_branch":"master","description":"XZ Utils Official Repository","pusher_type":"user"},"public":true,"created_at":"2023-03-07T20:32:41Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27559372166","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/43","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/events","html_url":"https://github.com/tukaani-project/xz/pull/43","id":1610442947,"node_id":"PR_kwDOIQBEvs5LUTCK","number":43,"title":"xz: Improve compatibility with systems without capability mode support","user":{"login":"delphij","id":1045626,"node_id":"MDQ6VXNlcjEwNDU2MjY=","avatar_url":"https://avatars.githubusercontent.com/u/1045626?v=4","gravatar_id":"","url":"https://api.github.com/users/delphij","html_url":"https://github.com/delphij","followers_url":"https://api.github.com/users/delphij/followers","following_url":"https://api.github.com/users/delphij/following{/other_user}","gists_url":"https://api.github.com/users/delphij/gists{/gist_id}","starred_url":"https://api.github.com/users/delphij/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/delphij/subscriptions","organizations_url":"https://api.github.com/users/delphij/orgs","repos_url":"https://api.github.com/users/delphij/repos","events_url":"https://api.github.com/users/delphij/events{/privacy}","received_events_url":"https://api.github.com/users/delphij/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":5016626567,"node_id":"LA_kwDOIQBEvs8AAAABKwOlhw","url":"https://api.github.com/repos/tukaani-project/xz/labels/5.4.2","name":"5.4.2","color":"006b75","default":false,"description":"Item earmarked for 5.4.2 release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-03-05T23:55:38Z","updated_at":"2023-03-07T20:35:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/43","html_url":"https://github.com/tukaani-project/xz/pull/43","diff_url":"https://github.com/tukaani-project/xz/pull/43.diff","patch_url":"https://github.com/tukaani-project/xz/pull/43.patch","merged_at":null},"body":"When the kernel is built without capability mode support, or when using an emulator like qemu-user-static that does not translate system calls, these calls will return a negative number and set the errno to ENOSYS. However, this error does not indicate a real programming or runtime error and is generally ignored by base system applications built with capability mode sandboxing.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\nPlease check the type of change your PR introduces:\r\n- [X] Bugfix\r\n\r\n## What is the current behavior?\r\n\r\nxz would abort execution with `Failed to enable the sandbox` when capability mode system calls failed, regardless if the host system have capability mode support.\r\n\r\nIt is advisable that binaries with capability mode sandbox enabled to ignore capability mode errors when they are solely because the system does not have the support, this is done on many applications including OpenSSH and base system utilities.  In fact, FreeBSD have a set of macros called [capsicum_helpers(3)](https://man.freebsd.org/cgi/man.cgi?query=capsicum_helpers&sektion=3) which [wraps](https://cgit.freebsd.org/src/tree/lib/libcapsicum/capsicum_helpers.h#n153) this anti-pattern.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=269185\r\n\r\n\r\n## What is the new behavior?\r\n\r\nxz will ignore sandbox failures caused by the kernel lacking support of capsicum mode.\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n## Other information\r\n\r\nThe proposed patch modified `cap_*` calls to also check if the failure was caused by the lack of support (ENOSYS) and make it ignore it.  If possible, it's probably reasonable to just use `caph_*` calls found in `capsicum_helpers(3)`.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/43/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/43/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1458837313","html_url":"https://github.com/tukaani-project/xz/pull/43#issuecomment-1458837313","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/43","id":1458837313,"node_id":"IC_kwDOIQBEvs5W9BdB","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-03-07T20:35:57Z","updated_at":"2023-03-07T20:35:57Z","author_association":"MEMBER","body":"I think the Capsicum commits went to the master branch a bit hastily:\r\n\r\n1. It's not good to spam users with a warning message when their kernel doesn't support Capsicum. Similar spamming issue was fixed in the commit af0fb386ef55db66654ae39e2deec6e04190c4ff.\r\n2. `message_warning()` affects exit status so now xz will exit with status 2 if kernel lacks Capsicum support (unless `--no-warn` (`-Q`) is used). This breaks most use cases still.\r\n3. It seems unncessary to complicate `cap_rights_limit()` calls with checks for `ENOSYS` but I might be wrong.\r\n4. Setting `sandbox_allowed = false;` is OK but not needed as the code will be run only once anyway since Capsicum is used only if there is exactly one input file.\r\n\r\nI might have misunderstood the Capsicum API slightly in the past and thus I have put `cap_enter()` as the very last step. Seems that moving it to be the first one makes it easy to detect if Capsicum is supported by the kernel or not. So that idea in the master branch seems good.\r\n\r\n[cap_enter(2)](https://man.freebsd.org/cgi/man.cgi?query=cap_enter&apropos=0&sektion=0&manpath=FreeBSD+14.0-CURRENT&arch=default&format=html) mentions `ENOSYS` but [cap_rights_limit(2)](https://man.freebsd.org/cgi/man.cgi?query=cap_rights_limit&sektion=2&apropos=0&manpath=FreeBSD+14.0-CURRENT) doesn't. I wonder if it is a documentation error or if it is intentional to not mention `ENOSYS`. I'm a bit hesitant to add a check for an undocumented `errno` value (I see capsicum_helpers.h does check for `ENOSYS` though).\r\n\r\nI put a proposed fix to the branch [capsicum_improvements](https://github.com/tukaani-project/xz/commits/capsicum_improvements). These go before the new commits in the master branch which I think should be reverted so that clean patches can be cherry-picked to stable branches.\r\n\r\nI wonder if `STDIN_FILENO` and `STDERR_FILENO` should be restricted too. (`src_fd` may be `STDIN_FILENO`.) I added another commit for those. There is no worry about `EBADF` since xz ensures that the file descriptors are open. But perhaps having only `CAP_WRITE` for `STDERR_FILENO` can be too strict in some cases, I'm not sure. capsicum_helpers.h adds a few other capabilities too but on the other hand xz will only write to standard error with `fprintf` and friends.\r\n\r\nMoving to capsicum_helpers(3) could be an option but at this point I'm not sure if it is worth it as I think this should work fine too. Moving to capsicum_helpers(3) would need updating the configure test too for those who build xz from an upstream tarball.\r\n\r\n@delphij: What do you think about the commits in capsicum_improvements?\r\n\r\n@JiaT75: What kind of change did you have in mind for ax_check_capsicum.m4? One cannot check for kernel support at build time as the binary might be run on a different kernel too. Using capsicum_helpers(3) would need a change so that the build won't fail on FreeBSD 10 or 11 (which are out of support).","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1458837313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-07T20:35:58Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
