<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recent posts to  ./configure support for Apple Silicon M1 chips (darwin-arm64)</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/978bf94bbc/</link><description>Recent posts to  ./configure support for Apple Silicon M1 chips (darwin-arm64)</description><language>en</language><lastBuildDate>Wed, 12 Jan 2022 22:06:25 -0000</lastBuildDate><atom:link href="https://sourceforge.net/p/lzmautils/discussion/708858/thread/978bf94bbc/feed.rss" rel="self" type="application/rss+xml"></atom:link><item><title> ./configure support for Apple Silicon M1 chips (darwin-arm64)</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/978bf94bbc/?limit=25#2b63</link><description>&lt;div class="markdown_content"&gt;&lt;p&gt;Thanks!  Mostly liblzma-native relies on prebuilds for all platforms, so building from source, while a fallback, is almost an error condition.  For this (fully automated) fallback I guess it makes sense to assume as little as possible about the build tools available, and autotools or cmake is a big ask vs just a C compiler.  Prebuilds for darwin-arm64 have been made, so I guess liblzma-native is happy and can wait until the next official release of XZ Utils that includes updated autotools files.&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bjorn Stabell</dc:creator><pubDate>Wed, 12 Jan 2022 22:06:25 -0000</pubDate><guid isPermaLink="false">https://sourceforge.netc6ad2d6374267237bc153018f0587f2d760bc635</guid></item><item><title> ./configure support for Apple Silicon M1 chips (darwin-arm64)</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/978bf94bbc/?limit=25#e65f</link><description>&lt;div class="markdown_content"&gt;&lt;p&gt;Hi! &lt;/p&gt;
&lt;p&gt;Thanks for including the patch. The patch you linked modifies the config.sub file, which is generally against best practices. The config.sub file is maintained and released by autotools. Using CMake may solve your issue, but it is somewhat experimental on non Windows MSVC for liblzma. The next alpha release should happen in February and it will have some patches to CMake. I don't believe the next release will have the config.sub patch you are proposing, especially if you can use autogen or CMake as work-arounds. &lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jia Tan</dc:creator><pubDate>Tue, 11 Jan 2022 13:55:38 -0000</pubDate><guid isPermaLink="false">https://sourceforge.net44c526f8b9023b2445a2857cf96fb7fa29652b8c</guid></item><item><title> ./configure support for Apple Silicon M1 chips (darwin-arm64)</title><link>https://sourceforge.net/p/lzmautils/discussion/708858/thread/978bf94bbc/?limit=25#175b</link><description>&lt;div class="markdown_content"&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;It's more than 2 years since 5.2.5 was released, and during this time there's a new architecture on the market!  Currently the &lt;code&gt;./configure&lt;/code&gt; in 5.2.5 fails if run on the new Apple M1 Macs (darwin-arm64) and require patching config.sub - see &lt;a href="https://github.com/addaleax/lzma-native/pull/123" rel="nofollow"&gt;https://github.com/addaleax/lzma-native/pull/123&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just re-running &lt;code&gt;./autogen.sh&lt;/code&gt; will create a working configure setup for M1 macs, but it requires a bigger build chain (with autoconf etc) that many people don't have.&lt;/p&gt;
&lt;p&gt;Would you consider releasing patch release (5.2.6?) with just updated configure scripts - or is 5.3 close to release?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br/&gt;
Bjorn&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bjorn Stabell</dc:creator><pubDate>Mon, 10 Jan 2022 16:17:23 -0000</pubDate><guid isPermaLink="false">https://sourceforge.neta7c5fb45c8393d951adf6fed957e2137aabfab88</guid></item></channel></rss>