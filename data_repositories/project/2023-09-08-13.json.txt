{"id":"31696145117","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553669853,"name":"tukaani-project/xz-embedded","url":"https://api.github.com/repos/tukaani-project/xz-embedded"},"payload":{"repository_id":553669853,"push_id":14970819635,"size":6,"distinct_size":6,"ref":"refs/heads/master","head":"a5390fd368f8a58401c0ce0dfb9d05ef3046e4a3","before":"3f438e15109229bb14ab45f285f4bff5412a9542","commits":[{"sha":"89094f05f02bcd381511f252b6b4d73db1d70f12","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add ARM64 BCJ decoder.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/89094f05f02bcd381511f252b6b4d73db1d70f12"},{"sha":"961d094e9242b665ce2444bca5f6f3a2d07c46ae","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Kconfig updates to BCJ filters.\n\nThis mostly reverts 567636fb219937cec273ba15f92e635f5b84cd4e\nwhich was done long ago in upstream Linux too. Outside\nembedded systems it's good to have all filters enabled by default\nso that Squashfs images using any BCJ filter can be mounted.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/961d094e9242b665ce2444bca5f6f3a2d07c46ae"},{"sha":"c66c890bc837a4f522c8961b18badafbd51e1f2e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update README for ARM64 BCJ.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/c66c890bc837a4f522c8961b18badafbd51e1f2e"},{"sha":"d89ad8130128d71c773f5e50e356562a506f843e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update userspace/Makefile and userspace/xz_config.h for ARM64 BCJ.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/d89ad8130128d71c773f5e50e356562a506f843e"},{"sha":"55c8039c7ff3590671131158c0ef55aa65d826c9","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove a duplicate check for XZ_DEC_ARM in xz_private.h.\n\nThanks to Jules Maselbas.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/55c8039c7ff3590671131158c0ef55aa65d826c9"},{"sha":"a5390fd368f8a58401c0ce0dfb9d05ef3046e4a3","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix the build when only the ARM64 filter is enabled.\n\nThanks to Jules Maselbas.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/a5390fd368f8a58401c0ce0dfb9d05ef3046e4a3"}]},"public":true,"created_at":"2023-09-08T13:39:49Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31696202489","type":"CreateEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"riscv_filter","ref_type":"branch","master_branch":"master","description":"XZ Utils Official Repository","pusher_type":"user"},"public":true,"created_at":"2023-09-08T13:42:00Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"31696279147","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":14970883388,"size":15,"distinct_size":6,"ref":"refs/heads/riscv_filter","head":"ee620e133373b8af6725e373d470f630580684b4","before":"e9134fb73f1d8962a34ad317e51fd5efa3fbbfa2","commits":[{"sha":"f2e94d064f305bb8ad77ca70f91d93e55f5cf856","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Esperanto translation.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f2e94d064f305bb8ad77ca70f91d93e55f5cf856"},{"sha":"1057765aaabfe0f1397b8094531846655376ae38","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Esperanto translation.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1057765aaabfe0f1397b8094531846655376ae38"},{"sha":"ae5c07b22a6b3766b84f409f1b6b5c100469068a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add overflow check for Unpadded size in lzma_index_append().\n\nThis was not a security bug since there was no path to overflow\nUINT64_MAX in lzma_index_append() or when it calls index_file_size().\nThe bug was discovered by a failing assert() in vli_ceil4() when called\nfrom index_file_size() when unpadded_sum (the sum of the compressed size\nof current Stream and the unpadded_size parameter) exceeds LZMA_VLI_MAX.\n\nPreviously, the unpadded_size parameter was checked to be not greater\nthan UNPADDED_SIZE_MAX, but no check was done once compressed_base was\nadded.\n\nThis could not have caused an integer overflow in index_file_size() when\ncalled by lzma_index_append(). The calculation for file_size breaks down\ninto the sum of:\n\n- Compressed base from all previous Streams\n- 2 * LZMA_STREAM_HEADER_SIZE (size of the current Streams header and\n  footer)\n- stream_padding (can be set by lzma_index_stream_padding())\n- Compressed base from the current Stream\n- Unpadded size (parameter to lzma_index_append())\n\nThe sum of everything except for Unpadded size must be less than\nLZMA_VLI_MAX. This is guarenteed by overflow checks in the functions\nthat can set these values including lzma_index_stream_padding(),\nlzma_index_append(), and lzma_index_cat(). The maximum value for\nUnpadded size is enforced by lzma_index_append() to be less than or\nequal UNPADDED_SIZE_MAX. Thus, the sum cannot exceed UINT64_MAX since\nLZMA_VLI_MAX is half of UINT64_MAX.\n\nThanks to Joona Kannisto for reporting this.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ae5c07b22a6b3766b84f409f1b6b5c100469068a"},{"sha":"721e3d9f7a82f59f32795d5fb97e0210d1aa839a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update assert in vli_ceil4().\n\nThe argument to vli_ceil4() should always guarantee the return value\nis also a valid lzma_vli. Thus the highest three valid lzma_vli values\nare invalid arguments. All uses of the function ensure this so the\nassert is updated to match this.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/721e3d9f7a82f59f32795d5fb97e0210d1aa839a"},{"sha":"49be29d6380b94e6fb26e511dd2cdbd9afce0f8b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/49be29d6380b94e6fb26e511dd2cdbd9afce0f8b"},{"sha":"2544274a8b8a27f4ea6c457d2c4c32eb1e4cd336","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve comments in test_index.c.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2544274a8b8a27f4ea6c457d2c4c32eb1e4cd336"},{"sha":"74c3449d8b816a724b12ebce7417e00fb597309a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve invalid unpadded size check in test_lzma_index_append().\n\nThis check was extended to test the code added to fix a failing assert\nin ae5c07b22a6b3766b84f409f1b6b5c100469068a.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/74c3449d8b816a724b12ebce7417e00fb597309a"},{"sha":"f7093cd9d130477c234b40aeda613964171f8f21","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Fix a too relaxed assertion and remove uses of SSIZE_MAX.\n\nSSIZE_MAX isn't readily available on MSVC. Removing it means\nthat there is one thing less to worry when porting to MSVC.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f7093cd9d130477c234b40aeda613964171f8f21"},{"sha":"eccf12866527b8d24c7d7f92f755142be8ef9b11","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Refactor thousand separator detection and disable it on MSVC.\n\nNow the two variations of the format strings are created with\na macro, and the whole detection code can be easily disabled\non platforms where thousand separator formatting is known to\nnot work (MSVC has no support, and on DJGPP 2.05 it can have\nproblems in some cases).","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/eccf12866527b8d24c7d7f92f755142be8ef9b11"},{"sha":"c384e8ba0738a1b0812f7785f2bd091d0b765a68","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add experimental RISC-V BCJ filter with temporary Filter ID.\n\nThe Filter ID will most likely be changed to 0x0B when the design is\nfinalized. Files created with the temporary Filter ID will not be\nsupported in the future.\n\nThanks to Chien Wong <m@xv97.com> for the initial version of the Filter,\nthe xz CLI updates, and the Autotools build system modifications.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c384e8ba0738a1b0812f7785f2bd091d0b765a68"},{"sha":"a24d9c5775955de39b06f327bbbf6885f380b2d6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Support RISC-V BCJ Filter for encoding and decoding.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a24d9c5775955de39b06f327bbbf6885f380b2d6"},{"sha":"41e558faa8fbe4dab0d686bcc8173276ed5f5115","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update string_conversion.c to support RISC-V Filter.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/41e558faa8fbe4dab0d686bcc8173276ed5f5115"},{"sha":"3760ae7423122ce4792c6b916bab1311e703ebd5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Add RISC-V Filter test in test_compress.sh.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3760ae7423122ce4792c6b916bab1311e703ebd5"},{"sha":"dcc15d7e4d0fbc5fabfe9c86c583d1c51fa5870a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Update the man page for the RISC-V Filter.\n\nA special note was added to suggest using four-byte alignment when the\ncompressed instruction extension is not present in a RISC-V binary.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dcc15d7e4d0fbc5fabfe9c86c583d1c51fa5870a"},{"sha":"ee620e133373b8af6725e373d470f630580684b4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Update message in --long-help for RISC-V Filter.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ee620e133373b8af6725e373d470f630580684b4"}]},"public":true,"created_at":"2023-09-08T13:44:54Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
