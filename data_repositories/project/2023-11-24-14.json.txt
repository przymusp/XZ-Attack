{"id":"33600903385","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15954074265,"size":6,"distinct_size":6,"ref":"refs/heads/ifunc_detect_fix","head":"7e00920e9c4aac41c4ac7dd9b98c97d761a56ef7","before":"81399dcd262b0b06d82738257d9cc0beb9d3ac75","commits":[{"sha":"835b1154f399aea10355b0fb16566807259f69fc","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Change --enable-func handling.\n\nIf the dynamic linker does not support the relocation type needed for\nthe GNU indirect functions, it will crash on process start up. The\ncompiler is able to create the binary since it supports\n__attribute__((__ifunc__())), but the resulting binary is unusable. The\nfeature test could not reliably determine if the linker supports GNU\nindirect functions since the feature tests are not linked or executed.\n\nThe default value for enable_ifunc is now auto, which performs the\nsystem test to be sure we are on GNU/Linux or FreeBSD. Setting\n--enable-ifunc during configure will override the system test and only\ndo the compiler test.\n\nFor the system test, we white-list GNU Linux and FreeBSD systems\nbecause we know they can support ifunc. If ifunc is adopted more\nwidely in the future then this over-restrictive test will have to\nbe relaxed.\n\nDisabling ifunc with --disable-ifunc is still supported and will skip\nboth the compiler and system tests and not allow ifunc usage.\n\nIf --enable-func is used but the compiler does not support\n__attribute__((__ifunc__())) then the configuration will fail and\nprovide an error message.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/835b1154f399aea10355b0fb16566807259f69fc"},{"sha":"330d902a89f5561fa9c1bdd524c484bc844a34f8","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Update INSTALL for --enable_ifunc change.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/330d902a89f5561fa9c1bdd524c484bc844a34f8"},{"sha":"0420c4c44afe916b82eb6852e57b840bb76832a7","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Change __attribute__((__ifunc__())) detection.\n\nBefore, if the compiler supported __attribute__((__ifunc__())) but the\ndynamic linker did not then it was possible to create a broken liblzma.\nThis is possible with libc implementations that do not support the\nnecessary relocation type required by ifuncs, such as musl.\n\nNow, ALLOW_ATTR_IFUNC has three accepted values:\n\n    - auto. This is the default. This will try to detect linker support\n      by testing the system type and if Linux testing the macros defined\n      by libc. Then it will try to compile a simple feature test to\n      check if the compiler supports the attribute.\n\n    - ON. This skips the system test performed by auto mode. This throws an\n      error if the compiler does not support ifunc since users setting this\n      flag likely need to know this.\n\n    - OFF. This disables ifunc support completely.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/0420c4c44afe916b82eb6852e57b840bb76832a7"},{"sha":"9a54d5bd50d4f5b16aa8bbf16a8f122ec929dc4e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Use consistent indentation with check_c_source_compiles().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9a54d5bd50d4f5b16aa8bbf16a8f122ec929dc4e"},{"sha":"b9d3135982cc0b22b56cd6ec20ee2a0be9938c33","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Allow ci_build.sh to set a different C compiler.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b9d3135982cc0b22b56cd6ec20ee2a0be9938c33"},{"sha":"7e00920e9c4aac41c4ac7dd9b98c97d761a56ef7","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Test musl libc builds on Ubuntu runner.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7e00920e9c4aac41c4ac7dd9b98c97d761a56ef7"}]},"public":true,"created_at":"2023-11-24T14:02:36Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
