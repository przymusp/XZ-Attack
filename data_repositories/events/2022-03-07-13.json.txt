{"id":"20616047051","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":453091377,"name":"JiaT75/XZ_Utils_Unofficial","url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial"},"payload":{"push_id":9284496462,"size":6,"distinct_size":6,"ref":"refs/heads/main","head":"4d517db882bfea280cb57a4d2d4093dd53ccf6d9","before":"5be2d223a78056a4f90658ca5a398bc82438b915","commits":[{"sha":"ddbc6f58c2de388eed24cd7ea91b523d397da5f4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Index hash: Change return value type of hash_append() to void.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/ddbc6f58c2de388eed24cd7ea91b523d397da5f4"},{"sha":"1a4bb97a00936535e30ac61945aeee38882b5d1a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add new output queue (lzma_outq) features.\n\nAdd lzma_outq_clear_cache2() which may leave one buffer allocated\nin the cache.\n\nAdd lzma_outq_outbuf_memusage() to get the memory needed for\na single lzma_outbuf. This is now used internally in outqueue.c too.\n\nTrack both the total amount of memory allocated and the amount of\nmemory that is in active use (not in cache).\n\nIn lzma_outbuf, allow storing the current input position that\nmatches the current output position. This way the main thread\ncan notice when no more output is possible without first providing\nmore input.\n\nAllow specifying return code for lzma_outq_read() in a finished\nlzma_outbuf.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/1a4bb97a00936535e30ac61945aeee38882b5d1a"},{"sha":"717631b9788dc9c100ee0c87d3c14a2782638ff4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix docs: lzma_block_decoder() cannot return LZMA_UNSUPPORTED_CHECK.\n\nIf Check is unsupported, it will be silently ignored.\nIt's the caller's job to handle it.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/717631b9788dc9c100ee0c87d3c14a2782638ff4"},{"sha":"4cce3e27f529af33e0e7749a8cbcec59954946b5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add threaded .xz decompressor.\n\nI realize that this is about a decade late.\n\nBig thanks to Sebastian Andrzej Siewior for the original patch.\nI made a bunch of smaller changes but after a while quite a few\nthings got rewritten. So any bugs in the commit were created by me.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/4cce3e27f529af33e0e7749a8cbcec59954946b5"},{"sha":"6c6da57ae2aa962aabde6892442227063d87e88c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Add initial support for threaded decompression.\n\nIf threading support is enabled at build time, this will\nuse lzma_stream_decoder_mt() even for single-threaded mode.\nWith memlimit_threading=0 the behavior should be identical.\n\nThis needs some work like adding --memlimit-threading=LIMIT.\n\nThe original patch from Sebastian Andrzej Siewior included\na method to get currently available RAM on Linux. It might\nbe one way to go but as it is Linux-only, the available-RAM\napproach needs work for portability or using a fallback method\non other OSes.\n\nThe man page wasn't updated yet.","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/6c6da57ae2aa962aabde6892442227063d87e88c"},{"sha":"4d517db882bfea280cb57a4d2d4093dd53ccf6d9","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"Merge branch 'master' of https://git.tukaani.org/xz into main","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/4d517db882bfea280cb57a4d2d4093dd53ccf6d9"}]},"public":true,"created_at":"2022-03-07T13:21:14Z"}
