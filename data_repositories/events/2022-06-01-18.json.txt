{"id":"22108348184","type":"PushEvent","actor":{"id":15837524,"login":"jamesobutler","display_login":"jamesobutler","gravatar_id":"","url":"https://api.github.com/users/jamesobutler","avatar_url":"https://avatars.githubusercontent.com/u/15837524?"},"repo":{"id":246976853,"name":"jamesobutler/Slicer","url":"https://api.github.com/repos/jamesobutler/Slicer"},"payload":{"push_id":10044854805,"size":37,"distinct_size":12,"ref":"refs/heads/inclusive-language","head":"7d879ac6f588212bf7efc1d192154d6680f62ae5","before":"4887ab164358429938b3fb96e3046346f2137134","commits":[{"sha":"650ed1467a3a6f59b6fe722e56ee8778d99e35e4","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"BUG: Update to latest CTK version\n\nIncludes several fixes and improvements:\n\nRevision: ec816cbb77986f6ee28c41a495e82238dee0e2d3\nAuthor: Mikhail Polkovnikov <pmkclnl@yandex.ru>\nDate: 2022-05-15 5:15:45 AM\nMessage:\nENH: Set a continuous CTF for the ctkVTKScalarsToColorsView as an editable function or as a read only one\n\nRevision: c97620f43dec6b1eac894d7d9c491d2af236dc22\nAuthor: Steve Pieper <pieper@isomics.com>\nDate: 2022-05-06 3:13:39 PM\nMessage:\nMerge pull request #1031 from lassoan/fix-clipping-during-rotation\n\nBUG: Fix clipped view content when rotating view\n\nRevision: 7580e14a76448da5ca83c3a7648e510563873f9a\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-05 7:00:54 PM\nMessage:\nBUG: Fix clipped view content when rotating view\n\nCamera clipping range must be reset after camera motion.\n\nFixes issue described here: https://discourse.slicer.org/t/extremities-of-a-long-volume-vanishing-when-rotating/23234/10?u=lassoan\n\nRevision: a9687151baf82e16801cc565b9a2afe92d8caba3\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-05 1:29:15 AM\nMessage:\nSTYLE: Explicitly associate \"https\" protocol with GitHub external projects\n\nConsidering that since March 2022, git protocol is not supported any more\nby GitHub, this commit updates external projects to explicitly use \"https\"\nprotocol.\n\nSee https://github.blog/2021-09-01-improving-git-protocol-security-github/\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\n\nRevision: a692acba8ce931b3446b0bbc0a5e1df9f0eaa9ef\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-04 5:12:52 PM\nMessage:\nENH: Update ExternalProjectDependency system based on commontk/Artichoke@ea920eb\n\nList of changes:\n\n$ git shortlog 0cc99d3..ea920eb --no-merges\nAndras Lasso (1):\n      Add support for EXTERNAL_PROJECT_ADDITIONAL_DIRS\n\nJean-Christophe Fillion-Robin (13):\n      ExternalProjectDependency: Remove debug statement inadvertently integrated\n      Add support for \"ExternalProject_Add_Dependencies\"\n      ExternalProject_SetIfNotDefined: Add test checking interaction with cache variable\n      ExternalProject_SetIfNotDefined: If any, display corresponding cache value\n      ExternalProject_SetIfNotDefined: Update docstring\n      ExternalProject_Include_Dependencies: Check if superbuild variable is improperly set\n      ExternalProjectDependency: Fix spellcheck\n      ExternalProjectDependency: Fix variable type of automatically propagated options\n      circleci: Use dockbuild/centos7-devtoolset7-gcc7 instead of dockbuild/centos6\n      ExternalProjectDependency: Ensure ``User Package Registry`` look up using ``find_*`` commands is disabled\n      ExternalProjectDependency: Fix CMake version check for disabling ``User Package Registry``\n      doc: Update website links to https versions\n      ExternalProjectDependency: Force git protocol to https\n\nRevision: dc1bbb94703d247bb9c2af1cfe75dad4c083215c\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 2:05:12 PM\nMessage:\nBUG: Fix CTKData git url\n\nGitHub does not support anymore git protocol for anonymous access, but must use https instead.\n\nRevision: 27d9dd79ecbd97c2c97d3b898f2fb6a8ec20b4c7\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 1:30:34 PM\nMessage:\nENH: Improve ctkLanguageComboBox\n\nMake ctkLanguageComboBox available in Qt Designer.\nAdd `refreshFromDirectories()` slot to update language list (e.g., when language files are added/removed).\nRemove unnecessary `onLanguageChanged()` signals emitted while the language list is being updated.\n\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\n\nRevision: b261e3f88867369dff8196c4f00c917707b4b782\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2021-12-29 9:35:34 PM\nMessage:\nBUG: Fix build with Slicer_USE_PYTHONQT set to OFF","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/650ed1467a3a6f59b6fe722e56ee8778d99e35e4"},{"sha":"06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"ENH: Make built-in procedural color nodes (such as PET-DICOM) read only\n\nBuilt-in procedural color nodes are read-only, but in the Colors module GUI the colormap was editable by clicking on the colormap and adding/moving control points.\nThis commit removes the control points, so the read-only nodes are not editable anymore.\n\nsee #6111","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642"},{"sha":"43e8f5b2407b4c83509406b1acf266e25412eb49","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Added to Windows build instructions to install Windows SDK","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/43e8f5b2407b4c83509406b1acf266e25412eb49"},{"sha":"423a07be7b542dc0a6bf313102c84e85bed91e7a","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point movement speed\n\nWhile a markup control point is moved then the displayable managers keep checking if the active place node class is supported.\nIt was checked by creating a node object each time, which was an expensive operation.\n\nImprove performance by determining if the active place node class is supported by checking if it is registered in the markups logic.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/423a07be7b542dc0a6bf313102c84e85bed91e7a"},{"sha":"537eb93979d0e18e505dc2e79beb43c1811f2c85","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point list table update speed\n\nThe control point table is not rebuilt anymore if any markups or display node modification is performed.\nIf a control point table row is updated then items are not recreated anymore\n\nfixes #6379","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/537eb93979d0e18e505dc2e79beb43c1811f2c85"},{"sha":"c79bded9408b764d786c089a9196f57c06aa821f","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix jumping to locked markup control point\n\nWhen a control point is locked it means that its position cannot be changed by click-and-dragging in a view.\nHowever, we still want to be able to click on a control point to jump to that position in all views.\n\nComplete lock of all interactions with the markup can be achieved by locking the node instead of locking specific control points.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c79bded9408b764d786c089a9196f57c06aa821f"},{"sha":"986744629c26cdf49300c0e41a67170389e070ae","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Make qSlicerUtilsTest1 more robust\n\nWhen the working copy is reconfigured and a full Slicer build is not performed then qSlicerUtilsTest1 failed with:\n\nLine 408 - Problem with isPluginBuiltIn(). Expected 0 for:\n\tpath: /Applications/Slicer.app/Contents/Extensions-30961/plugin.txt\n\tapplicationHomeDir: /Applications/Slicer.app\n\nIt was because Slicer revision in vtkSlicerConfigure.h and vtkSlicerVersionConfigure.h were different.\n\nMade the test more robust by taking the version information from Slicer_REVISION, which is the same as the tested\nvtkSlicerApplicationLogic::IsPluginBuiltIn method uses.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/986744629c26cdf49300c0e41a67170389e070ae"},{"sha":"7ce77363e20ccc5f679dacd5fc816af7989395ba","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add info on what additional module paths to add for compiled modules\n\nClarify that `Debug` or `Release` subfolders must be specified as additional module paths.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/7ce77363e20ccc5f679dacd5fc816af7989395ba"},{"sha":"c9a95b1bda4f3e4fececf04662752bc2cc478592","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Add DICOMweb example to webserver examples page","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c9a95b1bda4f3e4fececf04662752bc2cc478592"},{"sha":"0a71deaed03f69836a09986366a4085a12ef5a62","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add information about how to use other modules from Python modules","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0a71deaed03f69836a09986366a4085a12ef5a62"},{"sha":"3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typo in data_loading_and_saving.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb"},{"sha":"33d92d52f547ae0f3455952d9451150c65f30200","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typos in python_faq.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33d92d52f547ae0f3455952d9451150c65f30200"},{"sha":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add comment to LoadableCustomMarkups/CMakeLists.txt about NO_INSTALL\n\nThis comment may help users figuring out why their custom markup does not work when installing from a package (see discussion at https://discourse.slicer.org/t/packaging-error-for-custom-markups-module/23523).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232"},{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"}]},"public":true,"created_at":"2022-06-01T18:53:08Z"}
{"id":"22108370482","type":"PushEvent","actor":{"id":15837524,"login":"jamesobutler","display_login":"jamesobutler","gravatar_id":"","url":"https://api.github.com/users/jamesobutler","avatar_url":"https://avatars.githubusercontent.com/u/15837524?"},"repo":{"id":246976853,"name":"jamesobutler/Slicer","url":"https://api.github.com/repos/jamesobutler/Slicer"},"payload":{"push_id":10044865017,"size":28,"distinct_size":1,"ref":"refs/heads/c++17-standard","head":"f8b5e9efbcb4b68f599169070b5bb960988cc5c8","before":"ac1af6834fefe0e9e761f56ec31b0c5071551b85","commits":[{"sha":"650ed1467a3a6f59b6fe722e56ee8778d99e35e4","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"BUG: Update to latest CTK version\n\nIncludes several fixes and improvements:\n\nRevision: ec816cbb77986f6ee28c41a495e82238dee0e2d3\nAuthor: Mikhail Polkovnikov <pmkclnl@yandex.ru>\nDate: 2022-05-15 5:15:45 AM\nMessage:\nENH: Set a continuous CTF for the ctkVTKScalarsToColorsView as an editable function or as a read only one\n\nRevision: c97620f43dec6b1eac894d7d9c491d2af236dc22\nAuthor: Steve Pieper <pieper@isomics.com>\nDate: 2022-05-06 3:13:39 PM\nMessage:\nMerge pull request #1031 from lassoan/fix-clipping-during-rotation\n\nBUG: Fix clipped view content when rotating view\n\nRevision: 7580e14a76448da5ca83c3a7648e510563873f9a\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-05 7:00:54 PM\nMessage:\nBUG: Fix clipped view content when rotating view\n\nCamera clipping range must be reset after camera motion.\n\nFixes issue described here: https://discourse.slicer.org/t/extremities-of-a-long-volume-vanishing-when-rotating/23234/10?u=lassoan\n\nRevision: a9687151baf82e16801cc565b9a2afe92d8caba3\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-05 1:29:15 AM\nMessage:\nSTYLE: Explicitly associate \"https\" protocol with GitHub external projects\n\nConsidering that since March 2022, git protocol is not supported any more\nby GitHub, this commit updates external projects to explicitly use \"https\"\nprotocol.\n\nSee https://github.blog/2021-09-01-improving-git-protocol-security-github/\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\n\nRevision: a692acba8ce931b3446b0bbc0a5e1df9f0eaa9ef\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-04 5:12:52 PM\nMessage:\nENH: Update ExternalProjectDependency system based on commontk/Artichoke@ea920eb\n\nList of changes:\n\n$ git shortlog 0cc99d3..ea920eb --no-merges\nAndras Lasso (1):\n      Add support for EXTERNAL_PROJECT_ADDITIONAL_DIRS\n\nJean-Christophe Fillion-Robin (13):\n      ExternalProjectDependency: Remove debug statement inadvertently integrated\n      Add support for \"ExternalProject_Add_Dependencies\"\n      ExternalProject_SetIfNotDefined: Add test checking interaction with cache variable\n      ExternalProject_SetIfNotDefined: If any, display corresponding cache value\n      ExternalProject_SetIfNotDefined: Update docstring\n      ExternalProject_Include_Dependencies: Check if superbuild variable is improperly set\n      ExternalProjectDependency: Fix spellcheck\n      ExternalProjectDependency: Fix variable type of automatically propagated options\n      circleci: Use dockbuild/centos7-devtoolset7-gcc7 instead of dockbuild/centos6\n      ExternalProjectDependency: Ensure ``User Package Registry`` look up using ``find_*`` commands is disabled\n      ExternalProjectDependency: Fix CMake version check for disabling ``User Package Registry``\n      doc: Update website links to https versions\n      ExternalProjectDependency: Force git protocol to https\n\nRevision: dc1bbb94703d247bb9c2af1cfe75dad4c083215c\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 2:05:12 PM\nMessage:\nBUG: Fix CTKData git url\n\nGitHub does not support anymore git protocol for anonymous access, but must use https instead.\n\nRevision: 27d9dd79ecbd97c2c97d3b898f2fb6a8ec20b4c7\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 1:30:34 PM\nMessage:\nENH: Improve ctkLanguageComboBox\n\nMake ctkLanguageComboBox available in Qt Designer.\nAdd `refreshFromDirectories()` slot to update language list (e.g., when language files are added/removed).\nRemove unnecessary `onLanguageChanged()` signals emitted while the language list is being updated.\n\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\n\nRevision: b261e3f88867369dff8196c4f00c917707b4b782\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2021-12-29 9:35:34 PM\nMessage:\nBUG: Fix build with Slicer_USE_PYTHONQT set to OFF","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/650ed1467a3a6f59b6fe722e56ee8778d99e35e4"},{"sha":"06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"ENH: Make built-in procedural color nodes (such as PET-DICOM) read only\n\nBuilt-in procedural color nodes are read-only, but in the Colors module GUI the colormap was editable by clicking on the colormap and adding/moving control points.\nThis commit removes the control points, so the read-only nodes are not editable anymore.\n\nsee #6111","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642"},{"sha":"43e8f5b2407b4c83509406b1acf266e25412eb49","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Added to Windows build instructions to install Windows SDK","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/43e8f5b2407b4c83509406b1acf266e25412eb49"},{"sha":"423a07be7b542dc0a6bf313102c84e85bed91e7a","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point movement speed\n\nWhile a markup control point is moved then the displayable managers keep checking if the active place node class is supported.\nIt was checked by creating a node object each time, which was an expensive operation.\n\nImprove performance by determining if the active place node class is supported by checking if it is registered in the markups logic.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/423a07be7b542dc0a6bf313102c84e85bed91e7a"},{"sha":"537eb93979d0e18e505dc2e79beb43c1811f2c85","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point list table update speed\n\nThe control point table is not rebuilt anymore if any markups or display node modification is performed.\nIf a control point table row is updated then items are not recreated anymore\n\nfixes #6379","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/537eb93979d0e18e505dc2e79beb43c1811f2c85"},{"sha":"c79bded9408b764d786c089a9196f57c06aa821f","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix jumping to locked markup control point\n\nWhen a control point is locked it means that its position cannot be changed by click-and-dragging in a view.\nHowever, we still want to be able to click on a control point to jump to that position in all views.\n\nComplete lock of all interactions with the markup can be achieved by locking the node instead of locking specific control points.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c79bded9408b764d786c089a9196f57c06aa821f"},{"sha":"986744629c26cdf49300c0e41a67170389e070ae","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Make qSlicerUtilsTest1 more robust\n\nWhen the working copy is reconfigured and a full Slicer build is not performed then qSlicerUtilsTest1 failed with:\n\nLine 408 - Problem with isPluginBuiltIn(). Expected 0 for:\n\tpath: /Applications/Slicer.app/Contents/Extensions-30961/plugin.txt\n\tapplicationHomeDir: /Applications/Slicer.app\n\nIt was because Slicer revision in vtkSlicerConfigure.h and vtkSlicerVersionConfigure.h were different.\n\nMade the test more robust by taking the version information from Slicer_REVISION, which is the same as the tested\nvtkSlicerApplicationLogic::IsPluginBuiltIn method uses.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/986744629c26cdf49300c0e41a67170389e070ae"},{"sha":"7ce77363e20ccc5f679dacd5fc816af7989395ba","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add info on what additional module paths to add for compiled modules\n\nClarify that `Debug` or `Release` subfolders must be specified as additional module paths.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/7ce77363e20ccc5f679dacd5fc816af7989395ba"},{"sha":"c9a95b1bda4f3e4fececf04662752bc2cc478592","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Add DICOMweb example to webserver examples page","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c9a95b1bda4f3e4fececf04662752bc2cc478592"},{"sha":"0a71deaed03f69836a09986366a4085a12ef5a62","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add information about how to use other modules from Python modules","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0a71deaed03f69836a09986366a4085a12ef5a62"},{"sha":"3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typo in data_loading_and_saving.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb"},{"sha":"33d92d52f547ae0f3455952d9451150c65f30200","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typos in python_faq.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33d92d52f547ae0f3455952d9451150c65f30200"},{"sha":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add comment to LoadableCustomMarkups/CMakeLists.txt about NO_INSTALL\n\nThis comment may help users figuring out why their custom markup does not work when installing from a package (see discussion at https://discourse.slicer.org/t/packaging-error-for-custom-markups-module/23523).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232"},{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"}]},"public":true,"created_at":"2022-06-01T18:54:15Z"}
{"id":"22108378852","type":"PushEvent","actor":{"id":15837524,"login":"jamesobutler","display_login":"jamesobutler","gravatar_id":"","url":"https://api.github.com/users/jamesobutler","avatar_url":"https://avatars.githubusercontent.com/u/15837524?"},"repo":{"id":246976853,"name":"jamesobutler/Slicer","url":"https://api.github.com/repos/jamesobutler/Slicer"},"payload":{"push_id":10044868897,"size":28,"distinct_size":1,"ref":"refs/heads/c++20","head":"02c111206941f2576b75bae37657e4333da9eaab","before":"f79f8368ff8d891973c9c67999c6bb8cde820cb8","commits":[{"sha":"650ed1467a3a6f59b6fe722e56ee8778d99e35e4","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"BUG: Update to latest CTK version\n\nIncludes several fixes and improvements:\n\nRevision: ec816cbb77986f6ee28c41a495e82238dee0e2d3\nAuthor: Mikhail Polkovnikov <pmkclnl@yandex.ru>\nDate: 2022-05-15 5:15:45 AM\nMessage:\nENH: Set a continuous CTF for the ctkVTKScalarsToColorsView as an editable function or as a read only one\n\nRevision: c97620f43dec6b1eac894d7d9c491d2af236dc22\nAuthor: Steve Pieper <pieper@isomics.com>\nDate: 2022-05-06 3:13:39 PM\nMessage:\nMerge pull request #1031 from lassoan/fix-clipping-during-rotation\n\nBUG: Fix clipped view content when rotating view\n\nRevision: 7580e14a76448da5ca83c3a7648e510563873f9a\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-05 7:00:54 PM\nMessage:\nBUG: Fix clipped view content when rotating view\n\nCamera clipping range must be reset after camera motion.\n\nFixes issue described here: https://discourse.slicer.org/t/extremities-of-a-long-volume-vanishing-when-rotating/23234/10?u=lassoan\n\nRevision: a9687151baf82e16801cc565b9a2afe92d8caba3\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-05 1:29:15 AM\nMessage:\nSTYLE: Explicitly associate \"https\" protocol with GitHub external projects\n\nConsidering that since March 2022, git protocol is not supported any more\nby GitHub, this commit updates external projects to explicitly use \"https\"\nprotocol.\n\nSee https://github.blog/2021-09-01-improving-git-protocol-security-github/\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\n\nRevision: a692acba8ce931b3446b0bbc0a5e1df9f0eaa9ef\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-04 5:12:52 PM\nMessage:\nENH: Update ExternalProjectDependency system based on commontk/Artichoke@ea920eb\n\nList of changes:\n\n$ git shortlog 0cc99d3..ea920eb --no-merges\nAndras Lasso (1):\n      Add support for EXTERNAL_PROJECT_ADDITIONAL_DIRS\n\nJean-Christophe Fillion-Robin (13):\n      ExternalProjectDependency: Remove debug statement inadvertently integrated\n      Add support for \"ExternalProject_Add_Dependencies\"\n      ExternalProject_SetIfNotDefined: Add test checking interaction with cache variable\n      ExternalProject_SetIfNotDefined: If any, display corresponding cache value\n      ExternalProject_SetIfNotDefined: Update docstring\n      ExternalProject_Include_Dependencies: Check if superbuild variable is improperly set\n      ExternalProjectDependency: Fix spellcheck\n      ExternalProjectDependency: Fix variable type of automatically propagated options\n      circleci: Use dockbuild/centos7-devtoolset7-gcc7 instead of dockbuild/centos6\n      ExternalProjectDependency: Ensure ``User Package Registry`` look up using ``find_*`` commands is disabled\n      ExternalProjectDependency: Fix CMake version check for disabling ``User Package Registry``\n      doc: Update website links to https versions\n      ExternalProjectDependency: Force git protocol to https\n\nRevision: dc1bbb94703d247bb9c2af1cfe75dad4c083215c\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 2:05:12 PM\nMessage:\nBUG: Fix CTKData git url\n\nGitHub does not support anymore git protocol for anonymous access, but must use https instead.\n\nRevision: 27d9dd79ecbd97c2c97d3b898f2fb6a8ec20b4c7\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 1:30:34 PM\nMessage:\nENH: Improve ctkLanguageComboBox\n\nMake ctkLanguageComboBox available in Qt Designer.\nAdd `refreshFromDirectories()` slot to update language list (e.g., when language files are added/removed).\nRemove unnecessary `onLanguageChanged()` signals emitted while the language list is being updated.\n\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\n\nRevision: b261e3f88867369dff8196c4f00c917707b4b782\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2021-12-29 9:35:34 PM\nMessage:\nBUG: Fix build with Slicer_USE_PYTHONQT set to OFF","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/650ed1467a3a6f59b6fe722e56ee8778d99e35e4"},{"sha":"06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"ENH: Make built-in procedural color nodes (such as PET-DICOM) read only\n\nBuilt-in procedural color nodes are read-only, but in the Colors module GUI the colormap was editable by clicking on the colormap and adding/moving control points.\nThis commit removes the control points, so the read-only nodes are not editable anymore.\n\nsee #6111","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642"},{"sha":"43e8f5b2407b4c83509406b1acf266e25412eb49","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Added to Windows build instructions to install Windows SDK","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/43e8f5b2407b4c83509406b1acf266e25412eb49"},{"sha":"423a07be7b542dc0a6bf313102c84e85bed91e7a","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point movement speed\n\nWhile a markup control point is moved then the displayable managers keep checking if the active place node class is supported.\nIt was checked by creating a node object each time, which was an expensive operation.\n\nImprove performance by determining if the active place node class is supported by checking if it is registered in the markups logic.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/423a07be7b542dc0a6bf313102c84e85bed91e7a"},{"sha":"537eb93979d0e18e505dc2e79beb43c1811f2c85","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point list table update speed\n\nThe control point table is not rebuilt anymore if any markups or display node modification is performed.\nIf a control point table row is updated then items are not recreated anymore\n\nfixes #6379","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/537eb93979d0e18e505dc2e79beb43c1811f2c85"},{"sha":"c79bded9408b764d786c089a9196f57c06aa821f","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix jumping to locked markup control point\n\nWhen a control point is locked it means that its position cannot be changed by click-and-dragging in a view.\nHowever, we still want to be able to click on a control point to jump to that position in all views.\n\nComplete lock of all interactions with the markup can be achieved by locking the node instead of locking specific control points.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c79bded9408b764d786c089a9196f57c06aa821f"},{"sha":"986744629c26cdf49300c0e41a67170389e070ae","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Make qSlicerUtilsTest1 more robust\n\nWhen the working copy is reconfigured and a full Slicer build is not performed then qSlicerUtilsTest1 failed with:\n\nLine 408 - Problem with isPluginBuiltIn(). Expected 0 for:\n\tpath: /Applications/Slicer.app/Contents/Extensions-30961/plugin.txt\n\tapplicationHomeDir: /Applications/Slicer.app\n\nIt was because Slicer revision in vtkSlicerConfigure.h and vtkSlicerVersionConfigure.h were different.\n\nMade the test more robust by taking the version information from Slicer_REVISION, which is the same as the tested\nvtkSlicerApplicationLogic::IsPluginBuiltIn method uses.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/986744629c26cdf49300c0e41a67170389e070ae"},{"sha":"7ce77363e20ccc5f679dacd5fc816af7989395ba","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add info on what additional module paths to add for compiled modules\n\nClarify that `Debug` or `Release` subfolders must be specified as additional module paths.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/7ce77363e20ccc5f679dacd5fc816af7989395ba"},{"sha":"c9a95b1bda4f3e4fececf04662752bc2cc478592","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Add DICOMweb example to webserver examples page","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c9a95b1bda4f3e4fececf04662752bc2cc478592"},{"sha":"0a71deaed03f69836a09986366a4085a12ef5a62","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add information about how to use other modules from Python modules","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0a71deaed03f69836a09986366a4085a12ef5a62"},{"sha":"3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typo in data_loading_and_saving.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb"},{"sha":"33d92d52f547ae0f3455952d9451150c65f30200","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typos in python_faq.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33d92d52f547ae0f3455952d9451150c65f30200"},{"sha":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add comment to LoadableCustomMarkups/CMakeLists.txt about NO_INSTALL\n\nThis comment may help users figuring out why their custom markup does not work when installing from a package (see discussion at https://discourse.slicer.org/t/packaging-error-for-custom-markups-module/23523).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232"},{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"}]},"public":true,"created_at":"2022-06-01T18:54:41Z"}
{"id":"22108396997","type":"PushEvent","actor":{"id":15837524,"login":"jamesobutler","display_login":"jamesobutler","gravatar_id":"","url":"https://api.github.com/users/jamesobutler","avatar_url":"https://avatars.githubusercontent.com/u/15837524?"},"repo":{"id":246976853,"name":"jamesobutler/Slicer","url":"https://api.github.com/repos/jamesobutler/Slicer"},"payload":{"push_id":10044877355,"size":29,"distinct_size":2,"ref":"refs/heads/minimum-supported-platforms","head":"016151e1a7f51e36b5731d26f819b21cc7dc3fe8","before":"e9f28753bb0f44c57e5aaa1f5fbe4d26a1b9cf9c","commits":[{"sha":"650ed1467a3a6f59b6fe722e56ee8778d99e35e4","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"BUG: Update to latest CTK version\n\nIncludes several fixes and improvements:\n\nRevision: ec816cbb77986f6ee28c41a495e82238dee0e2d3\nAuthor: Mikhail Polkovnikov <pmkclnl@yandex.ru>\nDate: 2022-05-15 5:15:45 AM\nMessage:\nENH: Set a continuous CTF for the ctkVTKScalarsToColorsView as an editable function or as a read only one\n\nRevision: c97620f43dec6b1eac894d7d9c491d2af236dc22\nAuthor: Steve Pieper <pieper@isomics.com>\nDate: 2022-05-06 3:13:39 PM\nMessage:\nMerge pull request #1031 from lassoan/fix-clipping-during-rotation\n\nBUG: Fix clipped view content when rotating view\n\nRevision: 7580e14a76448da5ca83c3a7648e510563873f9a\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-05 7:00:54 PM\nMessage:\nBUG: Fix clipped view content when rotating view\n\nCamera clipping range must be reset after camera motion.\n\nFixes issue described here: https://discourse.slicer.org/t/extremities-of-a-long-volume-vanishing-when-rotating/23234/10?u=lassoan\n\nRevision: a9687151baf82e16801cc565b9a2afe92d8caba3\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-05 1:29:15 AM\nMessage:\nSTYLE: Explicitly associate \"https\" protocol with GitHub external projects\n\nConsidering that since March 2022, git protocol is not supported any more\nby GitHub, this commit updates external projects to explicitly use \"https\"\nprotocol.\n\nSee https://github.blog/2021-09-01-improving-git-protocol-security-github/\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\n\nRevision: a692acba8ce931b3446b0bbc0a5e1df9f0eaa9ef\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-04 5:12:52 PM\nMessage:\nENH: Update ExternalProjectDependency system based on commontk/Artichoke@ea920eb\n\nList of changes:\n\n$ git shortlog 0cc99d3..ea920eb --no-merges\nAndras Lasso (1):\n      Add support for EXTERNAL_PROJECT_ADDITIONAL_DIRS\n\nJean-Christophe Fillion-Robin (13):\n      ExternalProjectDependency: Remove debug statement inadvertently integrated\n      Add support for \"ExternalProject_Add_Dependencies\"\n      ExternalProject_SetIfNotDefined: Add test checking interaction with cache variable\n      ExternalProject_SetIfNotDefined: If any, display corresponding cache value\n      ExternalProject_SetIfNotDefined: Update docstring\n      ExternalProject_Include_Dependencies: Check if superbuild variable is improperly set\n      ExternalProjectDependency: Fix spellcheck\n      ExternalProjectDependency: Fix variable type of automatically propagated options\n      circleci: Use dockbuild/centos7-devtoolset7-gcc7 instead of dockbuild/centos6\n      ExternalProjectDependency: Ensure ``User Package Registry`` look up using ``find_*`` commands is disabled\n      ExternalProjectDependency: Fix CMake version check for disabling ``User Package Registry``\n      doc: Update website links to https versions\n      ExternalProjectDependency: Force git protocol to https\n\nRevision: dc1bbb94703d247bb9c2af1cfe75dad4c083215c\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 2:05:12 PM\nMessage:\nBUG: Fix CTKData git url\n\nGitHub does not support anymore git protocol for anonymous access, but must use https instead.\n\nRevision: 27d9dd79ecbd97c2c97d3b898f2fb6a8ec20b4c7\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 1:30:34 PM\nMessage:\nENH: Improve ctkLanguageComboBox\n\nMake ctkLanguageComboBox available in Qt Designer.\nAdd `refreshFromDirectories()` slot to update language list (e.g., when language files are added/removed).\nRemove unnecessary `onLanguageChanged()` signals emitted while the language list is being updated.\n\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\n\nRevision: b261e3f88867369dff8196c4f00c917707b4b782\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2021-12-29 9:35:34 PM\nMessage:\nBUG: Fix build with Slicer_USE_PYTHONQT set to OFF","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/650ed1467a3a6f59b6fe722e56ee8778d99e35e4"},{"sha":"06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"ENH: Make built-in procedural color nodes (such as PET-DICOM) read only\n\nBuilt-in procedural color nodes are read-only, but in the Colors module GUI the colormap was editable by clicking on the colormap and adding/moving control points.\nThis commit removes the control points, so the read-only nodes are not editable anymore.\n\nsee #6111","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642"},{"sha":"43e8f5b2407b4c83509406b1acf266e25412eb49","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Added to Windows build instructions to install Windows SDK","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/43e8f5b2407b4c83509406b1acf266e25412eb49"},{"sha":"423a07be7b542dc0a6bf313102c84e85bed91e7a","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point movement speed\n\nWhile a markup control point is moved then the displayable managers keep checking if the active place node class is supported.\nIt was checked by creating a node object each time, which was an expensive operation.\n\nImprove performance by determining if the active place node class is supported by checking if it is registered in the markups logic.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/423a07be7b542dc0a6bf313102c84e85bed91e7a"},{"sha":"537eb93979d0e18e505dc2e79beb43c1811f2c85","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point list table update speed\n\nThe control point table is not rebuilt anymore if any markups or display node modification is performed.\nIf a control point table row is updated then items are not recreated anymore\n\nfixes #6379","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/537eb93979d0e18e505dc2e79beb43c1811f2c85"},{"sha":"c79bded9408b764d786c089a9196f57c06aa821f","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix jumping to locked markup control point\n\nWhen a control point is locked it means that its position cannot be changed by click-and-dragging in a view.\nHowever, we still want to be able to click on a control point to jump to that position in all views.\n\nComplete lock of all interactions with the markup can be achieved by locking the node instead of locking specific control points.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c79bded9408b764d786c089a9196f57c06aa821f"},{"sha":"986744629c26cdf49300c0e41a67170389e070ae","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Make qSlicerUtilsTest1 more robust\n\nWhen the working copy is reconfigured and a full Slicer build is not performed then qSlicerUtilsTest1 failed with:\n\nLine 408 - Problem with isPluginBuiltIn(). Expected 0 for:\n\tpath: /Applications/Slicer.app/Contents/Extensions-30961/plugin.txt\n\tapplicationHomeDir: /Applications/Slicer.app\n\nIt was because Slicer revision in vtkSlicerConfigure.h and vtkSlicerVersionConfigure.h were different.\n\nMade the test more robust by taking the version information from Slicer_REVISION, which is the same as the tested\nvtkSlicerApplicationLogic::IsPluginBuiltIn method uses.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/986744629c26cdf49300c0e41a67170389e070ae"},{"sha":"7ce77363e20ccc5f679dacd5fc816af7989395ba","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add info on what additional module paths to add for compiled modules\n\nClarify that `Debug` or `Release` subfolders must be specified as additional module paths.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/7ce77363e20ccc5f679dacd5fc816af7989395ba"},{"sha":"c9a95b1bda4f3e4fececf04662752bc2cc478592","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Add DICOMweb example to webserver examples page","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c9a95b1bda4f3e4fececf04662752bc2cc478592"},{"sha":"0a71deaed03f69836a09986366a4085a12ef5a62","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add information about how to use other modules from Python modules","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0a71deaed03f69836a09986366a4085a12ef5a62"},{"sha":"3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typo in data_loading_and_saving.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb"},{"sha":"33d92d52f547ae0f3455952d9451150c65f30200","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typos in python_faq.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33d92d52f547ae0f3455952d9451150c65f30200"},{"sha":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add comment to LoadableCustomMarkups/CMakeLists.txt about NO_INSTALL\n\nThis comment may help users figuring out why their custom markup does not work when installing from a package (see discussion at https://discourse.slicer.org/t/packaging-error-for-custom-markups-module/23523).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232"},{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"}]},"public":true,"created_at":"2022-06-01T18:55:35Z"}
{"id":"22108420534","type":"PushEvent","actor":{"id":15837524,"login":"jamesobutler","display_login":"jamesobutler","gravatar_id":"","url":"https://api.github.com/users/jamesobutler","avatar_url":"https://avatars.githubusercontent.com/u/15837524?"},"repo":{"id":246976853,"name":"jamesobutler/Slicer","url":"https://api.github.com/repos/jamesobutler/Slicer"},"payload":{"push_id":10044888199,"size":23,"distinct_size":4,"ref":"refs/heads/6271-linting","head":"cb1cb69195194a270f09b58a2937926dee722181","before":"29eac170e0f298691018eb727195736662f6776c","commits":[{"sha":"c9a95b1bda4f3e4fececf04662752bc2cc478592","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Add DICOMweb example to webserver examples page","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c9a95b1bda4f3e4fececf04662752bc2cc478592"},{"sha":"0a71deaed03f69836a09986366a4085a12ef5a62","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add information about how to use other modules from Python modules","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0a71deaed03f69836a09986366a4085a12ef5a62"},{"sha":"3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typo in data_loading_and_saving.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb"},{"sha":"33d92d52f547ae0f3455952d9451150c65f30200","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typos in python_faq.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33d92d52f547ae0f3455952d9451150c65f30200"},{"sha":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add comment to LoadableCustomMarkups/CMakeLists.txt about NO_INSTALL\n\nThis comment may help users figuring out why their custom markup does not work when installing from a package (see discussion at https://discourse.slicer.org/t/packaging-error-for-custom-markups-module/23523).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232"},{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"},{"sha":"4eb2ea220004be0e1fbdaff73fa7129e39d0d7ee","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add custom label value mapping example to script repository","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/4eb2ea220004be0e1fbdaff73fa7129e39d0d7ee"},{"sha":"7e891f252fabae83024451c57d535b0a8cad381e","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in ExportSegmentsToLabelmapNode with empty segment ID list\n\nvtkSlicerSegmentationsModuleLogic::ExportSegmentsToLabelmapNode crashed when no segment IDs were provided and an input colorTable node was provided.\nEmpty segment list means all segments are to be exported, but this segment list was updated too late.\nFixed the issue by updating the segment list earlier.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/7e891f252fabae83024451c57d535b0a8cad381e"},{"sha":"df01d3350e087182deac0423187e6e714bd923ca","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"DOC: Fix incorrect links\n\nThis commit fixes incorrect links identified using markdown-link-check.\nSee https://github.com/tcort/markdown-link-check\n\nThe problematic links have been identified running the following:\n\n  cd Slicer\n  for f in $(fd -e md); do\n     echo $f | xargs npx markdown-link-check;\n  done\n\nType of updates are the following:\n\n* Obsolete links due to transition to GitHub\n  -> Previous reference was looked in \"SlicerGitSVNArchive\" and then\n     updated with the expected on in \"Slicer\"\n\n* Inconsistent reference to local document\n  -> Missing \".md\" suffic have been added\n\n* Non-existent website\n  -> Replaced with reference from web.archive.org\n\n* Redirect\n  -> Replaced with current URL\n\n* Incorrectly formatted link","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/df01d3350e087182deac0423187e6e714bd923ca"},{"sha":"6f5f171513e666e94596cdd8493b2fc377f1e922","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"DOC: Prefer language agnostic links associated with docs.github.com\n\nSince the \"docs.github.com\" website provide a language selector and also\nremember user preferences, this commit updates the relevant documentation\nlinks to be agnostic.\n\nCo-authored-by: James Butler <jbutler@sonovol.com>\nCo-authored-by: Andras Lasso <lasso@queensu.ca>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/6f5f171513e666e94596cdd8493b2fc377f1e922"},{"sha":"cf83447f69050c5e639f1e5e13f8a5591cfc95dc","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Update SlicerConfig to include Slicer_USE_TBB","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/cf83447f69050c5e639f1e5e13f8a5591cfc95dc"},{"sha":"33f7f2b5ef444ddfad5858e123cbd7025a65e451","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix extensions update check\n\nExtensions update check was not updated to work with Girder_v1 API.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33f7f2b5ef444ddfad5858e123cbd7025a65e451"},{"sha":"8c148a87f3b53e9a8cf1b74fdac86dbe93cc69c4","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Improve performance of getting extensions install history\n\nThe extensions server was queried for metadata of all previously installed extensions for all versions.\nThis time could add up to several seconds (or even tens of seconds on a computer with very long history of Slicer installations).\n\nThis commit changes the behavior that the extensions server is only queried for the latest version for each previously installed extension.\n\nAlso fixed ordering of revision numbers. Now numeric sorting is used instead of lexicographic.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/8c148a87f3b53e9a8cf1b74fdac86dbe93cc69c4"},{"sha":"ba994c6beb06c309f0efd148891e705bb6418753","author":{"email":"jbutler@sonovol.com","name":"James Butler"},"message":"STYLE: Update python code with whitespace fixes\n\nThis fixes all remaining pycodestyle E2 whitespace error codes.\n\nBulk of updates performed using autopep8 CLI\nwith the following command:\n\n  autopep8 --in-place --select E201,E202,E203,E211,E221,E222,E225,E226,E227,E228,E231,E241,E251,E261,E262,E265,E266,E271 $(git ls-files '*.py')\n\nSee https://github.com/hhatto/autopep8#readme\n\nReferences:\n\n* Whitespace after '('\n  See https://www.flake8rules.com/rules/E201.html\n\n* Whitespace before ')'\n  See https://www.flake8rules.com/rules/E202.html\n\n* Whitespace before ':'\n  See https://www.flake8rules.com/rules/E203.html\n\n* Whitespace before '('\n  See https://www.flake8rules.com/rules/E211.html\n\n* Multiple spaces before operator\n  See https://www.flake8rules.com/rules/E221.html\n\n* Multiple spaces after operator\n  See https://www.flake8rules.com/rules/E222.html\n\n* Missing whitespace around operator\n  See https://www.flake8rules.com/rules/E225.html\n\n* Missing whitespace around arithmetic operator\n  See https://www.flake8rules.com/rules/E226.html\n\n* Missing whitespace around bitwise or shift operator\n  See https://www.flake8rules.com/rules/E227.html\n\n* Missing whitespace around modulo operator\n  See https://www.flake8rules.com/rules/E228.html\n\n* Missing whitespace after ',', ';', or ':'\n  See https://www.flake8rules.com/rules/E231.html\n\n* Multiple spaces after ','\n  See https://www.flake8rules.com/rules/E241.html\n\n* Unexpected spaces around keyword / parameter equals\n  See https://www.flake8rules.com/rules/E251.html\n\n* At least two spaces before inline comment\n  See https://www.flake8rules.com/rules/E261.html\n\n* Inline comment should start with '# '\n  See https://www.flake8rules.com/rules/E262.html\n\n* Block comment should start with '# '\n  See https://www.flake8rules.com/rules/E265.html\n\n* Too many leading '#' for block comment\n  See https://www.flake8rules.com/rules/E266.html\n\n* Multiple spaces after keyword\n  See https://www.flake8rules.com/rules/E271.html","distinct":true,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/ba994c6beb06c309f0efd148891e705bb6418753"}]},"public":true,"created_at":"2022-06-01T18:56:46Z"}
{"id":"22108437724","type":"PushEvent","actor":{"id":15837524,"login":"jamesobutler","display_login":"jamesobutler","gravatar_id":"","url":"https://api.github.com/users/jamesobutler","avatar_url":"https://avatars.githubusercontent.com/u/15837524?"},"repo":{"id":246976853,"name":"jamesobutler/Slicer","url":"https://api.github.com/repos/jamesobutler/Slicer"},"payload":{"push_id":10044896124,"size":29,"distinct_size":2,"ref":"refs/heads/pyupgrade-pre-commit","head":"158229892f9810aa2603f79b05d5305287527b33","before":"7c6c4e885113c5ffa4e8894e5451f7bc650f8147","commits":[{"sha":"650ed1467a3a6f59b6fe722e56ee8778d99e35e4","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"BUG: Update to latest CTK version\n\nIncludes several fixes and improvements:\n\nRevision: ec816cbb77986f6ee28c41a495e82238dee0e2d3\nAuthor: Mikhail Polkovnikov <pmkclnl@yandex.ru>\nDate: 2022-05-15 5:15:45 AM\nMessage:\nENH: Set a continuous CTF for the ctkVTKScalarsToColorsView as an editable function or as a read only one\n\nRevision: c97620f43dec6b1eac894d7d9c491d2af236dc22\nAuthor: Steve Pieper <pieper@isomics.com>\nDate: 2022-05-06 3:13:39 PM\nMessage:\nMerge pull request #1031 from lassoan/fix-clipping-during-rotation\n\nBUG: Fix clipped view content when rotating view\n\nRevision: 7580e14a76448da5ca83c3a7648e510563873f9a\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-05 7:00:54 PM\nMessage:\nBUG: Fix clipped view content when rotating view\n\nCamera clipping range must be reset after camera motion.\n\nFixes issue described here: https://discourse.slicer.org/t/extremities-of-a-long-volume-vanishing-when-rotating/23234/10?u=lassoan\n\nRevision: a9687151baf82e16801cc565b9a2afe92d8caba3\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-05 1:29:15 AM\nMessage:\nSTYLE: Explicitly associate \"https\" protocol with GitHub external projects\n\nConsidering that since March 2022, git protocol is not supported any more\nby GitHub, this commit updates external projects to explicitly use \"https\"\nprotocol.\n\nSee https://github.blog/2021-09-01-improving-git-protocol-security-github/\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\n\nRevision: a692acba8ce931b3446b0bbc0a5e1df9f0eaa9ef\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-04 5:12:52 PM\nMessage:\nENH: Update ExternalProjectDependency system based on commontk/Artichoke@ea920eb\n\nList of changes:\n\n$ git shortlog 0cc99d3..ea920eb --no-merges\nAndras Lasso (1):\n      Add support for EXTERNAL_PROJECT_ADDITIONAL_DIRS\n\nJean-Christophe Fillion-Robin (13):\n      ExternalProjectDependency: Remove debug statement inadvertently integrated\n      Add support for \"ExternalProject_Add_Dependencies\"\n      ExternalProject_SetIfNotDefined: Add test checking interaction with cache variable\n      ExternalProject_SetIfNotDefined: If any, display corresponding cache value\n      ExternalProject_SetIfNotDefined: Update docstring\n      ExternalProject_Include_Dependencies: Check if superbuild variable is improperly set\n      ExternalProjectDependency: Fix spellcheck\n      ExternalProjectDependency: Fix variable type of automatically propagated options\n      circleci: Use dockbuild/centos7-devtoolset7-gcc7 instead of dockbuild/centos6\n      ExternalProjectDependency: Ensure ``User Package Registry`` look up using ``find_*`` commands is disabled\n      ExternalProjectDependency: Fix CMake version check for disabling ``User Package Registry``\n      doc: Update website links to https versions\n      ExternalProjectDependency: Force git protocol to https\n\nRevision: dc1bbb94703d247bb9c2af1cfe75dad4c083215c\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 2:05:12 PM\nMessage:\nBUG: Fix CTKData git url\n\nGitHub does not support anymore git protocol for anonymous access, but must use https instead.\n\nRevision: 27d9dd79ecbd97c2c97d3b898f2fb6a8ec20b4c7\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 1:30:34 PM\nMessage:\nENH: Improve ctkLanguageComboBox\n\nMake ctkLanguageComboBox available in Qt Designer.\nAdd `refreshFromDirectories()` slot to update language list (e.g., when language files are added/removed).\nRemove unnecessary `onLanguageChanged()` signals emitted while the language list is being updated.\n\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\n\nRevision: b261e3f88867369dff8196c4f00c917707b4b782\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2021-12-29 9:35:34 PM\nMessage:\nBUG: Fix build with Slicer_USE_PYTHONQT set to OFF","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/650ed1467a3a6f59b6fe722e56ee8778d99e35e4"},{"sha":"06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"ENH: Make built-in procedural color nodes (such as PET-DICOM) read only\n\nBuilt-in procedural color nodes are read-only, but in the Colors module GUI the colormap was editable by clicking on the colormap and adding/moving control points.\nThis commit removes the control points, so the read-only nodes are not editable anymore.\n\nsee #6111","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/06a7d6981e5d0aad72aab1713ed2dcaa8ae8b642"},{"sha":"43e8f5b2407b4c83509406b1acf266e25412eb49","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Added to Windows build instructions to install Windows SDK","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/43e8f5b2407b4c83509406b1acf266e25412eb49"},{"sha":"423a07be7b542dc0a6bf313102c84e85bed91e7a","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point movement speed\n\nWhile a markup control point is moved then the displayable managers keep checking if the active place node class is supported.\nIt was checked by creating a node object each time, which was an expensive operation.\n\nImprove performance by determining if the active place node class is supported by checking if it is registered in the markups logic.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/423a07be7b542dc0a6bf313102c84e85bed91e7a"},{"sha":"537eb93979d0e18e505dc2e79beb43c1811f2c85","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"PERF: Improve markups control point list table update speed\n\nThe control point table is not rebuilt anymore if any markups or display node modification is performed.\nIf a control point table row is updated then items are not recreated anymore\n\nfixes #6379","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/537eb93979d0e18e505dc2e79beb43c1811f2c85"},{"sha":"c79bded9408b764d786c089a9196f57c06aa821f","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix jumping to locked markup control point\n\nWhen a control point is locked it means that its position cannot be changed by click-and-dragging in a view.\nHowever, we still want to be able to click on a control point to jump to that position in all views.\n\nComplete lock of all interactions with the markup can be achieved by locking the node instead of locking specific control points.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c79bded9408b764d786c089a9196f57c06aa821f"},{"sha":"986744629c26cdf49300c0e41a67170389e070ae","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Make qSlicerUtilsTest1 more robust\n\nWhen the working copy is reconfigured and a full Slicer build is not performed then qSlicerUtilsTest1 failed with:\n\nLine 408 - Problem with isPluginBuiltIn(). Expected 0 for:\n\tpath: /Applications/Slicer.app/Contents/Extensions-30961/plugin.txt\n\tapplicationHomeDir: /Applications/Slicer.app\n\nIt was because Slicer revision in vtkSlicerConfigure.h and vtkSlicerVersionConfigure.h were different.\n\nMade the test more robust by taking the version information from Slicer_REVISION, which is the same as the tested\nvtkSlicerApplicationLogic::IsPluginBuiltIn method uses.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/986744629c26cdf49300c0e41a67170389e070ae"},{"sha":"7ce77363e20ccc5f679dacd5fc816af7989395ba","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add info on what additional module paths to add for compiled modules\n\nClarify that `Debug` or `Release` subfolders must be specified as additional module paths.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/7ce77363e20ccc5f679dacd5fc816af7989395ba"},{"sha":"c9a95b1bda4f3e4fececf04662752bc2cc478592","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Add DICOMweb example to webserver examples page","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/c9a95b1bda4f3e4fececf04662752bc2cc478592"},{"sha":"0a71deaed03f69836a09986366a4085a12ef5a62","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add information about how to use other modules from Python modules","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0a71deaed03f69836a09986366a4085a12ef5a62"},{"sha":"3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typo in data_loading_and_saving.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3858275bf1c29ad3cf57bb2f94f6b2d38b15efbb"},{"sha":"33d92d52f547ae0f3455952d9451150c65f30200","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fix typos in python_faq.md","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/33d92d52f547ae0f3455952d9451150c65f30200"},{"sha":"5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Add comment to LoadableCustomMarkups/CMakeLists.txt about NO_INSTALL\n\nThis comment may help users figuring out why their custom markup does not work when installing from a package (see discussion at https://discourse.slicer.org/t/packaging-error-for-custom-markups-module/23523).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/5d8c7a4c20ca3ab2a48d5e3535ff980e5a597232"},{"sha":"96ee24860f7e9cb7364f5e72872e6d0a0cbd097f","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/96ee24860f7e9cb7364f5e72872e6d0a0cbd097f"},{"sha":"80869f11bc507ddf60449014c3c11878cd4d9068","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/80869f11bc507ddf60449014c3c11878cd4d9068"},{"sha":"9c0ae2ad896a6c0292f51581b3f999e6a5f79b75","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Allow multiple qSlicerWebWidget instance injecting scripts into page (#6396)\n\nSince the script injection associated with qSlicerWebWidget was done globally\r\nand only once at the profile level, instantiating first qSlicerWebWidget\r\nand then qSlicerExtensionsInstallWidget was preventing the customization\r\ndone in qSlicerExtensionsInstallWidget::initializeWebChannelTransport()\r\nfrom being effective.\r\n\r\nThis commit addresses this by injecting the \"qwebchannel_appended.js\" script\r\non per page basis. Doing so ensures each qSlicerWebWidget (and derived\r\nobject like qSlicerExtensionsInstallWidget) will inject the expected script.\r\n\r\nIt follows up on da201359b (ENH: WIP - WebEngine support for\r\nextension manager).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/9c0ae2ad896a6c0292f51581b3f999e6a5f79b75"},{"sha":"834ec57120fcc33599d0259d367e5199ab0c3981","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"DOC: Fixed segment editor effect parameter descriptions","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/834ec57120fcc33599d0259d367e5199ab0c3981"},{"sha":"0ac1d7c71e2faf6dc01262e48a9d18b93f731da4","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure download request are handled by web widget triggering the request\n\nThis commit fixes a regression introduced in 9c0ae2ad8 (BUG: Allow multiple\nqSlicerWebWidget instance injecting scripts into page) where the observation\nof the profile \"downloadRequested()\" signal was done multiple time.\n\nSince the download request is emitted by the default profile observed by\nall web widget instances, this change ignores the request if it does not\noriginate from the page associated with this web widget instance.","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/0ac1d7c71e2faf6dc01262e48a9d18b93f731da4"},{"sha":"3e7cf17cac10ce9f531f0691854f0f5a8a7242b7","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix masking in Logical operators effect in Segment Editor\n\nWhen \"Fill\" method was used in Logical operators effect, sometimes masking settings had no effect.\nSee user error report at https://discourse.slicer.org/t/how-can-i-save-whole-heart-without-empty-spaces/23596/13\n\nThe problem was that Logical operators did not initialize the ModifierLabelmap and qMRMLSegmentEditorWidgetPrivate::updateMaskLabelmap() method\nrelied on having a valid ModifierLabelmap for creating the mask.\n\nFixed the issue by creating the mask labelmap based on the segmentation's reference image geometry (instead of the ModifierLabelmap's geometry,\nwhich may be invalid).","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/3e7cf17cac10ce9f531f0691854f0f5a8a7242b7"},{"sha":"197a96b2c7dc97a873e904e7f52c17fc572db18c","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix crash in interactive slice intersections\n\nWhen a view contained markups and interactive slice intersections, the application could crash while moving and dragging markup control points.\n\nThe problem was that when a widget was forced to release the focus the `widget->Leave(eventData)` method was called with `nullptr`, but the `Leave`\nmethod actually required valid `eventData`.\n\nFixed the issue by passing valid `eventData` to `SetHasFocus` method, which then can call `Leave` with that `eventData`.\n\nfixes #6400","distinct":false,"url":"https://api.github.com/repos/jamesobutler/Slicer/commits/197a96b2c7dc97a873e904e7f52c17fc572db18c"}]},"public":true,"created_at":"2022-06-01T18:57:38Z"}
