{"id":"36241605896","type":"IssueCommentEvent","actor":{"id":2996845,"login":"bokken","display_login":"bokken","gravatar_id":"","url":"https://api.github.com/users/bokken","avatar_url":"https://avatars.githubusercontent.com/u/2996845?"},"repo":{"id":553668398,"name":"tukaani-project/xz-java","url":"https://api.github.com/repos/tukaani-project/xz-java"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13","repository_url":"https://api.github.com/repos/tukaani-project/xz-java","labels_url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13/comments","events_url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13/events","html_url":"https://github.com/tukaani-project/xz-java/pull/13","id":2152921308,"node_id":"PR_kwDOIQBPLs5n2VAk","number":13,"title":"XZ compression improvements by optimizing array pattern matching","user":{"login":"bokken","id":2996845,"node_id":"MDQ6VXNlcjI5OTY4NDU=","avatar_url":"https://avatars.githubusercontent.com/u/2996845?v=4","gravatar_id":"","url":"https://api.github.com/users/bokken","html_url":"https://github.com/bokken","followers_url":"https://api.github.com/users/bokken/followers","following_url":"https://api.github.com/users/bokken/following{/other_user}","gists_url":"https://api.github.com/users/bokken/gists{/gist_id}","starred_url":"https://api.github.com/users/bokken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bokken/subscriptions","organizations_url":"https://api.github.com/users/bokken/orgs","repos_url":"https://api.github.com/users/bokken/repos","events_url":"https://api.github.com/users/bokken/events{/privacy}","received_events_url":"https://api.github.com/users/bokken/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-02-25T20:10:22Z","updated_at":"2024-03-05T00:08:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz-java/pulls/13","html_url":"https://github.com/tukaani-project/xz-java/pull/13","diff_url":"https://github.com/tukaani-project/xz-java/pull/13.diff","patch_url":"https://github.com/tukaani-project/xz-java/pull/13.patch","merged_at":null},"body":"This is incremental changes to simplify code review process. This first set of changes introduces the array mismatch abstraction and initial changes using Unsafe to read unaligned longs for x86 and aarch64.\r\n\r\nThis is similar to https://github.com/tukaani-project/xz-java/pull/12, but presents a smaller set of changes to simplify review.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [ ] Build was run locally and without warnings or errors\r\n- [ ] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\n-\r\n-\r\n-\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n<!-- Any other information that is important to this PR. -->","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz-java/issues/comments/1977705691","html_url":"https://github.com/tukaani-project/xz-java/pull/13#issuecomment-1977705691","issue_url":"https://api.github.com/repos/tukaani-project/xz-java/issues/13","id":1977705691,"node_id":"IC_kwDOIQBPLs514WTb","user":{"login":"bokken","id":2996845,"node_id":"MDQ6VXNlcjI5OTY4NDU=","avatar_url":"https://avatars.githubusercontent.com/u/2996845?v=4","gravatar_id":"","url":"https://api.github.com/users/bokken","html_url":"https://github.com/bokken","followers_url":"https://api.github.com/users/bokken/followers","following_url":"https://api.github.com/users/bokken/following{/other_user}","gists_url":"https://api.github.com/users/bokken/gists{/gist_id}","starred_url":"https://api.github.com/users/bokken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bokken/subscriptions","organizations_url":"https://api.github.com/users/bokken/orgs","repos_url":"https://api.github.com/users/bokken/repos","events_url":"https://api.github.com/users/bokken/events{/privacy}","received_events_url":"https://api.github.com/users/bokken/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T00:08:38Z","updated_at":"2024-03-05T00:08:38Z","author_association":"NONE","body":"Having updated the code to both appropriately handle the niceLenLimit in BT4 and adding the bounds check, here are updated benchmarks. This is still Windows 11, but this time an older i7-9850H. I will continue to work on getting results from the 13th Gen Intel(R) Core(TM) i7-1370P listed above.\r\n\r\nThe benefits still remain, though perhaps a bit more subdued.\r\n\r\nJDK 8\r\n```\r\nBenchmark                                             (file)  (preset)  Mode  Cnt      Score      Error  Units\r\nXZCompressionBenchmark.baseline              ihe_ovly_pr.dcm         3  avgt    3      1.050 ±    1.455  ms/op\r\nXZCompressionBenchmark.compress_legacy       ihe_ovly_pr.dcm         3  avgt    3      0.990 ±    0.282  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long  ihe_ovly_pr.dcm         3  avgt    3      0.909 ±    0.033  ms/op\r\nXZCompressionBenchmark.baseline              ihe_ovly_pr.dcm         6  avgt    3      5.030 ±    0.966  ms/op\r\nXZCompressionBenchmark.compress_legacy       ihe_ovly_pr.dcm         6  avgt    3      4.943 ±    0.998  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long  ihe_ovly_pr.dcm         6  avgt    3      3.565 ±    0.323  ms/op\r\nXZCompressionBenchmark.baseline                   image1.dcm         3  avgt    3   2488.136 ±  362.787  ms/op\r\nXZCompressionBenchmark.compress_legacy            image1.dcm         3  avgt    3   2737.924 ± 3097.448  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long       image1.dcm         3  avgt    3   2519.283 ±  269.135  ms/op\r\nXZCompressionBenchmark.baseline                   image1.dcm         6  avgt    3   5622.677 ±  611.597  ms/op\r\nXZCompressionBenchmark.compress_legacy            image1.dcm         6  avgt    3   5843.140 ±  712.834  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long       image1.dcm         6  avgt    3   5167.348 ±  159.264  ms/op\r\nXZCompressionBenchmark.baseline                    large.xml         3  avgt    3   1015.869 ±   31.331  ms/op\r\nXZCompressionBenchmark.compress_legacy             large.xml         3  avgt    3   1043.607 ±   64.194  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long        large.xml         3  avgt    3    985.266 ±  135.448  ms/op\r\nXZCompressionBenchmark.baseline                    large.xml         6  avgt    3   8714.679 ±  375.658  ms/op\r\nXZCompressionBenchmark.compress_legacy             large.xml         6  avgt    3  10698.865 ±  661.517  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long        large.xml         6  avgt    3   8009.948 ±  766.887  ms/op\r\n```\r\n\r\nJDK 11\r\n```\r\nBenchmark                                             (file)  (preset)  Mode  Cnt      Score      Error  Units\r\nXZCompressionBenchmark.baseline              ihe_ovly_pr.dcm         3  avgt    3      0.958 ±    0.135  ms/op\r\nXZCompressionBenchmark.compress_legacy       ihe_ovly_pr.dcm         3  avgt    3      0.995 ±    0.413  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long  ihe_ovly_pr.dcm         3  avgt    3      0.872 ±    0.287  ms/op\r\nXZCompressionBenchmark.baseline              ihe_ovly_pr.dcm         6  avgt    3      4.946 ±    0.695  ms/op\r\nXZCompressionBenchmark.compress_legacy       ihe_ovly_pr.dcm         6  avgt    3      4.737 ±    0.719  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long  ihe_ovly_pr.dcm         6  avgt    3      3.078 ±    0.142  ms/op\r\nXZCompressionBenchmark.baseline                   image1.dcm         3  avgt    3   2573.713 ±  884.641  ms/op\r\nXZCompressionBenchmark.compress_legacy            image1.dcm         3  avgt    3   2601.671 ±   80.804  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long       image1.dcm         3  avgt    3   2538.038 ±   91.440  ms/op\r\nXZCompressionBenchmark.baseline                   image1.dcm         6  avgt    3   5735.404 ±  224.716  ms/op\r\nXZCompressionBenchmark.compress_legacy            image1.dcm         6  avgt    3   5943.590 ± 1239.205  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long       image1.dcm         6  avgt    3   5039.090 ±  514.206  ms/op\r\nXZCompressionBenchmark.baseline                    large.xml         3  avgt    3   1007.470 ±  101.786  ms/op\r\nXZCompressionBenchmark.compress_legacy             large.xml         3  avgt    3   1025.208 ±   53.206  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long        large.xml         3  avgt    3    948.410 ±   32.021  ms/op\r\nXZCompressionBenchmark.baseline                    large.xml         6  avgt    3   8843.118 ± 1184.551  ms/op\r\nXZCompressionBenchmark.compress_legacy             large.xml         6  avgt    3  10581.770 ±   57.032  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long        large.xml         6  avgt    3   8495.813 ± 1967.609  ms/op\r\n```\r\n\r\nJDK 21\r\n```\r\nBenchmark                                             (file)  (preset)  Mode  Cnt     Score       Error  Units\r\nXZCompressionBenchmark.baseline              ihe_ovly_pr.dcm         3  avgt    3     1.089 ┬▒    0.521  ms/op\r\nXZCompressionBenchmark.compress_legacy       ihe_ovly_pr.dcm         3  avgt    3     0.861 ┬▒    0.304  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long  ihe_ovly_pr.dcm         3  avgt    3     0.804 ┬▒    0.055  ms/op\r\nXZCompressionBenchmark.baseline              ihe_ovly_pr.dcm         6  avgt    3     4.712 ┬▒    0.703  ms/op\r\nXZCompressionBenchmark.compress_legacy       ihe_ovly_pr.dcm         6  avgt    3     4.286 ┬▒    0.793  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long  ihe_ovly_pr.dcm         6  avgt    3     3.270 ┬▒    6.553  ms/op\r\nXZCompressionBenchmark.baseline                   image1.dcm         3  avgt    3  3969.325 ┬▒  812.895  ms/op\r\nXZCompressionBenchmark.compress_legacy            image1.dcm         3  avgt    3  2543.389 ┬▒  938.026  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long       image1.dcm         3  avgt    3  2539.038 ┬▒  703.522  ms/op\r\nXZCompressionBenchmark.baseline                   image1.dcm         6  avgt    3  6383.656 ┬▒  141.257  ms/op\r\nXZCompressionBenchmark.compress_legacy            image1.dcm         6  avgt    3  5604.145 ┬▒  428.556  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long       image1.dcm         6  avgt    3  5108.071 ┬▒  357.189  ms/op\r\nXZCompressionBenchmark.baseline                    large.xml         3  avgt    3  1211.232 ┬▒  425.227  ms/op\r\nXZCompressionBenchmark.compress_legacy             large.xml         3  avgt    3  1016.582 ┬▒   61.477  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long        large.xml         3  avgt    3   967.770 ┬▒  267.865  ms/op\r\nXZCompressionBenchmark.baseline                    large.xml         6  avgt    3  9171.859 ┬▒ 1681.746  ms/op\r\nXZCompressionBenchmark.compress_legacy             large.xml         6  avgt    3  9864.887 ┬▒  970.370  ms/op\r\nXZCompressionBenchmark.compress_unsafe_long        large.xml         6  avgt    3  7410.449 ┬▒  775.903  ms/op\r\n```","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz-java/issues/comments/1977705691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T00:08:39Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
