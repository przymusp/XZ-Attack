{"id":"38413393072","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":18437215724,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"9f1a6d6f9a258886933a22239a5b81af34b28199","before":"142e670a413a7bce1a2647f1cf1f33f8ee2dbe88","commits":[{"sha":"9f1a6d6f9a258886933a22239a5b81af34b28199","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Temporarily disable CRC CLMUL to silence OSS Fuzz\n\nThe code makes aligned 16-byte reads which may read up to 15 bytes\nbefore the beginning or past the end of the buffer if the buffer\nis misaligned. The unneeded bytes are then ignored. It cannot cross\npage boundaries and thus cannot cause access violations.\n\nThis inherently trips address sanitizer which was already disabled\nwith __attribute__((__no_sanitize_address__)). However, it also\ntrips memory sanitizer if the extra bytes are uninitialized because\nmemory sanitizer doesn't see that those bytes then get ignored by\nbyte shuffling in the xmm registers.\n\nThe plan is to change the code so that all sanitizers pass but it's\nnot finished yet (performance shouldn't get worse) so as a temporary\nmeasure to keep OSS Fuzz happy, the CLMUL CRC is now disabled even\nthough I think think the code is fine to use (and easy enough to review\nthe memory accesses in it too).","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9f1a6d6f9a258886933a22239a5b81af34b28199"}]},"public":true,"created_at":"2024-05-15T20:14:32Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
