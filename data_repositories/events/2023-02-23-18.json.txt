{"id":"27293457236","type":"IssueCommentEvent","actor":{"id":27388955,"login":"gabibguti","display_login":"gabibguti","gravatar_id":"","url":"https://api.github.com/users/gabibguti","avatar_url":"https://avatars.githubusercontent.com/u/27388955?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/38","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/38/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/38/events","html_url":"https://github.com/tukaani-project/xz/issues/38","id":1595531440,"node_id":"I_kwDOIQBEvs5fGeCw","number":38,"title":"[Feature Request]: Add minimum permissions to ci.yml workflow","user":{"login":"gabibguti","id":27388955,"node_id":"MDQ6VXNlcjI3Mzg4OTU1","avatar_url":"https://avatars.githubusercontent.com/u/27388955?v=4","gravatar_id":"","url":"https://api.github.com/users/gabibguti","html_url":"https://github.com/gabibguti","followers_url":"https://api.github.com/users/gabibguti/followers","following_url":"https://api.github.com/users/gabibguti/following{/other_user}","gists_url":"https://api.github.com/users/gabibguti/gists{/gist_id}","starred_url":"https://api.github.com/users/gabibguti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabibguti/subscriptions","organizations_url":"https://api.github.com/users/gabibguti/orgs","repos_url":"https://api.github.com/users/gabibguti/repos","events_url":"https://api.github.com/users/gabibguti/events{/privacy}","received_events_url":"https://api.github.com/users/gabibguti/received_events","type":"User","site_admin":false},"labels":[{"id":5149656179,"node_id":"LA_kwDOIQBEvs8AAAABMvGEcw","url":"https://api.github.com/repos/tukaani-project/xz/labels/CI/CD","name":"CI/CD","color":"c2e0c6","default":false,"description":"Improvements to CI/CD pipeline"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-02-22T17:44:58Z","updated_at":"2023-02-23T18:18:02Z","closed_at":"2023-02-23T18:18:01Z","author_association":"NONE","active_lock_reason":null,"body":"### Describe the Feature\n\nRestrict access in your workflow jobs to your repository. This is preventive action to keep your workflows safe. The `ci.yml` workflow jobs need just minimum permissions `contents: read`, and the default GitHub permissions are higher.\r\n\r\nThis is considered good-practice and is recommended by [GitHub](https://docs.github.com/en/actions/security-guides/automatic-token-authentication) itself and other security tools, such as [Scorecards](https://docs.github.com/en/actions/security-guides/automatic-token-authentication) and [StepSecurity](https://docs.github.com/en/actions/security-guides/automatic-token-authentication).\r\n\r\n##### Additional Context\r\nI'm Gabriela and I work on behalf of Google and the OpenSSF suggesting supply-chain security changes :)\n\n### Expected Complications\n\nNo.\n\n### Will I try to implement this new feature?\n\nYes","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/38/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/38/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1442226012","html_url":"https://github.com/tukaani-project/xz/issues/38#issuecomment-1442226012","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/38","id":1442226012,"node_id":"IC_kwDOIQBEvs5V9p9c","user":{"login":"gabibguti","id":27388955,"node_id":"MDQ6VXNlcjI3Mzg4OTU1","avatar_url":"https://avatars.githubusercontent.com/u/27388955?v=4","gravatar_id":"","url":"https://api.github.com/users/gabibguti","html_url":"https://github.com/gabibguti","followers_url":"https://api.github.com/users/gabibguti/followers","following_url":"https://api.github.com/users/gabibguti/following{/other_user}","gists_url":"https://api.github.com/users/gabibguti/gists{/gist_id}","starred_url":"https://api.github.com/users/gabibguti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabibguti/subscriptions","organizations_url":"https://api.github.com/users/gabibguti/orgs","repos_url":"https://api.github.com/users/gabibguti/repos","events_url":"https://api.github.com/users/gabibguti/events{/privacy}","received_events_url":"https://api.github.com/users/gabibguti/received_events","type":"User","site_admin":false},"created_at":"2023-02-23T18:18:01Z","updated_at":"2023-02-23T18:18:01Z","author_association":"NONE","body":"@JiaT75 Perfect! You are absolutely right. Changing to the restrictive workflow settings is enough. No need to make it explicit in the workflow :) I hope I can come back soon with other security recommendations!","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1442226012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-23T18:18:02Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27294093982","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":12724771061,"size":2,"distinct_size":2,"ref":"refs/heads/master","head":"805b45cd60bfd5da3d3d89077de3789df179b324","before":"fa9065fac54194fe0407fc7f0cc9633fdce13c21","commits":[{"sha":"30e95bb44c36ae26b2ab12a94343b215fec285e7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Avoid null pointer + 0 (undefined behavior in C).\n\nIn the C99 and C17 standards, section 6.5.6 paragraph 8 means that\nadding 0 to a null pointer is undefined behavior. As of writing,\n\"clang -fsanitize=undefined\" (Clang 15) diagnoses this. However,\nI'm not aware of any compiler that would take advantage of this\nwhen optimizing (Clang 15 included). It's good to avoid this anyway\nsince compilers might some day infer that pointer arithmetic implies\nthat the pointer is not NULL. That is, the following foo() would then\nunconditionally return 0, even for foo(NULL, 0):\n\n    void bar(char *a, char *b);\n\n    int foo(char *a, size_t n)\n    {\n        bar(a, a + n);\n        return a == NULL;\n    }\n\nIn contrast to C, C++ explicitly allows null pointer + 0. So if\nthe above is compiled as C++ then there is no undefined behavior\nin the foo(NULL, 0) call.\n\nTo me it seems that changing the C standard would be the sane\nthing to do (just add one sentence) as it would ensure that a huge\namount of old code won't break in the future. Based on web searches\nit seems that a large number of codebases (where null pointer + 0\noccurs) are being fixed instead to be future-proof in case compilers\nwill some day optimize based on it (like making the above foo(NULL, 0)\nreturn 0) which in the worst case will cause security bugs.\n\nSome projects don't plan to change it. For example, gnulib and thus\nmany GNU tools currently require that null pointer + 0 is defined:\n\n    https://lists.gnu.org/archive/html/bug-gnulib/2021-11/msg00000.html\n\n    https://www.gnu.org/software/gnulib/manual/html_node/Other-portability-assumptions.html\n\nIn XZ Utils null pointer + 0 issue should be fixed after this\ncommit. This adds a few if-statements and thus branches to avoid\nnull pointer + 0. These check for size > 0 instead of ptr != NULL\nbecause this way bugs where size > 0 && ptr == NULL will likely\nget caught quickly. None of them are in hot spots so it shouldn't\nmatter for performance.\n\nA little less readable version would be replacing\n\n    ptr + offset\n\nwith\n\n    offset != 0 ? ptr + offset : ptr\n\nor creating a macro for it:\n\n    #define my_ptr_add(ptr, offset) \\\n            ((offset) != 0 ? ((ptr) + (offset)) : (ptr))\n\nChecking for offset != 0 instead of ptr != NULL allows GCC >= 8.1,\nClang >= 7, and Clang-based ICX to optimize it to the very same code\nas ptr + offset. That is, it won't create a branch. So for hot code\nthis could be a good solution to avoid null pointer + 0. Unfortunately\nother compilers like ICC 2021 or MSVC 19.33 (VS2022) will create a\nbranch from my_ptr_add().\n\nThanks to Marcin Kowalczyk for reporting the problem:\nhttps://github.com/tukaani-project/xz/issues/36","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/30e95bb44c36ae26b2ab12a94343b215fec285e7"},{"sha":"805b45cd60bfd5da3d3d89077de3789df179b324","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/805b45cd60bfd5da3d3d89077de3789df179b324"}]},"public":true,"created_at":"2023-02-23T18:48:17Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27294250640","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/36","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/events","html_url":"https://github.com/tukaani-project/xz/issues/36","id":1590668850,"node_id":"I_kwDOIQBEvs5ez64y","number":36,"title":"[Bug]: Undefined behavior: NULL + 0","user":{"login":"QrczakMK","id":8471716,"node_id":"MDQ6VXNlcjg0NzE3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/8471716?v=4","gravatar_id":"","url":"https://api.github.com/users/QrczakMK","html_url":"https://github.com/QrczakMK","followers_url":"https://api.github.com/users/QrczakMK/followers","following_url":"https://api.github.com/users/QrczakMK/following{/other_user}","gists_url":"https://api.github.com/users/QrczakMK/gists{/gist_id}","starred_url":"https://api.github.com/users/QrczakMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QrczakMK/subscriptions","organizations_url":"https://api.github.com/users/QrczakMK/orgs","repos_url":"https://api.github.com/users/QrczakMK/repos","events_url":"https://api.github.com/users/QrczakMK/events{/privacy}","received_events_url":"https://api.github.com/users/QrczakMK/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-02-19T12:23:49Z","updated_at":"2023-02-23T18:56:06Z","closed_at":"2023-02-23T18:56:05Z","author_association":"NONE","active_lock_reason":null,"body":"### Describe the bug\r\n\r\nWhen given empty buffers with `next_in == NULL` and `avail_in == 0` (or same for `out`), liblzma sometimes computes `NULL + 0`, which has undefined behavior in C (it is defined in C++).\r\n\r\nThis gets detected by ubsan.\r\n\r\nThe following places are affected (possibly more):\r\n\r\nhttps://github.com/tukaani-project/xz/blob/913ddc5572b9455fa0cf299be2e35c708840e922/src/liblzma/common/common.c#L291-L297\r\nThe first 3 lines can be guarded with `if (in_pos != 0)`, the last 3 lines can be guarded with `if (out_pos != 0)`.\r\n\r\nhttps://github.com/tukaani-project/xz/blob/75f1a6c26df4ce329da0882786403e3ccf5cd898/src/liblzma/common/block_encoder.c#L81\r\nWrite `in_start != 0 ? in + in_start : in`.\r\n\r\n### Version\r\n\r\n5.4.1\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Relevant log output\r\n\r\n_No response_","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/36/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1442277117","html_url":"https://github.com/tukaani-project/xz/issues/36#issuecomment-1442277117","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/36","id":1442277117,"node_id":"IC_kwDOIQBEvs5V92b9","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-02-23T18:56:05Z","updated_at":"2023-02-23T18:56:05Z","author_association":"MEMBER","body":"It should be fixed now. Thanks!\r\n\r\nXZ Embedded has the same problem. The initial plan is to fix it by changing the API documentation to say that the input and output buffer pointers must not be NULL even for empty buffers. First the code in the Linux kernel has to be checked if NULLs are used in xz_dec_* calls.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1442277117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-23T18:56:06Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27294250752","type":"IssuesEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/36","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/events","html_url":"https://github.com/tukaani-project/xz/issues/36","id":1590668850,"node_id":"I_kwDOIQBEvs5ez64y","number":36,"title":"[Bug]: Undefined behavior: NULL + 0","user":{"login":"QrczakMK","id":8471716,"node_id":"MDQ6VXNlcjg0NzE3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/8471716?v=4","gravatar_id":"","url":"https://api.github.com/users/QrczakMK","html_url":"https://github.com/QrczakMK","followers_url":"https://api.github.com/users/QrczakMK/followers","following_url":"https://api.github.com/users/QrczakMK/following{/other_user}","gists_url":"https://api.github.com/users/QrczakMK/gists{/gist_id}","starred_url":"https://api.github.com/users/QrczakMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QrczakMK/subscriptions","organizations_url":"https://api.github.com/users/QrczakMK/orgs","repos_url":"https://api.github.com/users/QrczakMK/repos","events_url":"https://api.github.com/users/QrczakMK/events{/privacy}","received_events_url":"https://api.github.com/users/QrczakMK/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-02-19T12:23:49Z","updated_at":"2023-02-23T18:56:06Z","closed_at":"2023-02-23T18:56:05Z","author_association":"NONE","active_lock_reason":null,"body":"### Describe the bug\r\n\r\nWhen given empty buffers with `next_in == NULL` and `avail_in == 0` (or same for `out`), liblzma sometimes computes `NULL + 0`, which has undefined behavior in C (it is defined in C++).\r\n\r\nThis gets detected by ubsan.\r\n\r\nThe following places are affected (possibly more):\r\n\r\nhttps://github.com/tukaani-project/xz/blob/913ddc5572b9455fa0cf299be2e35c708840e922/src/liblzma/common/common.c#L291-L297\r\nThe first 3 lines can be guarded with `if (in_pos != 0)`, the last 3 lines can be guarded with `if (out_pos != 0)`.\r\n\r\nhttps://github.com/tukaani-project/xz/blob/75f1a6c26df4ce329da0882786403e3ccf5cd898/src/liblzma/common/block_encoder.c#L81\r\nWrite `in_start != 0 ? in + in_start : in`.\r\n\r\n### Version\r\n\r\n5.4.1\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Relevant log output\r\n\r\n_No response_","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/36/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-02-23T18:56:07Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
