{"id":"32639035805","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15458894888,"size":22,"distinct_size":22,"ref":"refs/heads/crc_clmul","head":"d035eccb9dd1a8f305dcac958a0cc014ea70b4ca","before":"5eb8f6572c7d1db18d566f0a88dc755993e3ca93","commits":[{"sha":"5d3374d521dc98e959e3ed8fc9301b8dc9ed4766","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Trivial cleanups","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5d3374d521dc98e959e3ed8fc9301b8dc9ed4766"},{"sha":"c40abfe100ecb0cc4b482f7f6f3a2334c7a2c89b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Rename is_clmul_supported() to keep namespace clean.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c40abfe100ecb0cc4b482f7f6f3a2334c7a2c89b"},{"sha":"d89094af94a37b767a9b90755d5989c6f00353de","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use /// for Doxygen (internal docs).","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d89094af94a37b767a9b90755d5989c6f00353de"},{"sha":"7bf69d1f85ea877f69e3354e86d00850d85e883a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Rename crcxx_clmul() in comments too.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7bf69d1f85ea877f69e3354e86d00850d85e883a"},{"sha":"b6f39d528675ce565a2b3c57d4b3cbd8dc61b2cc","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Mention E2K in addition to x86.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b6f39d528675ce565a2b3c57d4b3cbd8dc61b2cc"},{"sha":"94c745bf5aaf3351ffb87db492d7542b106b9c14","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Simplify forced inlining.\n\nAll compilers that can build this should support\n__attribute__((__always_inline__)) too (except MSVC).\nIf this assumption is false then we will get a bug report\ninstead of silently producing slow code.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/94c745bf5aaf3351ffb87db492d7542b106b9c14"},{"sha":"474ee4fef2d41f1709a0408ef644d8181c12f820","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Don't build crc_clmul.c when it's not needed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/474ee4fef2d41f1709a0408ef644d8181c12f820"},{"sha":"6f75a46fb03162046f74468270cb0a468ffb1d64","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Include common.h in crc_common.h.\n\ncrc_common.h depends on common.h. Also, almost all headers\ninclude common.h except when there is a reason to not do so.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6f75a46fb03162046f74468270cb0a468ffb1d64"},{"sha":"c2936bdda5cb0ea31a15d3e8091fd963ee55f255","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add empty lines.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c2936bdda5cb0ea31a15d3e8091fd963ee55f255"},{"sha":"992eb7140ab3de02615c1eb9297d398aa6a100f5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Require using semicolons with MASK_/L/H/LH macros.\n\nOne MASK_LH call had a semicolon while it wasn't actually needed.\nRequiring semicolons looks more natural.\n\nThese don't use \"do { } while (0)\" but it should be fine here.\n\nThis is how it was in f644473a211394447824ea00518d0a214ff3f7f2.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/992eb7140ab3de02615c1eb9297d398aa6a100f5"},{"sha":"820d6b377b1f5d5f3678408f07c070c3e31d10c5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix const-correctness in a cast.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/820d6b377b1f5d5f3678408f07c070c3e31d10c5"},{"sha":"b79d577c76a6324c1110628e6cfdf2a2210efa2d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Omit extra spaces from comments.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b79d577c76a6324c1110628e6cfdf2a2210efa2d"},{"sha":"d5d1dbdf5d39e3de22996b8efdb9804e4bee962d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix and restore comments.\n\nThe variable initial_crc had been renamed to vcrc.\n\nThe \"second xor\" is now directly below the first one.\n\nComment about v1/v0/vcrc were restored and adapted from\nf644473a211394447824ea00518d0a214ff3f7f2.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d5d1dbdf5d39e3de22996b8efdb9804e4bee962d"},{"sha":"4fe0133dd13f77151bd013d1994b860beb551637","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add and restore const.\n\nThe ones in crc_simd_body() were const in\nf644473a211394447824ea00518d0a214ff3f7f2 so these were restored\napart from those variables that are incorrectly now uintptr_t.\nPointer value (like \"end\") weren't made const as it's not\ndone elsewhere in liblzma either since it gets a bit noisy to read.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4fe0133dd13f77151bd013d1994b860beb551637"},{"sha":"4b6afcf1c0128241e6a0452137143a9fb7e4765b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use size_t instead of uintptr_t where appropriate and add const.\n\nThis restores skip_start and skip_end as they were in\n718b22a6c5e3ee5de123323ea798872381f9320e which silenced\na warning on MSVC on how skip_end was set.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4b6afcf1c0128241e6a0452137143a9fb7e4765b"},{"sha":"9ec31da72eae66785d3f73bece0eed521a61a538","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add missing #pragma GCC diagnostic pop.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9ec31da72eae66785d3f73bece0eed521a61a538"},{"sha":"68d102ee68b0d88ab9c2f929b89e02eb205f8ac8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Silence a warning from -Wsign-conversion.\n\nThe quieter version was restored from\nf644473a211394447824ea00518d0a214ff3f7f2.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/68d102ee68b0d88ab9c2f929b89e02eb205f8ac8"},{"sha":"de7717213afb1902e361622f8a3381d80415c729","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Replace #pragma to silense -Wconversion instead of -Wsign-conversion.\n\n-Wsign-conversion is silent in crc_simd_body() now.\n-Wconversion isn't but it's not used by default either.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/de7717213afb1902e361622f8a3381d80415c729"},{"sha":"0e74845e45bac1597b67cc8bc28afdde8c3a565a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"FIXME? Silence -Wconversion in crc_simd_body() and remove the #pragmas.\n\nDo the casts get too silly? Maybe omit this commit?","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/0e74845e45bac1597b67cc8bc28afdde8c3a565a"},{"sha":"f962447c8d4f73bd60c18877d8533fa2f82fc179","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove #pragmas for -Wconversion as there are no such warnings now.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f962447c8d4f73bd60c18877d8533fa2f82fc179"}]},"public":true,"created_at":"2023-10-17T22:13:14Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
