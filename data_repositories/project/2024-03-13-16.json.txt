{"id":"36518374125","type":"IssueCommentEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/18","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/18/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/18/events","html_url":"https://github.com/tukaani-project/xz/issues/18","id":1531020555,"node_id":"I_kwDOIQBEvs5bQYUL","number":18,"title":"[Feature Request]: Create Windows CI Support","user":{"login":"JiaT75","id":78042786,"node_id":"MDQ6VXNlcjc4MDQyNzg2","avatar_url":"https://avatars.githubusercontent.com/u/78042786?v=4","gravatar_id":"","url":"https://api.github.com/users/JiaT75","html_url":"https://github.com/JiaT75","followers_url":"https://api.github.com/users/JiaT75/followers","following_url":"https://api.github.com/users/JiaT75/following{/other_user}","gists_url":"https://api.github.com/users/JiaT75/gists{/gist_id}","starred_url":"https://api.github.com/users/JiaT75/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JiaT75/subscriptions","organizations_url":"https://api.github.com/users/JiaT75/orgs","repos_url":"https://api.github.com/users/JiaT75/repos","events_url":"https://api.github.com/users/JiaT75/events{/privacy}","received_events_url":"https://api.github.com/users/JiaT75/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2023-01-12T16:27:27Z","updated_at":"2024-03-13T16:12:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Describe the Feature\n\nBoth MinGw and CMake Windows builds should be tested.\n\n### Expected Complications\n\nDownloading the correct build environment dependencies could be tricky. GitHub might have some reusable components to help with this.\n\n### Will I try to implement this new feature?\n\nYes","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/18/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/18/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1994829182","html_url":"https://github.com/tukaani-project/xz/issues/18#issuecomment-1994829182","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/18","id":1994829182,"node_id":"IC_kwDOIQBEvs525q1-","user":{"login":"JiaT75","id":78042786,"node_id":"MDQ6VXNlcjc4MDQyNzg2","avatar_url":"https://avatars.githubusercontent.com/u/78042786?v=4","gravatar_id":"","url":"https://api.github.com/users/JiaT75","html_url":"https://github.com/JiaT75","followers_url":"https://api.github.com/users/JiaT75/followers","following_url":"https://api.github.com/users/JiaT75/following{/other_user}","gists_url":"https://api.github.com/users/JiaT75/gists{/gist_id}","starred_url":"https://api.github.com/users/JiaT75/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JiaT75/subscriptions","organizations_url":"https://api.github.com/users/JiaT75/orgs","repos_url":"https://api.github.com/users/JiaT75/repos","events_url":"https://api.github.com/users/JiaT75/events{/privacy}","received_events_url":"https://api.github.com/users/JiaT75/received_events","type":"User","site_admin":false},"created_at":"2024-03-13T16:12:28Z","updated_at":"2024-03-13T16:12:28Z","author_association":"MEMBER","body":"> I just updated the demo pipeline to \"somewhat complete\" state that suffices my own purposes:\r\n> \r\n> * 4 Build Configuration with Visual Studio 2022 (x64 MSVC, x86 MSVC, x64 Clang-cl, x86 Clang-cl)\r\n> * execution of the test executables\r\n> * publishing of xz.exe and co (disabled per default)\r\n\r\nThis will be really helpful to include since for now I just test things locally on a VM with x64 MSVC. Automating this plus extending coverage will save me some effort :)\r\n\r\n> Well, I'm neither familiar with github actions nor with windows batch (nor powershell). But I stuck to the \"out of the box\" tools for better compatibility with VS2022/Windows only setups.\r\n\r\nI haven't worked much with Windows Batch scripting or PowerShell either :/\r\nAt a glance what you have makes sense but I will play around with it a bit.\r\n\r\n> > The existing CI tests likely need a bit of a clean up anyway\r\n> \r\n> I found 13 test-executables (test_*.exe). I added calls to those in `build-with-vs2022.bat` and to the pipeline. Not sure if there is a way to standardise test-execution over all platforms w/o rewriting the tests to some test-framework?\r\n\r\nWe currently just use the built-in test harnesses for our Autotools and CMake builds. The way you have it now seems logical, to just loop through the test executables and run them, although the best way to report the errors may need to be looked at. Maybe this is something we could add to `tuktest.h`, but at the moment I'm not sure how it would fit in.\r\n\r\n> > We don't have plans for using CI for releases.\r\n> \r\n> OK. To be honest, Windows releases for v5.6.x is what brought me here at the first place :-)\r\n\r\nWe had another recent request for Windows binaries, so we will more seriously consider this. We need to verify there are no license restrictions preventing us from distributing Windows binaries with the compiler we choose to use (MinGW-w64, MSVC, Clang-cl, etc.). Also, I would probably want to generate the Windows binaries locally instead of relying on GitHub runners. The GitHub CI runners are a common attack surface these days so it could be an extra risk. Currently, we only use CI for testing so if the GitHub runners are compromised then its not a security threat. \r\n\r\n> I'm more than happy to create PRs, adapt the scripts to the projects needs and clean things up as required. Feel also free to grab what you need.\r\n\r\nI cloned your fork already, so no need to make a PR unless you want to. I suppose it could be helpful to keep the conversation focused on various parts of the code. We usually don't merge PRs directly anyway. Instead we usually take commits we like and adapt the other parts as needed. Don't worry, you'll still be the Author on any commits that are mostly unchanged :)\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1994829182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-13T16:12:30Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36519728367","type":"IssueCommentEvent","actor":{"id":19591868,"login":"skosukhin","display_login":"skosukhin","gravatar_id":"","url":"https://api.github.com/users/skosukhin","avatar_url":"https://avatars.githubusercontent.com/u/19591868?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/90","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/90/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/90/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/90/events","html_url":"https://github.com/tukaani-project/xz/pull/90","id":2183813556,"node_id":"PR_kwDOIQBEvs5pft-s","number":90,"title":"Build: Let the users override the symbol versioning variant.","user":{"login":"skosukhin","id":19591868,"node_id":"MDQ6VXNlcjE5NTkxODY4","avatar_url":"https://avatars.githubusercontent.com/u/19591868?v=4","gravatar_id":"","url":"https://api.github.com/users/skosukhin","html_url":"https://github.com/skosukhin","followers_url":"https://api.github.com/users/skosukhin/followers","following_url":"https://api.github.com/users/skosukhin/following{/other_user}","gists_url":"https://api.github.com/users/skosukhin/gists{/gist_id}","starred_url":"https://api.github.com/users/skosukhin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skosukhin/subscriptions","organizations_url":"https://api.github.com/users/skosukhin/orgs","repos_url":"https://api.github.com/users/skosukhin/repos","events_url":"https://api.github.com/users/skosukhin/events{/privacy}","received_events_url":"https://api.github.com/users/skosukhin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-03-13T11:53:44Z","updated_at":"2024-03-13T16:51:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/90","html_url":"https://github.com/tukaani-project/xz/pull/90","diff_url":"https://github.com/tukaani-project/xz/pull/90.diff","patch_url":"https://github.com/tukaani-project/xz/pull/90.patch","merged_at":null},"body":"There are cases when the users want to decide themselves whether they want to have the generic (even on GNU/Linux) or the linux (even if we do not recommend that) symbol versioning variant. The former might be needed to circumvent compiler issues (i.e. the compiler does not support all features that are required for the linux versioning), the latter might help in overriding the assumptions made in the configure script.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [x] Build was run locally and without warnings or errors\r\n- [x] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\nIt's not possible to override the symbol versioning variant on GNU/Linux:\r\n```console\r\n$ ./configure --enable-symbol-versions=auto | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=yes | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=no | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... no\r\n$ ./configure --enable-symbol-versions=linux | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=generic | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=something-else | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions --disable-shared | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... no (not building a shared library)\r\n$ ./configure --with-pic | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... \r\nconfigure: error: \r\n    On GNU/Linux, building both shared and static library at the same time\r\n    is not supported if --with-pic or --without-pic is used.\r\n    Use either --disable-shared or --disable-static to build one type\r\n    of library at a time. If both types are needed, build one at a time,\r\n    possibly picking only src/liblzma/.libs/liblzma.a from the static build.\r\n```\r\n\r\n## What is the new behavior?\r\nIt is possible to override the symbol versioning variant:\r\n```console\r\n$ ./configure --enable-symbol-versions=auto | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=yes | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=no | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... no\r\n$ ./configure --enable-symbol-versions=linux | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (linux)\r\n$ ./configure --enable-symbol-versions=generic | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... yes (generic)\r\n$ ./configure --enable-symbol-versions=something-else | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... \r\nconfigure: error: unknown symbol versioning variant 'something-else'\r\n$ ./configure --enable-symbol-versions --disable-shared | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... no (not building a shared library)\r\n$ ./configure --with-pic | grep 'library symbol versioning'\r\nchecking if library symbol versioning should be used... \r\nconfigure: error: \r\n    On GNU/Linux, building both shared and static library at the same time\r\n    is not supported if --with-pic or --without-pic is used.\r\n    Use either --disable-shared or --disable-static to build one type\r\n    of library at a time. If both types are needed, build one at a time,\r\n    possibly picking only src/liblzma/.libs/liblzma.a from the static build.\r\n```\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n\r\nIt looks like `--enable-symbol-versions=generic` was an unintended feature that existed before 0682439.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/90/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/90/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1994969529","html_url":"https://github.com/tukaani-project/xz/pull/90#issuecomment-1994969529","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/90","id":1994969529,"node_id":"IC_kwDOIQBEvs526NG5","user":{"login":"skosukhin","id":19591868,"node_id":"MDQ6VXNlcjE5NTkxODY4","avatar_url":"https://avatars.githubusercontent.com/u/19591868?v=4","gravatar_id":"","url":"https://api.github.com/users/skosukhin","html_url":"https://github.com/skosukhin","followers_url":"https://api.github.com/users/skosukhin/followers","following_url":"https://api.github.com/users/skosukhin/following{/other_user}","gists_url":"https://api.github.com/users/skosukhin/gists{/gist_id}","starred_url":"https://api.github.com/users/skosukhin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skosukhin/subscriptions","organizations_url":"https://api.github.com/users/skosukhin/orgs","repos_url":"https://api.github.com/users/skosukhin/repos","events_url":"https://api.github.com/users/skosukhin/events{/privacy}","received_events_url":"https://api.github.com/users/skosukhin/received_events","type":"User","site_admin":false},"created_at":"2024-03-13T16:51:26Z","updated_at":"2024-03-13T16:51:26Z","author_association":"NONE","body":"`__has_attribute(__symver__)` for the Nvidia compiler is `0` and it chokes with `__asm__(\".symver ...\")`:\r\n```console\r\n<inline asm>:1:85: error: unknown token in expression\r\n.symver lzma_get_progress_522,lzma_get_progress@XZ_5.2.2.symver lzma_get_progress_52,lzma_get_progress@@XZ_5.2\r\n```\r\nSomething like\r\n```patch\r\n--- a/src/liblzma/common/common.h\r\n+++ b/src/liblzma/common/common.h\r\n@@ -92,7 +92,7 @@\r\n \t\t\t\t\tLZMA_API(type) intname\r\n #\telse\r\n #\t\tdefine LZMA_SYMVER_API(extnamever, type, intname) \\\r\n-\t\t\t__asm__(\".symver \" #intname \",\" extnamever); \\\r\n+\t\t\t__asm__(\".symver \" #intname \",\" extnamever \";\"); \\\r\n \t\t\textern LZMA_API(type) intname\r\n #\tendif\r\n #endif\r\n```\r\nmakes it possible to build but\r\n```console\r\n$ readelf -W --dyn-syms $(find . -name '*.so') | tr -s ' ' | cut -d' ' -f9 | grep '^lzma_get_progress'\r\nlzma_get_progress@@XZ_5.2\r\n```\r\ninstead of\r\n```console\r\n$ readelf -W --dyn-syms $(find . -name '*.so') | tr -s ' ' | cut -d' ' -f9 | grep '^lzma_get_progress'\r\nlzma_get_progress@@XZ_5.2\r\nlzma_get_progress@XZ_5.2.2\r\n```\r\n\r\nThis could be checked by the configure script, I guess (one should be careful with using something non-portable like `readelf` in a configure script though).\r\n\r\nIn my opinion, `./configure --enable-symbol-versions=yes --disable-shared` should result in an error. However, `checking if library symbol versioning should be used... no (not building a shared library)` is informative enough.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1994969529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-13T16:51:28Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36519778742","type":"PushEvent","actor":{"id":29139614,"login":"renovate[bot]","display_login":"renovate","gravatar_id":"","url":"https://api.github.com/users/renovate[bot]","avatar_url":"https://avatars.githubusercontent.com/u/29139614?"},"repo":{"id":190592406,"name":"siderolabs/tools","url":"https://api.github.com/repos/siderolabs/tools"},"payload":{"repository_id":190592406,"push_id":17527660257,"size":4,"distinct_size":1,"ref":"refs/heads/renovate/major-releases","head":"60fd6c139e9259d8136e77bcfa9abc526b55e0d7","before":"7f08bd0518d0ec823d71b156cd3c5e0bfb94d70e","commits":[{"sha":"59fd5520aadd761943982ce7e52b005f8b60bc8b","author":{"email":"andrey.smirnov@siderolabs.com","name":"Andrey Smirnov"},"message":"feat: update releases\n\nRust removed, as it never worked properly and it's unused.\n\n```\n| Package | Update | Change |\n|---|---|---|\n| [PCRE2Project/pcre2](https://togithub.com/PCRE2Project/pcre2) | minor | `10.42` -> `10.43` |\n| git://git.kernel.org/pub/scm/devel/pahole/pahole.git | minor | `1.25` -> `1.26` |\n| git://git.kernel.org/pub/scm/git/git.git | minor | `2.43.0` -> `2.44.0` |\n| git://git.savannah.gnu.org/gettext.git | patch | `0.22.4` -> `0.22.5` |\n| git://sourceware.org/git/elfutils.git | minor | `0.190` -> `0.191` |\n| [grpc/grpc-go](https://togithub.com/grpc/grpc-go) | minor | `v1.61.0` -> `v1.62.1` |\n| [libexpat/libexpat](https://togithub.com/libexpat/libexpat) | patch | `2_6_0` -> `2_6_1` |\n| [libffi/libffi](https://togithub.com/libffi/libffi) | patch | `3.4.4` -> `3.4.6` |\n| [mesonbuild/meson](https://togithub.com/mesonbuild/meson) | patch | `1.3.1` -> `1.3.2` |\n| [protocolbuffers/protobuf](https://togithub.com/protocolbuffers/protobuf) | minor | `25.2` -> `25.3` |\n| [protocolbuffers/protobuf-go](https://togithub.com/protocolbuffers/protobuf-go) | minor | `v1.32.0` -> `v1.33.0` |\n| [tcltk/tcl](https://togithub.com/tcltk/tcl) | patch | `8-6-13` -> `8-6-14` |\n| [tukaani-project/xz](https://togithub.com/tukaani-project/xz) | minor | `v5.4.6` -> `v5.6.0` |\n| [abseil/abseil-cpp](https://togithub.com/abseil/abseil-cpp) | major | `20230802.1` -> `20240116.1` |\n| git://git.kernel.org/pub/scm/utils/kernel/kmod/kmod.git | major | `31` -> `32` |\n```\n\nSigned-off-by: Andrey Smirnov <andrey.smirnov@siderolabs.com>","distinct":false,"url":"https://api.github.com/repos/siderolabs/tools/commits/59fd5520aadd761943982ce7e52b005f8b60bc8b"},{"sha":"6c1f73d4f51fae028a3aa3c97884b80801826a40","author":{"email":"andrey.smirnov@siderolabs.com","name":"Andrey Smirnov"},"message":"fix: revert kmod to version 31\n\nLooks like new version segfaults when used.\n\nSigned-off-by: Andrey Smirnov <andrey.smirnov@siderolabs.com>","distinct":false,"url":"https://api.github.com/repos/siderolabs/tools/commits/6c1f73d4f51fae028a3aa3c97884b80801826a40"},{"sha":"14bf457275686e64dad8c596e869b4e78e7c9494","author":{"email":"andrey.smirnov@siderolabs.com","name":"Andrey Smirnov"},"message":"fix: use musl 1.2.4 in tools, revert kmod back to 32\n\nThis reverts commit 6c1f73d4f51fae028a3aa3c97884b80801826a40.\n\nSigned-off-by: Andrey Smirnov <andrey.smirnov@siderolabs.com>","distinct":false,"url":"https://api.github.com/repos/siderolabs/tools/commits/14bf457275686e64dad8c596e869b4e78e7c9494"},{"sha":"60fd6c139e9259d8136e77bcfa9abc526b55e0d7","author":{"email":"29139614+renovate[bot]@users.noreply.github.com","name":"renovate[bot]"},"message":"chore: update dependency protocolbuffers/protobuf to v26\n\nSigned-off-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>","distinct":true,"url":"https://api.github.com/repos/siderolabs/tools/commits/60fd6c139e9259d8136e77bcfa9abc526b55e0d7"}]},"public":true,"created_at":"2024-03-13T16:52:57Z","org":{"id":13804887,"login":"siderolabs","gravatar_id":"","url":"https://api.github.com/orgs/siderolabs","avatar_url":"https://avatars.githubusercontent.com/u/13804887?"}}
{"id":"36519934664","type":"WatchEvent","actor":{"id":25552173,"login":"iyadahmed","display_login":"iyadahmed","gravatar_id":"","url":"https://api.github.com/users/iyadahmed","avatar_url":"https://avatars.githubusercontent.com/u/25552173?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"started"},"public":true,"created_at":"2024-03-13T16:57:36Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
