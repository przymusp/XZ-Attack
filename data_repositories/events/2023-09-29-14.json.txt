{"id":"32203213063","type":"IssueCommentEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":75821432,"name":"llvm/llvm-project","url":"https://api.github.com/repos/llvm/llvm-project"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/llvm/llvm-project/issues/67779","repository_url":"https://api.github.com/repos/llvm/llvm-project","labels_url":"https://api.github.com/repos/llvm/llvm-project/issues/67779/labels{/name}","comments_url":"https://api.github.com/repos/llvm/llvm-project/issues/67779/comments","events_url":"https://api.github.com/repos/llvm/llvm-project/issues/67779/events","html_url":"https://github.com/llvm/llvm-project/issues/67779","id":1918954356,"node_id":"I_kwDOBITxeM5yYOt0","number":67779,"title":"lld looks for libraries given via relative paths at wrong place (relative to system paths)","user":{"login":"kalibera","id":1734520,"node_id":"MDQ6VXNlcjE3MzQ1MjA=","avatar_url":"https://avatars.githubusercontent.com/u/1734520?v=4","gravatar_id":"","url":"https://api.github.com/users/kalibera","html_url":"https://github.com/kalibera","followers_url":"https://api.github.com/users/kalibera/followers","following_url":"https://api.github.com/users/kalibera/following{/other_user}","gists_url":"https://api.github.com/users/kalibera/gists{/gist_id}","starred_url":"https://api.github.com/users/kalibera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kalibera/subscriptions","organizations_url":"https://api.github.com/users/kalibera/orgs","repos_url":"https://api.github.com/users/kalibera/repos","events_url":"https://api.github.com/users/kalibera/events{/privacy}","received_events_url":"https://api.github.com/users/kalibera/received_events","type":"User","site_admin":false},"labels":[{"id":1958966856,"node_id":"MDU6TGFiZWwxOTU4OTY2ODU2","url":"https://api.github.com/repos/llvm/llvm-project/labels/lld","name":"lld","color":"9496fc","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-09-29T09:47:27Z","updated_at":"2023-09-29T14:11:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When libraries are passed to the linker as relative paths (e.g. \"../../../../lib/libLLVMSupport.a\"), they are sometimes looked for relative to the system installation path (e.g. \"/something/usr/x86_64-pc-linux-gnu/lib/clang/17/lib/../../../../lib/libLLVMSupport.a\"). Instead, they should be looked up always relative to the current working directory.\r\n\r\nI've ran into this when cross-compiling a native LLVM compiler (to run on Windows/aarch64 and produce code for Windows/aarch64), using a cross-compiler running on Linux/x86_64. Linking failed due to errors like \"ld.lld: error: unknown file type: CommandLine.cpp.o\". The correct \"libLLVMSupport.a\" library has been available relatively to the current working directory in \"../../../../lib/libLLVMSupport.a\", but the linker instead used an incompatible version (for Linux/x86_64) which happened to be located in \"/something/usr/x86_64-pc-linux-gnu/lib/clang/17/lib/../../../../lib/libLLVMSupport.a\". When I deleted that incompatible library from that location, the linking passed as it should.\r\n\r\nI'm attaching a narrowed-down example based on this problem. On my system, with that \"incompatible\" library in place, \r\n\r\n```\r\ncd test/sub/sub/sub/sub/\r\n./test1\r\n```\r\n\r\ndoes\r\n\r\n```\r\n/home/tomas/toolchain/clang/toolchain_libs/mxe/usr/x86_64-pc-linux-gnu/bin/aarch64-w64-mingw32.static.posix-clang++ \\\r\nTableGen.cpp.obj \\\r\n../../../../lib/libLLVMSupport.a\r\n```\r\n\r\nand outputs\r\n\r\n```\r\nld.lld: error: unknown file type: CommandLine.cpp.o\r\nld.lld: error: unknown file type: ManagedStatic.cpp.o\r\nld.lld: error: unknown file type: PrettyStackTrace.cpp.o\r\nld.lld: error: unknown file type: raw_ostream.cpp.o\r\nld.lld: error: unknown file type: Signals.cpp.o\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation) \r\n```\r\n\r\nWith the \"incompatible\" library not in place, the output includes only complaints about undefined symbols, as it should, because I've narrowed down the example. The archive includes also outputs from strace, which make it clear that lld opens the \"incompatible\" library at the wrong place:\r\n\r\n```\r\nopenat(AT_FDCWD, \"/home/tomas/toolchain/clang/toolchain_libs/mxe/usr/x86_64-pc-linux-gnu/lib/clang/17/lib/../../../../lib/libLLVMSupport.a\", O_RDONLY|O_CLOEXEC) = 4\r\n```\r\n\r\n\r\nThe archive also includes the \"incompatible\" version of the library one could place in the corresponding place to reproduce the problem.\r\n\r\n[test.zip](https://github.com/llvm/llvm-project/files/12763224/test.zip)\r\n\r\n@mstorsjo\r\n@tru @rnk @zmodem ","reactions":{"url":"https://api.github.com/repos/llvm/llvm-project/issues/67779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/llvm/llvm-project/issues/67779/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/llvm/llvm-project/issues/comments/1740960310","html_url":"https://github.com/llvm/llvm-project/issues/67779#issuecomment-1740960310","issue_url":"https://api.github.com/repos/llvm/llvm-project/issues/67779","id":1740960310,"node_id":"IC_kwDOBITxeM5nxPI2","user":{"login":"JiaT75","id":78042786,"node_id":"MDQ6VXNlcjc4MDQyNzg2","avatar_url":"https://avatars.githubusercontent.com/u/78042786?v=4","gravatar_id":"","url":"https://api.github.com/users/JiaT75","html_url":"https://github.com/JiaT75","followers_url":"https://api.github.com/users/JiaT75/followers","following_url":"https://api.github.com/users/JiaT75/following{/other_user}","gists_url":"https://api.github.com/users/JiaT75/gists{/gist_id}","starred_url":"https://api.github.com/users/JiaT75/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JiaT75/subscriptions","organizations_url":"https://api.github.com/users/JiaT75/orgs","repos_url":"https://api.github.com/users/JiaT75/repos","events_url":"https://api.github.com/users/JiaT75/events{/privacy}","received_events_url":"https://api.github.com/users/JiaT75/received_events","type":"User","site_admin":false},"created_at":"2023-09-29T14:11:37Z","updated_at":"2023-09-29T14:11:37Z","author_association":"NONE","body":"Hello!\r\n\r\n> So the core of the issue, is that the toolchain directories, `<toolchain>/lib` and `<toolchain>/lib/clang/<ver>/lib`, are searched before the current directory. Generally, one could think that's reasonable, but:\r\n\r\nI also ran into this bug a few days ago and have been investigated it a bit. I was planning on submitting a bug report today but you beat me to it. You did a better job than I would have writing it up so its good that you did :)\r\nI believe this is serious problem since it can lead to unexpected results when linking. \r\n\r\nI see in the release notes for 17.0.1:\r\n\"By default lld-link will now search for libraries in the toolchain directories. Specifically it will search: <toolchain>/lib, <toolchain>/lib/clang/<version>/lib and <toolchain>/lib/clang/<version>/lib/windows.\"\r\n\r\nIn my case, my CI toolchain caught the bug in 17.0.1. I am building liblzma.a and disabling various features and testing that the build and tests are successful. The problem is that on MSYS2 CLANG64 environment liblzma.a is installed in the system libraries (/clang64/lib/). So when building the xz.exe command line tool, it links with the system liblzma.a instead of the one in the local directory.\r\n\r\nThis causes an obvious problem if trying to build and distribute a new version of a program that depends on a library built locally.\r\n\r\nSo it makes sense why this issue did not appear until 17.0.1. The expected behavior should be to check the local directory first, then the toolchain directories. I believe this problem is only with the COFF backend since I could not reproduce it on my Ubuntu machine after upgrading to the 17.0.1 release. It possible I set up my test wrong so don't believe me 100%.","reactions":{"url":"https://api.github.com/repos/llvm/llvm-project/issues/comments/1740960310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-29T14:11:38Z","org":{"id":17149993,"login":"llvm","gravatar_id":"","url":"https://api.github.com/orgs/llvm","avatar_url":"https://avatars.githubusercontent.com/u/17149993?"}}
{"id":"32203684943","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15231985970,"size":3,"distinct_size":3,"ref":"refs/heads/master","head":"01e34aa1171b04f8b28960b1cc6135a903e0c13d","before":"0570308ddd9c0e39e85597ebc0e31d4fc81d436f","commits":[{"sha":"506d03127a8565442b028ec991e1578124fd3025","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Specify LINKER_LANGUAGE for libgnu target to fix Ninja Generator.\n\nCMake is unable to guess the linker language for just a header file so\nit must be explicitly set.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/506d03127a8565442b028ec991e1578124fd3025"},{"sha":"30d0c35327f3639cb11224872aa58fdbf0b1526e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Rename xz and man page symlink custom targets.\n\nThe Ninja Generator for CMake cannot have a custom target and its\nBYPRODUCTS have the same name. This has prevented Ninja builds on\nUnix-like systems since the xz symlinks were introduced in\n80a1a8bb838842a2be343bd88ad1462c21c5e2c9.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/30d0c35327f3639cb11224872aa58fdbf0b1526e"},{"sha":"01e34aa1171b04f8b28960b1cc6135a903e0c13d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Disable CLANG64 MSYS2 environment until bug is resolved.\n\nlld 17.0.1 searches for libraries to link first in the toolchain\ndirectories before the local directory when building. The is a problem\nfor us because liblzma.a is installed in MSYS2 CLANG64 by default and\nxz.exe will thus use the installed library instead of the one being\nbuilt.\n\nThis causes tests to fail when they are expecting features to be\ndisabled. More importantly, it will compile xz.exe with an incorrect\nliblzma and could cause unexpected behavior by being unable to update\nliblzma code in static builds. The CLANG64 environment can be tested\nagain once this is fixed.\n\nLink to bug: https://github.com/llvm/llvm-project/issues/67779.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/01e34aa1171b04f8b28960b1cc6135a903e0c13d"}]},"public":true,"created_at":"2023-09-29T14:27:49Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32203786943","type":"DeleteEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"w32_update","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2023-09-29T14:31:29Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32204317403","type":"IssueCommentEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/65","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/65/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/65/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/65/events","html_url":"https://github.com/tukaani-project/xz/issues/65","id":1912220427,"node_id":"I_kwDOIQBEvs5x-isL","number":65,"title":"[Feature Request]: Reference actions by commit SHA","user":{"login":"gabibguti","id":27388955,"node_id":"MDQ6VXNlcjI3Mzg4OTU1","avatar_url":"https://avatars.githubusercontent.com/u/27388955?v=4","gravatar_id":"","url":"https://api.github.com/users/gabibguti","html_url":"https://github.com/gabibguti","followers_url":"https://api.github.com/users/gabibguti/followers","following_url":"https://api.github.com/users/gabibguti/following{/other_user}","gists_url":"https://api.github.com/users/gabibguti/gists{/gist_id}","starred_url":"https://api.github.com/users/gabibguti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabibguti/subscriptions","organizations_url":"https://api.github.com/users/gabibguti/orgs","repos_url":"https://api.github.com/users/gabibguti/repos","events_url":"https://api.github.com/users/gabibguti/events{/privacy}","received_events_url":"https://api.github.com/users/gabibguti/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-09-25T20:18:37Z","updated_at":"2023-09-29T14:50:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Describe the Feature\r\n\r\nReferencing actions by commit SHA in GitHub workflows guarantees you are using an immutable version. Actions referenced by tags and branches are more vulnerable to attacks, such as the tag being moved to a malicious commit or a malicious commit being pushed to the branch.\r\n\r\nAlthough there are pros and cons for each reference, GitHub understands [using commit SHAs is more reliable](https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions#using-shas), as does [Scorecard](https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies) security tool.\r\n\r\nIf you agree, this would change, for example, `actions/checkout@v3` to `actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744` followed by a comment `# v3.6.0` to keep the version readable. Additionally, we can take this moment to bump `actions/checkout` to `v4` and other actions.\r\n\r\n### Expected Complications\r\n\r\nNone.\r\n\r\n### Will I try to implement this new feature?\r\n\r\nYes\r\n\r\n##### Additional Context\r\n\r\nHi! I'm Gabriela and I work on behalf of Google and the OpenSSF suggesting supply-chain security changes :)","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/65/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/65/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1741017862","html_url":"https://github.com/tukaani-project/xz/issues/65#issuecomment-1741017862","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/65","id":1741017862,"node_id":"IC_kwDOIQBEvs5nxdMG","user":{"login":"JiaT75","id":78042786,"node_id":"MDQ6VXNlcjc4MDQyNzg2","avatar_url":"https://avatars.githubusercontent.com/u/78042786?v=4","gravatar_id":"","url":"https://api.github.com/users/JiaT75","html_url":"https://github.com/JiaT75","followers_url":"https://api.github.com/users/JiaT75/followers","following_url":"https://api.github.com/users/JiaT75/following{/other_user}","gists_url":"https://api.github.com/users/JiaT75/gists{/gist_id}","starred_url":"https://api.github.com/users/JiaT75/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JiaT75/subscriptions","organizations_url":"https://api.github.com/users/JiaT75/orgs","repos_url":"https://api.github.com/users/JiaT75/repos","events_url":"https://api.github.com/users/JiaT75/events{/privacy}","received_events_url":"https://api.github.com/users/JiaT75/received_events","type":"User","site_admin":false},"created_at":"2023-09-29T14:50:57Z","updated_at":"2023-09-29T14:50:57Z","author_association":"MEMBER","body":"The issues preventing Windows-CI from passing have been fixed on master. There were actually two problems, both related to Clang 17.0.1 release. If you are curious, [this](https://github.com/tukaani-project/xz/commit/0570308ddd9c0e39e85597ebc0e31d4fc81d436f) and [this](https://github.com/tukaani-project/xz/commit/01e34aa1171b04f8b28960b1cc6135a903e0c13d) are the commits. The related bugs for Clang are in the commit messages :)\r\n\r\nSo feel free to continue your work on a PR now that the issues are resolved. Thanks for bringing this to our attention!","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1741017862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-29T14:50:58Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
