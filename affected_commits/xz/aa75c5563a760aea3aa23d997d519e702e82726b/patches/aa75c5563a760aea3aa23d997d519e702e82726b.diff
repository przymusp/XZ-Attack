commit aa75c5563a760aea3aa23d997d519e702e82726b
Author: Jia Tan <jiat0218@gmail.com>
Date:   Fri Jun 10 21:35:18 2022 +0800

    Tests: Created tests for hardware functions.
    
    Created tests for all API functions exported in
    src/liblzma/api/lzma/hardware.h. The tests are fairly trivial
    but are helpful because they will inform users if their machines
    cannot support these functions. They also improve the code
    coverage metrics.

diff --git a/.gitignore b/.gitignore
index 11dbc591..ca5f024e 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,70 +1,71 @@
 *~
 *.bak
 *.bak[0-9]
 .gdb_history
 
 .deps
 .libs
 *.la
 *.lo
 *.o
 Makefile.in
 
 /ABOUT-NLS
 /autom4te.cache
 /Doxyfile
 /aclocal.m4
 /config.h
 /config.h.in
 /config.log
 /config.status
 /configure
 /libtool
 /stamp-h1
 
 build-aux/compile
 build-aux/config.guess
 build-aux/config.rpath
 build-aux/config.sub
 build-aux/depcomp
 build-aux/install-sh
 build-aux/ltmain.sh
 build-aux/missing
 build-aux/test-driver
 
 /src/liblzma/liblzma.pc
 /src/lzmainfo/lzmainfo
 /src/xz/xz
 /src/xzdec/lzmadec
 /src/xzdec/xzdec
 
 /src/scripts/xzdiff
 /src/scripts/xzgrep
 /src/scripts/xzless
 /src/scripts/xzmore
 
 /tests/compress_generated_abc
 /tests/compress_generated_random
 /tests/compress_generated_text
 /tests/create_compress_files
 /tests/test_bcj_exact_size
 /tests/test_block_header
 /tests/test_check
 /tests/test_filter_flags
+/tests/test_hardware
 /tests/test_index
 /tests/test_stream_flags
 /tests/xzgrep_test_1.xz
 /tests/xzgrep_test_2.xz
 /tests/xzgrep_test_output
 
 /lib/Makefile
 /tests/Makefile
 /Makefile
 /debug/Makefile
 /src/scripts/Makefile
 /src/xz/Makefile
 /src/Makefile
 /src/liblzma/Makefile
 /src/liblzma/api/Makefile
 /src/lzmainfo/Makefile
 /src/xzdec/Makefile
diff --git a/tests/Makefile.am b/tests/Makefile.am
index e049add4..ae63f464 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -1,68 +1,70 @@
 ##
 ## Author: Lasse Collin
 ##
 ## This file has been put into the public domain.
 ## You can do whatever you want with this file.
 ##
 
 EXTRA_DIST = \
 	files \
 	ossfuzz \
 	tuktest.h \
 	tests.h \
 	test_files.sh \
 	test_compress.sh \
 	test_compress_prepared_bcj_sparc \
 	test_compress_prepared_bcj_x86 \
 	test_compress_generated_abc \
 	test_compress_generated_random \
 	test_compress_generated_text \
 	test_scripts.sh \
 	bcj_test.c \
 	compress_prepared_bcj_sparc \
 	compress_prepared_bcj_x86 \
 	xzgrep_expected_output
 
 AM_CPPFLAGS = \
 	-I$(top_srcdir)/src/common \
 	-I$(top_srcdir)/src/liblzma/api \
 	-I$(top_builddir)/lib
 
 LDADD = $(top_builddir)/src/liblzma/liblzma.la
 
 if COND_GNULIB
 LDADD += $(top_builddir)/lib/libgnu.a
 endif
 
 LDADD += $(LTLIBINTL)
 
 check_PROGRAMS = \
 	create_compress_files \
 	test_check \
+	test_hardware \
 	test_stream_flags \
 	test_filter_flags \
 	test_block_header \
 	test_index \
 	test_bcj_exact_size
 
 TESTS = \
 	test_check \
+	test_hardware \
 	test_stream_flags \
 	test_filter_flags \
 	test_block_header \
 	test_index \
 	test_bcj_exact_size \
 	test_files.sh \
 	test_compress_prepared_bcj_sparc \
 	test_compress_prepared_bcj_x86 \
 	test_compress_generated_abc \
 	test_compress_generated_random \
 	test_compress_generated_text
 
 if COND_SCRIPTS
 TESTS += test_scripts.sh
 endif
 
 clean-local:
 	-rm -f compress_generated_* \
 		xzgrep_test_output xzgrep_test_1.xz xzgrep_test_2.xz
diff --git a/tests/test_hardware.c b/tests/test_hardware.c
new file mode 100644
index 00000000..34d07892
--- /dev/null
+++ b/tests/test_hardware.c
@@ -0,0 +1,45 @@
+///////////////////////////////////////////////////////////////////////////////
+//
+/// \file       test_hardware.c
+/// \brief      Tests src/liblzma/api/lzma/hardware.h API functions
+///
+/// Since the output values of these functions are hardware dependent, these
+/// tests are trivial. They are simply used to detect errors and machines
+/// that these function are not supported on.
+//
+//  Author:     Jia Tan
+//
+//  This file has been put into the public domain.
+//  You can do whatever you want with this file.
+//
+///////////////////////////////////////////////////////////////////////////////
+
+#include "tests.h"
+
+
+static void
+test_lzma_physmem(void)
+{
+	// NOTE: Use _skip instead of _fail because 0 can also mean that we
+	// don't know how to get this information on this operating system.
+	if (lzma_physmem() == 0)
+		assert_skip("Could not determine amount of physical memory");
+}
+
+
+static void
+test_lzma_cputhreads(void)
+{
+	if (lzma_cputhreads() == 0)
+		assert_skip("Could not determine cpu core count");
+}
+
+
+extern int
+main(int argc, char **argv)
+{
+	tuktest_start(argc, argv);
+	tuktest_run(test_lzma_physmem);
+	tuktest_run(test_lzma_cputhreads);
+	return tuktest_end();
+}