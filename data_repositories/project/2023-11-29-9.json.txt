{"id":"33712554557","type":"IssueCommentEvent","actor":{"id":26642847,"login":"mgood7123","display_login":"mgood7123","gravatar_id":"","url":"https://api.github.com/users/mgood7123","avatar_url":"https://avatars.githubusercontent.com/u/26642847?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/70","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/70/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/70/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/70/events","html_url":"https://github.com/tukaani-project/xz/issues/70","id":1993902320,"node_id":"I_kwDOIQBEvs522Ijw","number":70,"title":"[Bug]: MUSL CMAKE unsupported relocation type 37","user":{"login":"mgood7123","id":26642847,"node_id":"MDQ6VXNlcjI2NjQyODQ3","avatar_url":"https://avatars.githubusercontent.com/u/26642847?v=4","gravatar_id":"","url":"https://api.github.com/users/mgood7123","html_url":"https://github.com/mgood7123","followers_url":"https://api.github.com/users/mgood7123/followers","following_url":"https://api.github.com/users/mgood7123/following{/other_user}","gists_url":"https://api.github.com/users/mgood7123/gists{/gist_id}","starred_url":"https://api.github.com/users/mgood7123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgood7123/subscriptions","organizations_url":"https://api.github.com/users/mgood7123/orgs","repos_url":"https://api.github.com/users/mgood7123/repos","events_url":"https://api.github.com/users/mgood7123/events{/privacy}","received_events_url":"https://api.github.com/users/mgood7123/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2023-11-15T02:17:34Z","updated_at":"2023-11-29T09:42:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Describe the bug\r\n\r\n```\r\nlocalhost:~/llvm_18$ release_BUILD/LIBXZ/OUT/bin/lzma\r\nError relocating release_BUILD/LIBXZ/BUILD/lzma: unsupported relocation type 37\r\nError relocating release_BUILD/LIBXZ/BUILD/lzma: unsupported relocation type 37\r\n```\r\n\r\n```cmake\r\nif (NOT EXISTS ${CMAKE_BINARY_DIR}/LIBXZ)\r\n  execute_process(\r\n    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/xz ${CMAKE_BINARY_DIR}/LIBXZ\r\n  )\r\nendif()\r\n\r\nif (NOT EXISTS ${CMAKE_BINARY_DIR}/LIBXZ/OUT/lib/liblzma.a)\r\n  execute_process(\r\n    COMMAND\r\n      ${CMAKE_COMMAND}\r\n      -D CMAKE_BUILD_TYPE=Release\r\n      -D \"CMAKE_C_FLAGS=${CMAKE_C_FLAGS}\"\r\n      -D \"CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}\"\r\n      -D CMAKE_C_COMPILER=${CMAKE_C_COMPILER}\r\n      -D CMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}\r\n      -D CMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}/LIBXZ/OUT\r\n      -D BUILD_SHARED_LIBS=OFF\r\n      -B ${CMAKE_BINARY_DIR}/LIBXZ/BUILD\r\n    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/LIBXZ\r\n    COMMAND_ECHO STDOUT\r\n  )\r\n  execute_process(\r\n    COMMAND\r\n      ${CMAKE_COMMAND}\r\n      --build ${CMAKE_BINARY_DIR}/LIBXZ/BUILD\r\n    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/LIBXZ\r\n    COMMAND_ECHO STDOUT\r\n  )\r\n  execute_process(\r\n    COMMAND\r\n      ${CMAKE_COMMAND}\r\n      --install ${CMAKE_BINARY_DIR}/LIBXZ/BUILD\r\n    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/LIBXZ\r\n    COMMAND_ECHO STDOUT\r\n  )\r\nendif()\r\n```\r\n\r\n### Version\r\n\r\n5.5.0 git master https://github.com/tukaani-project/xz/commit/837ea40b1c9d4998cac4500b55171bf33e0c31a6\r\n\r\n### Operating System\r\n\r\nalpine linux\r\n\r\n### Relevant log output\r\n\r\n_No response_","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/70/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/70/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1831549696","html_url":"https://github.com/tukaani-project/xz/issues/70#issuecomment-1831549696","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/70","id":1831549696,"node_id":"IC_kwDOIQBEvs5tKzsA","user":{"login":"mgood7123","id":26642847,"node_id":"MDQ6VXNlcjI2NjQyODQ3","avatar_url":"https://avatars.githubusercontent.com/u/26642847?v=4","gravatar_id":"","url":"https://api.github.com/users/mgood7123","html_url":"https://github.com/mgood7123","followers_url":"https://api.github.com/users/mgood7123/followers","following_url":"https://api.github.com/users/mgood7123/following{/other_user}","gists_url":"https://api.github.com/users/mgood7123/gists{/gist_id}","starred_url":"https://api.github.com/users/mgood7123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgood7123/subscriptions","organizations_url":"https://api.github.com/users/mgood7123/orgs","repos_url":"https://api.github.com/users/mgood7123/repos","events_url":"https://api.github.com/users/mgood7123/events{/privacy}","received_events_url":"https://api.github.com/users/mgood7123/received_events","type":"User","site_admin":false},"created_at":"2023-11-29T09:42:54Z","updated_at":"2023-11-29T09:42:54Z","author_association":"NONE","body":"> > Maybe we could just add a define for musl\n> > \n> > make -D MUSL=1\n> \n> The default build options need to create a working build on all of our supported platforms. Right now people can just disable ifunc for a working musl build as you discovered with `-DALLOW_ATTR_IFUNC=OFF`. That is only a temporary workaround since we want to make our build systems as easy to use for people as possible.\n> \n> I have been working a [branch](https://github.com/tukaani-project/xz/tree/ifunc_detect_fix) to address this. The idea is to change the ifunc option for our CMake and Autotools build from ON/OFF or enable/disable to auto/ON/OFF. 'auto' will try to enforce using ifunc with glibc or BSD platforms only. ON will always try to use ifunc and OFF will obviously disable ifunc completely. Both auto and ON will still test the compiler if it supports `__attribute__((__ifunc__()))`.\n> \n> If you can test the new branch on Alpine that would be very helpful. I tested with `musl-gcc` wrapper and things seemed to work. We haven't decided 100% if this is the approach we want to take but it seems promising so far.\n> \n> Thanks for all of your help so far!\n\nThat works ^^","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1831549696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-29T09:42:55Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
