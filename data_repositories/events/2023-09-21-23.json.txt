{"id":"32017552307","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15136068578,"size":1,"distinct_size":1,"ref":"refs/heads/xz_for_msvc","head":"3ebff0adfe1080e17c983bc943177033a5267743","before":"a07f5febfd64ea39421c79a7b316e5090afdac02","commits":[{"sha":"3ebff0adfe1080e17c983bc943177033a5267743","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Windows: Don't decompress to special files like \"con\" or \"nul\".\n\nBefore this commit, the following writes \"foo\" to the\nconsole and deletes the input file:\n\n    echo foo | xz > con_xz\n    xz --suffix=_xz --decompress con_xz\n\nIt cannot happen without --suffix because names like con.xz\nare also special and so attempting to decompress con.xz\n(or compress con to con.xz) will already fail when opening\nthe input file.\n\nNow xz checks if the destination is a special file before\ncontinuing. DOS/DJGPP version had a check for this but\nWindows (and OS/2) didn't.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3ebff0adfe1080e17c983bc943177033a5267743"}]},"public":true,"created_at":"2023-09-21T23:45:46Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32017698000","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/events","html_url":"https://github.com/tukaani-project/xz/pull/60","id":1867809603,"node_id":"PR_kwDOIQBEvs5Y1e5_","number":60,"title":"Make xz buildable with MSVC and add 64-bit filesize support","user":{"login":"kiyolee","id":1015967,"node_id":"MDQ6VXNlcjEwMTU5Njc=","avatar_url":"https://avatars.githubusercontent.com/u/1015967?v=4","gravatar_id":"","url":"https://api.github.com/users/kiyolee","html_url":"https://github.com/kiyolee","followers_url":"https://api.github.com/users/kiyolee/followers","following_url":"https://api.github.com/users/kiyolee/following{/other_user}","gists_url":"https://api.github.com/users/kiyolee/gists{/gist_id}","starred_url":"https://api.github.com/users/kiyolee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiyolee/subscriptions","organizations_url":"https://api.github.com/users/kiyolee/orgs","repos_url":"https://api.github.com/users/kiyolee/repos","events_url":"https://api.github.com/users/kiyolee/events{/privacy}","received_events_url":"https://api.github.com/users/kiyolee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2023-08-26T00:21:40Z","updated_at":"2023-09-21T23:59:23Z","closed_at":"2023-09-06T09:10:46Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/60","html_url":"https://github.com/tukaani-project/xz/pull/60","diff_url":"https://github.com/tukaani-project/xz/pull/60.diff","patch_url":"https://github.com/tukaani-project/xz/pull/60.patch","merged_at":null},"body":"To support files larger than 4 GiB on Windows, all calls of stat() and lseek() have to be redirected to 64-bit filesize capable calls.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\nNote: Compile warnings are inevitable for MSVC when some variables can be either 64-bit (target x64) or 32-bit (target Win32) at compile time. Those warnings need extensive changes to clean up.\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [X] Other (please describe): \r\n\r\nMake xz buildable with MSVC.\r\nAdd 64-bit filesize support on Windows.\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\nxz does not build with MSVC.\r\nxz would refuse to handle files larger than 4 GiB.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\nxz can be built with MSVC.\r\nxz can handle files larger than 4 GiB on Windows.\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n<!-- Any other information that is important to this PR. -->\r\n\r\nI have added extensive MSVC build support in my own repo https://github.com/kiyolee/xz-win-build.\r\nIn addition to building xz, I have added support to build all tests as well.\r\nThis PR only covers code changes that were done while setting up my own repo.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1730509933","html_url":"https://github.com/tukaani-project/xz/pull/60#issuecomment-1730509933","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/60","id":1730509933,"node_id":"IC_kwDOIQBEvs5nJXxt","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-21T23:59:22Z","updated_at":"2023-09-21T23:59:22Z","author_association":"MEMBER","body":"Thanks! Now I realized that I had misidentified the problem. `S_ISREG` is enough but it has to be used with `_fstat64`. With `_stat64`, `con` is a regular file. So the method used for DJGPP is at the wrong location for Windows.\r\n\r\nI pushed a commit to xz_for_msvc which should fix it. I tested it with MinGW-w64.\r\n\r\nThere is another special case in the DJGPP-specific code but I think it's not needed on Windows. It's possible that the output filename is the same as the input filename. On DOS with only 8.3 names it can happen if an overlong name is given on the command line. But it can happen on modern Windows too if 8.3 names are enabled. For example:\r\n\r\n```\r\necho foo | xz > foobar~1zoo\r\nxz --suffix=zoo --decompress --force foobar~1zoo\r\n```\r\n\r\nIt should fail because it cannot remove `foobar~1` because the file is already open. It's the same file as `foobar~1zoo` due to 8.3 names.\r\n","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1730509933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-21T23:59:23Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
