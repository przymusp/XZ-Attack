{"id":"22630939496","type":"PushEvent","actor":{"id":219043,"login":"jcfr","display_login":"jcfr","gravatar_id":"","url":"https://api.github.com/users/jcfr","avatar_url":"https://avatars.githubusercontent.com/u/219043?"},"repo":{"id":246968873,"name":"jcfr/Slicer","url":"https://api.github.com/repos/jcfr/Slicer"},"payload":{"push_id":10310361403,"size":57,"distinct_size":57,"ref":"refs/heads/maintenance-5.0-backports","head":"728befe882adefc39f77c2e8b915b931f2e4bc22","before":"9c7dc54f1420cdefe6b25c541d04c67487d2d1c1","commits":[{"sha":"f06c4d562806c686c7bcc4ac58114531c081ab19","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Properly specify mrml scene data associated with qMRMLUtf8Test1\n\nThis commit ensures the dataset associated with \"cube-utf8.mrml\" scene\nis effectively downloaded.","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/f06c4d562806c686c7bcc4ac58114531c081ab19"},{"sha":"fe939ffcdb040f0458ab7500961d2223a07a410d","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"COMP: Backport CTK, ITK and VTK updates\n\nCherry picked from:\n* 3694f90688 - COMP: Fix ITK build error on macOS\n* dcd132b264 - COMP: Update VTK backporting fix for vtkSphericalPointIterator gcc build error\n* 650ed1467a - BUG: Update to latest CTK version\n\nCOMP: Fix ITK build error on macOS\n\nIncludes ITK fix:\n\nRevision: 46a71c744d4856a5166df227e13c76e8c3ef55cc\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2022-04-09 9:51:40 PM\nMessage:\n[Backport PR-3369] COMP: Fix Slicer vtkITK build on macOS\n\nThis commit addresses a Slicer macOS build error reported on Discourse\n(see https://discourse.slicer.org/t/slicer-build-on-macos-monterey/21940)\nand on GitHub (see comments on issue #5944).\n\nThe _POSIX_SOURCE preprocessor identifier is defined in several places\nincluding by Python and several ITK ThirdParty modules. It looks like\nthis definition is causing unintended side effects when building vtkITK.\n\nWhen itkMacro.h is #included in vtkITK, _POSIX_SOURCE causes conditional\ninclusion of code using __assert_fail and __ASSERT_FUNCTION, which are\ndefined by GLIBC. Compiling under Clang on macOS this results in a compile error.\n\nThis commit fixes the error by checking for the __GLIBC__ preprocessor\nidentifier instead of __POSIX_SOURCE.\n----\nModified: Modules/Core/Common/include/itkMacro.h\n\nCOMP: Update VTK backporting fix for vtkSphericalPointIterator gcc build error\n\nList of changes:\n\n$ git shortlog 684e8a602..efbbf9c02e --no-merges\nBen Boeckel (1):\n      [Backport] vtkSphericalPointIterator: include `<memory>` for `std::unique_ptr`\n\nRational:\n\n    Some C++ Standard Library headers have been changed to no longer include other headers that were being used internally by the library. As such, C++ programs that used standard library components without including the right headers will no longer compile.\n    The following headers are used less widely in libstdc++ and may need to be included explicitly when compiled with GCC 11:\n\n        (for std::numeric_limits)\n        (for std::unique_ptr, std::shared_ptr etc.)\n        (for std::pair, std::tuple_size, std::index_sequence etc.)\n        (for members of namespace std::this_thread.)\n\nSource: https://gcc.gnu.org/gcc-11/porting_to.html\n\nCo-authored-by: Hu Butui <hot123tea123@gmail.com>\nCo-authored-by: Rafael Palomar <rafael.palomar@ous-research.no>\n\nBUG: Update to latest CTK version\n\nIncludes several fixes and improvements:\n\nRevision: ec816cbb77986f6ee28c41a495e82238dee0e2d3\nAuthor: Mikhail Polkovnikov <pmkclnl@yandex.ru>\nDate: 2022-05-15 5:15:45 AM\nMessage:\nENH: Set a continuous CTF for the ctkVTKScalarsToColorsView as an editable function or as a read only one\n\nRevision: c97620f43dec6b1eac894d7d9c491d2af236dc22\nAuthor: Steve Pieper <pieper@isomics.com>\nDate: 2022-05-06 3:13:39 PM\nMessage:\nMerge pull request #1031 from lassoan/fix-clipping-during-rotation\n\nBUG: Fix clipped view content when rotating view\n\nRevision: 7580e14a76448da5ca83c3a7648e510563873f9a\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-05 7:00:54 PM\nMessage:\nBUG: Fix clipped view content when rotating view\n\nCamera clipping range must be reset after camera motion.\n\nFixes issue described here: https://discourse.slicer.org/t/extremities-of-a-long-volume-vanishing-when-rotating/23234/10?u=lassoan\n\nRevision: a9687151baf82e16801cc565b9a2afe92d8caba3\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-05 1:29:15 AM\nMessage:\nSTYLE: Explicitly associate \"https\" protocol with GitHub external projects\n\nConsidering that since March 2022, git protocol is not supported any more\nby GitHub, this commit updates external projects to explicitly use \"https\"\nprotocol.\n\nSee https://github.blog/2021-09-01-improving-git-protocol-security-github/\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\n\nRevision: a692acba8ce931b3446b0bbc0a5e1df9f0eaa9ef\nAuthor: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nDate: 2022-05-04 5:12:52 PM\nMessage:\nENH: Update ExternalProjectDependency system based on commontk/Artichoke@ea920eb\n\nList of changes:\n\n$ git shortlog 0cc99d3..ea920eb --no-merges\nAndras Lasso (1):\n      Add support for EXTERNAL_PROJECT_ADDITIONAL_DIRS\n\nJean-Christophe Fillion-Robin (13):\n      ExternalProjectDependency: Remove debug statement inadvertently integrated\n      Add support for \"ExternalProject_Add_Dependencies\"\n      ExternalProject_SetIfNotDefined: Add test checking interaction with cache variable\n      ExternalProject_SetIfNotDefined: If any, display corresponding cache value\n      ExternalProject_SetIfNotDefined: Update docstring\n      ExternalProject_Include_Dependencies: Check if superbuild variable is improperly set\n      ExternalProjectDependency: Fix spellcheck\n      ExternalProjectDependency: Fix variable type of automatically propagated options\n      circleci: Use dockbuild/centos7-devtoolset7-gcc7 instead of dockbuild/centos6\n      ExternalProjectDependency: Ensure ``User Package Registry`` look up using ``find_*`` commands is disabled\n      ExternalProjectDependency: Fix CMake version check for disabling ``User Package Registry``\n      doc: Update website links to https versions\n      ExternalProjectDependency: Force git protocol to https\n\nRevision: dc1bbb94703d247bb9c2af1cfe75dad4c083215c\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 2:05:12 PM\nMessage:\nBUG: Fix CTKData git url\n\nGitHub does not support anymore git protocol for anonymous access, but must use https instead.\n\nRevision: 27d9dd79ecbd97c2c97d3b898f2fb6a8ec20b4c7\nAuthor: Andras Lasso <lasso@queensu.ca>\nDate: 2022-05-04 1:30:34 PM\nMessage:\nENH: Improve ctkLanguageComboBox\n\nMake ctkLanguageComboBox available in Qt Designer.\nAdd `refreshFromDirectories()` slot to update language list (e.g., when language files are added/removed).\nRemove unnecessary `onLanguageChanged()` signals emitted while the language list is being updated.\n\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\n\nRevision: b261e3f88867369dff8196c4f00c917707b4b782\nAuthor: Mark Asselin <mark.asselin95@gmail.com>\nDate: 2021-12-29 9:35:34 PM\nMessage:\nBUG: Fix build with Slicer_USE_PYTHONQT set to OFF","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/fe939ffcdb040f0458ab7500961d2223a07a410d"},{"sha":"7ad5afa82d0aa061a1878467e8e0aca2bfbe8ee1","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"DOC: Backport Documentation fixes\n\nCherry picked from:\n* 9f108c3ffe - DOC: NSIS broken link\n* 71d053f1fc - DOC: Add debugging by following the forked process (#6364)\n* 73ed5d4e50 - DOC: Describe extension versioning requirement in extensions.md\n* 0a9adf0af5 - DOC: Update Linux building instructions\n* 887143f2c5 - DOC: Add tip for use of ccache\n* ec4e6ff797 - DOC: Add tips subtitles\n* 69c0fcfc71 - DOC: Update windows.md\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>\nCo-authored-by: Dwij Mistry <49182142+dwijmistry11@users.noreply.github.com>\nCo-authored-by: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nCo-authored-by: Fernando Bordignon <fernando@ltrace.com.br>\nCo-authored-by: Rafael Palomar <rafael.palomar@ous-research.no>","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/7ad5afa82d0aa061a1878467e8e0aca2bfbe8ee1"},{"sha":"a71f20c3a55e16864c787ea4b2d267069e390ffe","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"ENH: Backport WebServer module\n\nCherry picked from:\n* bdc1ee0389 - ENH: add WebServer module (#5999)\n* d00bc5b272 - STYLE: Fix python lint issues in WebServer module\n* fdcdbe5573 - DOC: Improve Webserver module documentation\n* fba5df464f - DOC: Improve Webserver module documentation (part 2)\n* 9c7f20557e - DOC: extra details and warnings about WebServer (#6370)\n* c9a95b1bda - ENH: Add DICOMweb example to webserver examples page\n* 0f29c7c9a7 - BUG: Fix WebServer failing to load when Slicer built without DICOM support (#6407)","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/a71f20c3a55e16864c787ea4b2d267069e390ffe"},{"sha":"56498211d5f7922c2998e3e481e51bc98fb5d4db","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Backport slicer.util.(delayDisplay|messageBox) updates\n\nCherry picked from:\n* c4ac067f0d - ENH: Improve slicer.util.delayDisplay to show dialog relative to mainwindow\n* a28a2c2d59 - BUG: Update slicer.util.delayDisplay to remove from taskbar thumbnail preview\n* 7ddbe774f3 - ENH: Update slicer.util.messageBox to display a delayed pop in testing mode","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/56498211d5f7922c2998e3e481e51bc98fb5d4db"},{"sha":"e73687f46dc9adde4e21aa9a1d8039c40018ff8a","author":{"email":"pieper@isomics.com","name":"Steve Pieper"},"message":"COMP: Fix macOS build error updating libarchive from 3.5.2 to 3.6.1\n\nThis commit updates libarchive to fix a macOS build error specific to\ndebug builds.\n\nFor reference, commit libarchive/libarchive@a4c3c90bb (Remove the unused variable detected_bytes)\nfixes the following build error:\n\n```\n/opt/s/LibArchive/libarchive/archive_read_support_format_mtree.c:695:10: error: variable 'detected_bytes' set but not used [-Werror,-Wunused-but-set-variable]\n        ssize_t detected_bytes = 0, len, nl;\n                ^\n1 error generated.\n```\n\nList of changes:\n\n$ git shortlog 1b2c437b9..6c3301111 --no-merges\nAdamKorcz (1):\n      Add CIFuzz\n\nAlex Richardson (2):\n      Reduce test_write_format_7zip_large_lzma1 buffer size\n      Avoid millions of rand() calls() when running tests\n\nAlex Xu (1):\n      libarchive.3: update archive format list\n\nAlexey Pelykh (1):\n      Include android_lf.h only for libarchive sources\n\nBrad King (1):\n      windows: include archive_platform.h first in blake2s sources\n\nCharly C (1):\n      fix the archive_write_disk.3 man page\n\nChristian Hesse (1):\n      unescape when extracting link\n\nDustin Howett (3):\n      windows: make sure we use the right calling convention for libc\n      fix: include archive_platform in ...cpio to ensure calling convention\n      Remove dependency on user32\n\nEmil Velikov (20):\n      mtree reader: return early, remove fallthrough chain\n      editorconfig: add simple top-level file\n      archive: constify the archive::vtable dispatch\n      reader: remove unused read_filter_bidder::options\n      reader: remove archive_read_filter_bidder_vtable::free stubs\n      reader: remove the return type of archive_read_filter_bidder_vtable::free\n      reader: introduce archive_read_filter_bidder::vtable\n      reader: transform get_bidder into register_bidder\n      archive: remove ::compression_{code,name}\n      reader: reuse client_{open,close}_proxy more\n      reader: track read_filter \"can_seek\" with a flag\n      reader: track read_filter \"can_skip\" with a flag\n      reader: remove unused archive_read_filter callbacks\n      reader: introduce struct archive_read_filter_vtable\n      cmake: fold gcc/clang sections\n      cmake: drop -rdynamic aka CMP0065 NEW\n      tar: demote -xa from error to a warning\n      cmake: enable -fdata/function-sections and --gc-sections\n      autotools: enable -fdata/function-sections and --gc-sections\n      archive_digest: check return value of EVP_DigestInit()\n\nGraham Percival (1):\n      Fix Y2038 check\n\nGrzegorz Antoniak (3):\n      RAR5 reader: fixed out of bounds read in some files\n      RAR5 reader: fix invalid memory access in some files\n      RAR5 reader: add more checks for invalid extraction parameters\n\nIohannRabeson (1):\n      Make all the implicit cast explicit.\n\nJFranklin13 (1):\n      Add support for rar5 sfx files\n\nJairo (3):\n      Windows support\n      Update untar.c\n      Update untar.c\n\nJoerg Sonnenberger (1):\n      Support ARCHIVE_EXTRACT_SECURE_NODOTDOT on Windows\n\nJonas Witschel (4):\n      Add ARCHIVE_READDISK_NO_SPARSE to suppress reading sparse file info\n      tar: expose ARCHIVE_READDISK_NO_SPARSE as --no-read-sparse\n      test_sparse_basic: do not assume that holes can be read in one go\n      test_sparse_basic: test ARCHIVE_READDISK_NO_SPARSE\n\nJung-uk Kim (2):\n      Enable LZMA support for FreeBSD\n      bsdtar(1): Document threads options for zstd and xz\n\nKen Matsui (1):\n      Remove the unused variable `detected_bytes`\n\nMartin Matuska (25):\n      Libarchive 3.5.3dev\n      CI: provide a more complete Ubuntu package list\n      Fix following symlinks when processing the fixup list\n      archive_write_set_format_cpio_binary: fix compilation on OpenBSD\n      archive_write_disk_posix: fix writing fflags broken in 8a1bd5c\n      CI: fix ubuntu distcheck\n      dist: add missing zipx-zstd test files to Makefile.am\n      zip: fix possible endless loop if reading a truncated zstd archive\n      tar: fix format name typo in creation_set.c\n      untar.c: style fixes\n      tests: fix style in test_utils/test_main.c\n      CI: add dist-artifact\n      Libarchive 3.6.0dev\n      Release 3.6.0\n      Libarchive 3.6.1dev\n      tests: reduce sample size for RAR filter test\n      RAR reader: fix heap-use-after-free in RAR (v4) filter code\n      ci (GitHub Actions): build on Windows 2022 and use Visual Studio 17 2022\n      7zip reader: style fixes after 3962d596d\n      RAR reader: fix null-dereference in RAR (v4) filter code\n      build: fix detection of readdir_r() and dirfd() in configure.ac\n      ISO reader: fix possible heap buffer overflow in read_children()\n      RAR reader: fix heap-use-after-free in run_filters()\n      Release 3.6.1\n      CI: Update dependencies for Windows build\n\nMateusz Piotrowski (1):\n      Fix use of At mdoc(7) macro\n\nMichael Osipov (1):\n      Add macro for dirfd() on HP-UX because no full POSIX.1-2008 coverage exists\n\nMichał Górny (2):\n      Fix expected error messages in test_read_format_zip_winzip_aes*\n      Handle missing zlib in test_read_format_zip_7z_deflate\n\nPeter Pentchev (1):\n      Raise the lzip max dictionary size to 512MB.\n\nPetr Malat (1):\n      Support libzstd compiled with compressor disabled\n\nRussell Greene (2):\n      zstd filter writer: add threads option\n      fix --threads commandline\n\nRyan Libby (2):\n      tar: respect --ignore-zeros in c r & u modes when reading archives\n      tar/test/test_option_ignore_zeros.c: test tar --ignore-zeros\n\nSamanta Navarro (3):\n      Fix size_t cast in read_mac_metadata_blob\n      Ignore size of directories with regular type\n      Added test case for ustar directory handling\n\nTheo Buehler (1):\n      Remove OpenSSL compat code that misuses the API\n\nTim Kientzle (2):\n      Reorganize test code a bit\n      ZIP reader: fix possible out-of-bounds read in zipx_lzma_alone_init()\n\nTodd Richmond (1):\n      zip size entry of -1 should be treated the same as 0\n\nWalter Lozano (2):\n      Add path fallback in tar\n      Fix check for tape device\n\nWei-Cheng Pan (2):\n      support rar filters\n      add test\n\nYounes El-karama (1):\n      Fix typo in libarchive/archive_read_support_filter_lzop.c\n\nZdenek Zambersky (1):\n      Fixed size filed in pax header\n\ncielavenir (2):\n      Fix 7z PPMD reading beyond boundary\n      code review\n\njiat75 (15):\n      added missing checks for canLzip, canLzma, and canXz\n      Added all exported but undocumented functions to man pages\n      Removed unused function.\n      Added bin folder to .gitignore\n      Only use deflate when size is not set if the user did not specify a compression algorithm\n      Added test for writing an zip file without entry size and no compression\n      Added assertions for folder\n      Added new test to cmake lists\n      Added copyright to new test file.\n      Adding test to Makefile.am\n      Reusing code from zip size known and adjusting comments\n      Using the new .editorconfig to fix formatting on size unset store test\n      Fixing typo in archive_read_disk man page\n      Cleaned up archive_read_disk_descend functions.\n      Added error message when archive extraction fails\n\njo620kix (2):\n      ZIP reader: added support for Zstd decompression\n      Add offset variable to zip_read_data_zipx_zstd\n\nlinear cannon (4):\n      define printf format specifiers if not present\n      import m4_ax_compile_check_sizeof.m4 from autoconf archive\n      update CMake sizeof definitions to match autotools\n      update BLAKE2_PACKED macro with a non-GCCism fallback","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/e73687f46dc9adde4e21aa9a1d8039c40018ff8a"},{"sha":"9115a627c980e7928a466bcf4ba8625e92d97522","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Make model slice intersection thickness control intersection point size as well\n\nModels -> Display -> Slice display -> Line width now has effect when the model consists of a line.\nPreviously, when a line model intersected the slice the intersection point was always just 1 pixel.\n\nFixes issue described at https://discourse.slicer.org/t/model-linewidth/23330","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/9115a627c980e7928a466bcf4ba8625e92d97522"},{"sha":"d5e14739e6dab97ebec0f7f4185be58c4d3b9c25","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Increase maximum number of colors loaded from colortable files (#6358)\n\nFile loading performance is fixed by implementing bulk setting of color values.\r\n\r\nIncreased maximum number of accepted entries to 1 million as requested in #6354.\r\nLoading of a file with 1 million as the maximum ID takes only a few seconds.\r\nColors module performance is not great with such huge tables. It takes about 20 seconds\r\nto display a color table with 1 million entries.\r\n\r\nfixes #6354","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/d5e14739e6dab97ebec0f7f4185be58c4d3b9c25"},{"sha":"3892b30ecef37c73ebffa8ce517927b32ff36482","author":{"email":"fernando@ltrace.com.br","name":"Fernando Bordignon"},"message":"COMP: Fix python launcher environment in custom app\n\nThis commit ensures python launcher associated custom application\ncan successfully load the application environment.\n\nIt follows up on 94080fe7a (BUG: Ensure PythonSlicer loads extension\nsettings) and updates PythonLauncherSettings.ini ensuring there is no\nhardcoded reference to the additional settings.\n\nInstead of using SlicerLauncherSettings.ini, the filename is set\nbased on the custom application name.","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/3892b30ecef37c73ebffa8ce517927b32ff36482"},{"sha":"6d1fa6558ea110adc653a5e86b944d771dceccfb","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"COMP: Do not require building extension from git repository\n\nDevelopers often complained that their extension build failed for some\nunknown reason and frequently the issue was that they did not store the\nsource code in a git repository.\n\nIt is good to encourage developers to use best practices, such as version\ncontrol, but making the build fail if they build from a non-version-controlled\nrepository was unnecessarily strong measure.\n\nThis commit changes the behavior so that if an extension is built from a\nnon-git folder then the build succeeds, just a warning is displayed during\nproject configuration step and `NA` is used as the extension's WC revision.\n\nCo-authored-by: Andras Lasso <lasso@queensu.ca>","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/6d1fa6558ea110adc653a5e86b944d771dceccfb"},{"sha":"b630a3f7c9cdb9b1eb3f45c6ff4a1bbb318a382f","author":{"email":"hot123tea123@gmail.com","name":"Butui Hu"},"message":"COMP: Fix gcc 11 build error\n\nAdd header `<memory>` for `std::unique_ptr`.\n\nThis commit is a follow up of dcd132b26 (COMP: Update VTK\nbackporting fix for vtkSphericalPointIterator gcc build error).\n\nRational:\n\n    Some C++ Standard Library headers have been changed to no longer include other headers that were being used internally by the library. As such, C++ programs that used standard library components without including the right headers will no longer compile.\n    The following headers are used less widely in libstdc++ and may need to be included explicitly when compiled with GCC 11:\n\n        (for std::numeric_limits)\n        (for std::unique_ptr, std::shared_ptr etc.)\n        (for std::pair, std::tuple_size, std::index_sequence etc.)\n        (for members of namespace std::this_thread.)\n\nSource: https://gcc.gnu.org/gcc-11/porting_to.html","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/b630a3f7c9cdb9b1eb3f45c6ff4a1bbb318a382f"},{"sha":"2621d69b1da60f6264f9f0beb88da349078cedf5","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Fix vtkMRMLColorLogicTest1\n\nFix regression caused recent change in how color names are initialized in vtkMRMLColorTableNode.\n\nFixes #6382","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/2621d69b1da60f6264f9f0beb88da349078cedf5"},{"sha":"739f2bef47751b5a50d19569653bf3e25ebbdc28","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"BUG: Ensure vtkMRMLCameraNode layout name can be updated\n\nThis commit is a follow up of e78f557cd (ENH: Simplify view widgets\ninitialization from view nodes) that originally introduced the\nvtkMRMLCameraNode::GetLayoutName/SetLayoutName.\n\nIt makes sure that the layout name associated with a given camera node\ncan be set to a different value after it had already been set once.","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/739f2bef47751b5a50d19569653bf3e25ebbdc28"},{"sha":"5bb7fea1129dd2b5b44b71f0e0843f47c665eeea","author":{"email":"pmkclnl@yandex.ru","name":"Mikhail Polkovnikov"},"message":"ENH: Make built-in procedural color nodes (such as PET-DICOM) read only\n\nBuilt-in procedural color nodes are read-only, but in the Colors module GUI the colormap was editable by clicking on the colormap and adding/moving control points.\nThis commit removes the control points, so the read-only nodes are not editable anymore.\n\nsee #6111","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/5bb7fea1129dd2b5b44b71f0e0843f47c665eeea"},{"sha":"275eb22db0f339a429473a93ad9579dea005d715","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"BUG: Make qSlicerUtilsTest1 more robust\n\nWhen the working copy is reconfigured and a full Slicer build is not performed then qSlicerUtilsTest1 failed with:\n\nLine 408 - Problem with isPluginBuiltIn(). Expected 0 for:\n\tpath: /Applications/Slicer.app/Contents/Extensions-30961/plugin.txt\n\tapplicationHomeDir: /Applications/Slicer.app\n\nIt was because Slicer revision in vtkSlicerConfigure.h and vtkSlicerVersionConfigure.h were different.\n\nMade the test more robust by taking the version information from Slicer_REVISION, which is the same as the tested\nvtkSlicerApplicationLogic::IsPluginBuiltIn method uses.","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/275eb22db0f339a429473a93ad9579dea005d715"},{"sha":"a7350d0b91d29c11bc34c8f229ea6d56d1a7b1ee","author":{"email":"gabrielmullerw@gmail.com","name":"Gabriel Müller"},"message":"BUG: Escape HTML chars in CLI output (#6391)\n\nCo-authored-by: Gabriel Muller <gabriel.muller@ltrace.com.br>","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/a7350d0b91d29c11bc34c8f229ea6d56d1a7b1ee"},{"sha":"5e6771f37764bf2fd197e773a8994dc9d138ebee","author":{"email":"jchris.fillionr@kitware.com","name":"Jean-Christophe Fillion-Robin"},"message":"ENH: Backport TBB update from 2019_U9 to 2021.5.0\n\nCherry picked from:\n* 4d97ce70ef - COMP: Fix slicerStripInstalledLibrary to effectively support list of libraries\n* 3ea8ba4b4e - COMP: Update TBB from 2019_U9 to 2021.5.0\n* 0d5fe85d72 - COMP: Improve TBB CMake configuration check on macOS\n* 177f3b3242 - COMP: Update slicerInstallLibrary to ensure tbb debug libs are not packaged\n* cf83447f69 - COMP: Update SlicerConfig to include Slicer_USE_TBB\n\nCOMP: Fix slicerStripInstalledLibrary to effectively support list of libraries\n\nThis is a follow-up of 52f2d6c04 (ENH: Reduce linux package size stripping\nregular symbols) where the CMake function slicerStripInstalledLibrary\nwas first introduced.\n\nCOMP: Update TBB from 2019_U9 to 2021.5.0\n\nRemove TBB support for VTK 8. Since older VTK versions do not support\nthe updated TBB api, this commit removes support for TBB backend when\nbuilding on windows with VTK < 9.\n\nPrior to kitware/VTK@3e5313e71 (Replace task_scheduler_init with task_arena),\nthe header \"tbb/task_scheduler_init.h\" was required but is not available\nanymore in newer TBB version.\n\nSlicerBlockInstallTBB:\n* Update rules based on new library names.\n* On linux, switch to use slicerInstallLibrary to ensure\n  the symlink chain is followed.\n* On macOS, explicitly report an error if the CMake module\n  because the libraries are copied through the fix-up process.\n\nCOMP: Improve TBB CMake configuration check on macOS\n\nSince TBB 2021.5.0 requires at least macOS 10.15, this commit ensures\nthe configuration fails when the TBB backend is enabled and the\ndeployment target is not valid.\n\nCOMP: Update slicerInstallLibrary to ensure tbb debug libs are not packaged\n\nThis commit ensure libraries filename with suffix \"_debug\" are not\npackaged.\n\nCOMP: Update SlicerConfig to include Slicer_USE_TBB\n\nCo-authored-by: James Butler <jbutler@sonovol.com>","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/5e6771f37764bf2fd197e773a8994dc9d138ebee"},{"sha":"1738ec82685a2feaef0cda04f92649f634e3838f","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Improve performance of getting extensions install history\n\nThe extensions server was queried for metadata of all previously installed extensions for all versions.\nThis time could add up to several seconds (or even tens of seconds on a computer with very long history of Slicer installations).\n\nThis commit changes the behavior that the extensions server is only queried for the latest version for each previously installed extension.\n\nAlso fixed ordering of revision numbers. Now numeric sorting is used instead of lexicographic.","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/1738ec82685a2feaef0cda04f92649f634e3838f"},{"sha":"1951f9432f2272354a0acfe1a9b39b871aff2cd2","author":{"email":"lasso@queensu.ca","name":"Andras Lasso"},"message":"ENH: Enable new custom mouse gestures for moving crosshair\n\nCustom event translation can now be specified to make click or click-and-drag set the crosshair position.","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/1951f9432f2272354a0acfe1a9b39b871aff2cd2"},{"sha":"a1bd4bc42fd3ae4fda559ed020da2940fe43b70f","author":{"email":"david.allemang@kitware.com","name":"David Allemang"},"message":"BUG: Fix VTKObservationMixin preventing observed nodes from being released\n\nFixes #6406.\n\nThis change modifies the implementation of `VTKObservationMixin` to use a\n'weakref.WeakKeyDictionary` rather than a flat list of registered\nobservations. This allows observed vtkObjects to be garbage collected if\nall other references have been lost.\n\nThe registered events are stored in a nested dictionary structure to\nacheive constant-time access for `removeObserver`, `hasObserver`, etc.\nThis also guarantees no observations are duplicated.\n\n```\n{obj: {event: {method: (group, tag, priority)}}}\n```","distinct":true,"url":"https://api.github.com/repos/jcfr/Slicer/commits/a1bd4bc42fd3ae4fda559ed020da2940fe43b70f"}]},"public":true,"created_at":"2022-06-30T14:36:23Z"}
