{"id":"38616807227","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":18542303829,"size":7,"distinct_size":7,"ref":"refs/heads/master","head":"6bbec3bda02bf87d24fa095074456e723589921f","before":"56f1d5ed68e84ba5dfa328ea2291b8f46c995125","commits":[{"sha":"903c16fcfa5bfad0cdb2a7383d941243bcb12e76","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Move entries po4a/.gitignore to the top level .gitignore\n\nThe po4a directory is in EXTRA_DIST and thus all files there\nare included in the package. .gitignore doesn't belong in the\npackage so keep that file out of the po4a directory.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/903c16fcfa5bfad0cdb2a7383d941243bcb12e76"},{"sha":"9000d70eb9815bd7f43ffddc1c3316c507aa0e05","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add SPDX license identifier to .codespellrc","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9000d70eb9815bd7f43ffddc1c3316c507aa0e05"},{"sha":"9ae2ebc1e504a1814b0788de95fb5c58c0328dde","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add SPDX license identifiers to files under tests/ossfuzz","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9ae2ebc1e504a1814b0788de95fb5c58c0328dde"},{"sha":"f3434ecfcb45154508752986f4fc670b8f0555dc","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add build-aux/license-check.sh\n\nThis helps in spotting files that lack SPDX license identifier\nand which haven't been explicitly white listed either. The script\nrequires the .git directory to be present as only the files that\nare in the Git repository are checked.\n\nXZ Utils isn't FSFE REUSE compliant for now.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f3434ecfcb45154508752986f4fc670b8f0555dc"},{"sha":"a119a4209e8827e1d7c2cfd30cb9f5a9b76f9dff","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Run license-check.sh in \"mydist\" and \"dist-hook\"\n\nIn mydist the point is to check using the file list from the Git\nrepository. In dist-hook it is to check that the TARBALL_IGNORE\npatterns work when the .git dir or the \"git\" command aren't available.\n\nRefuse to create a distribution tarball if license issues are found.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a119a4209e8827e1d7c2cfd30cb9f5a9b76f9dff"},{"sha":"62733592a1cc6f0b41f46ef52e06d1a6fe1ff38a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use more confident language in COPYING","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/62733592a1cc6f0b41f46ef52e06d1a6fe1ff38a"},{"sha":"6bbec3bda02bf87d24fa095074456e723589921f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Mention license-check.sh in COPYING","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6bbec3bda02bf87d24fa095074456e723589921f"}]},"public":true,"created_at":"2024-05-22T17:24:48Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38616822514","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":18542310713,"size":26,"distinct_size":7,"ref":"refs/heads/mask_cntrl_chars","head":"3ad4a2505fcb0f38a76f716a1da582397ed227b1","before":"4468a0ea75477830db8a6396d3f36c80a9ebdeac","commits":[{"sha":"9f1a6d6f9a258886933a22239a5b81af34b28199","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Temporarily disable CRC CLMUL to silence OSS Fuzz\n\nThe code makes aligned 16-byte reads which may read up to 15 bytes\nbefore the beginning or past the end of the buffer if the buffer\nis misaligned. The unneeded bytes are then ignored. It cannot cross\npage boundaries and thus cannot cause access violations.\n\nThis inherently trips address sanitizer which was already disabled\nwith __attribute__((__no_sanitize_address__)). However, it also\ntrips memory sanitizer if the extra bytes are uninitialized because\nmemory sanitizer doesn't see that those bytes then get ignored by\nbyte shuffling in the xmm registers.\n\nThe plan is to change the code so that all sanitizers pass but it's\nnot finished yet (performance shouldn't get worse) so as a temporary\nmeasure to keep OSS Fuzz happy, the CLMUL CRC is now disabled even\nthough I think think the code is fine to use (and easy enough to review\nthe memory accesses in it too).","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9f1a6d6f9a258886933a22239a5b81af34b28199"},{"sha":"b14d08fbbc254485ace9ccfe7908674f608a62ae","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix white space\n\nThanks to xx on #tukaani.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b14d08fbbc254485ace9ccfe7908674f608a62ae"},{"sha":"4e9023857d287f624562156b60dc23d2b64c0f10","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix typos\n\nThanks to xx on #tukaani.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4e9023857d287f624562156b60dc23d2b64c0f10"},{"sha":"6167607a6ea72fb74eefb943c4566e3cab528cd2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: test_suffix.sh: Add a comment","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6167607a6ea72fb74eefb943c4566e3cab528cd2"},{"sha":"006040b29c83104403621e950ada0c8956c56b3d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Prepare to support the test_*.sh tests\n\nThis is a bit hacky since the scripts grep config.h to know which\nfeatures were built but the CMake build doesn't create config.h.\nSo instead those test scripts will be run only when all relevant\nfeatures have been enabled.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/006040b29c83104403621e950ada0c8956c56b3d"},{"sha":"ac3222d2cb1ff3a15eb6d58f9ea9bc78e8bc3bb2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: Make test_compress.sh more flexible\n\nAdd a new optional second argument: directory of the xz and xzdec\nexecutables. This is need with the CMake build where the binaries\nend up in the top-level build directory.\n\nIf ../config.h doesn't exist, assume that all encoders and decoders\nare available. This will make this script usable from CMake in the\nmost common build configuration.\n\nNOTE: Since the existence of ../config.h is checked, the working\ndirectory of the test script must be a subdir in the build tree!\nOtherwise ../config.h would look outside the build tree.\n\nUse the default check type instead of forcing CRC32 or CRC64.\nNow the script doesn't need to check if CRC64 is available.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ac3222d2cb1ff3a15eb6d58f9ea9bc78e8bc3bb2"},{"sha":"b40e6efbb48d740b9b5b303e59e344801cbb5bd8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for test_compress.sh tests","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b40e6efbb48d740b9b5b303e59e344801cbb5bd8"},{"sha":"a7e9230af9d1f87f474fe38886eb977d4149dc9b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: Make test_files.sh more flexible\n\nAdd a new optional argument to specify the directory of the xz and\nxzdec executables.\n\nIf ../config.h doesn't exist, assume that all encoders and decoders\nare available.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a7e9230af9d1f87f474fe38886eb977d4149dc9b"},{"sha":"dc232d584619b2819a9c52d6ad5d8b5d56b392ba","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for test_files.sh","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dc232d584619b2819a9c52d6ad5d8b5d56b392ba"},{"sha":"d35368b33e54bad2f566df99fac29ffea38e34de","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Remove the note that some tests aren't run\n\nThey are now in the common build configurations.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d35368b33e54bad2f566df99fac29ffea38e34de"},{"sha":"9d997d6f9d4f042412e45c7b7a23a14ad2e4f9aa","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add comments","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9d997d6f9d4f042412e45c7b7a23a14ad2e4f9aa"},{"sha":"56f1d5ed68e84ba5dfa328ea2291b8f46c995125","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: Make the config.h grep patterns Meson compatible\n\nNow the test scripts detect both\n\n    #define HAVE_DECODER_ARM\n    #define HAVE_DECODER_ARM 1\n\nas support for the ARM filter without confusing it with these:\n\n    #define HAVE_DECODER_ARM64\n    #define HAVE_DECODER_ARM64 1\n\nPreviously only the ones ending with \" 1\" were accepted for\nthe macros where this kind of confusion was possible.\n\nThis should help with Meson support because Meson's built-in\nfeatures produce config.h entries that are either\n\n    #define FOO 1\n    #define FOO 0\n\nor:\n\n    #define FOO\n    #undef FOO\n\nThe former method has a benefit that one can use \"#if FOO\" and -Wundef\nwill catch if a #define is missing (for example, it helps catching\ntypos). But XZ Utils has to use the latter since it has been\nconvenient with Autoconf's default behavior.[*] While it's easy to\nemulate the Autoconf style (#define FOO 1 vs. no #define at all)\nin Meson, it results in clumsy code. Thus it's better to change\nthe few places in the tests where this difference matters.\n\n[*] While most checks in Autoconf default to the second style above,\n    a few things use the first style (like AC_CHECK_DECLS). The mix\n    of both styles is the most confusing as one has to remember which\n    macro needs #ifdef and which #if. Currently HAVE_VISIBILITY is\n    only such config.h entry that is 1 or 0. It comes unmodified\n    from Gnulib's visibility.m4.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/56f1d5ed68e84ba5dfa328ea2291b8f46c995125"},{"sha":"903c16fcfa5bfad0cdb2a7383d941243bcb12e76","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Move entries po4a/.gitignore to the top level .gitignore\n\nThe po4a directory is in EXTRA_DIST and thus all files there\nare included in the package. .gitignore doesn't belong in the\npackage so keep that file out of the po4a directory.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/903c16fcfa5bfad0cdb2a7383d941243bcb12e76"},{"sha":"9000d70eb9815bd7f43ffddc1c3316c507aa0e05","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add SPDX license identifier to .codespellrc","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9000d70eb9815bd7f43ffddc1c3316c507aa0e05"},{"sha":"9ae2ebc1e504a1814b0788de95fb5c58c0328dde","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add SPDX license identifiers to files under tests/ossfuzz","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9ae2ebc1e504a1814b0788de95fb5c58c0328dde"},{"sha":"f3434ecfcb45154508752986f4fc670b8f0555dc","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add build-aux/license-check.sh\n\nThis helps in spotting files that lack SPDX license identifier\nand which haven't been explicitly white listed either. The script\nrequires the .git directory to be present as only the files that\nare in the Git repository are checked.\n\nXZ Utils isn't FSFE REUSE compliant for now.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f3434ecfcb45154508752986f4fc670b8f0555dc"},{"sha":"a119a4209e8827e1d7c2cfd30cb9f5a9b76f9dff","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Run license-check.sh in \"mydist\" and \"dist-hook\"\n\nIn mydist the point is to check using the file list from the Git\nrepository. In dist-hook it is to check that the TARBALL_IGNORE\npatterns work when the .git dir or the \"git\" command aren't available.\n\nRefuse to create a distribution tarball if license issues are found.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a119a4209e8827e1d7c2cfd30cb9f5a9b76f9dff"},{"sha":"62733592a1cc6f0b41f46ef52e06d1a6fe1ff38a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use more confident language in COPYING","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/62733592a1cc6f0b41f46ef52e06d1a6fe1ff38a"},{"sha":"6bbec3bda02bf87d24fa095074456e723589921f","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Mention license-check.sh in COPYING","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6bbec3bda02bf87d24fa095074456e723589921f"},{"sha":"dbcb277aa54301b3b196f82cbfb76218140a4218","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add tuklib_mbstr_nonprint to mask non-printable characters\n\nIn multibyte locales, some control characters are multibyte too, for\nexample, terminals interpret C1 control characters (U+0080 to U+009F)\nthat are two bytes as UTF-8. Thus, multibyte character sets have to\nbe handled.\n\nInstead of checking for control characters with iswcntrl(), this\nuses iswprint() to detect printable characters. This is much stricter.\n\nGnulib's quotearg would do a lot more but I hope such a thing isn't\nneeded here.\n\nThanks to Ryan Colyer for the discussion about the problems of\nthe earlier single-byte-only method.\n\nThanks to Christian Weisgerber for reporting a bug in an earlier\nversion of this code.\n\nThanks to Jeroen Roovers for a typo fix.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dbcb277aa54301b3b196f82cbfb76218140a4218"}]},"public":true,"created_at":"2024-05-22T17:25:16Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
