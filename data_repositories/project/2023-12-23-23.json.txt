{"id":"34382695401","type":"PushEvent","actor":{"id":39814207,"login":"pull[bot]","display_login":"pull","gravatar_id":"","url":"https://api.github.com/users/pull[bot]","avatar_url":"https://avatars.githubusercontent.com/u/39814207?"},"repo":{"id":569115669,"name":"sysfce2/liblzma","url":"https://api.github.com/repos/sysfce2/liblzma"},"payload":{"repository_id":569115669,"push_id":16392045862,"size":62,"distinct_size":62,"ref":"refs/heads/master","head":"cd713eadb4596b48e05438a5c081d8a13d7ee81e","before":"6533f1f5654db9540335f80372b29767d24cca45","commits":[{"sha":"a108ed589171d683c34238a87e358b87f69e39a0","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Omit an empty paragraph on the man page.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/a108ed589171d683c34238a87e358b87f69e39a0"},{"sha":"65981d8e45741fd1502e007609469e1d60312e69","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Chinese (simplified) translation.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/65981d8e45741fd1502e007609469e1d60312e69"},{"sha":"d93fbefcc48a8737fdf5678ce66d1c1d605752a0","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Style fixes to test_lzip_decoder.c.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/d93fbefcc48a8737fdf5678ce66d1c1d605752a0"},{"sha":"c0c0cd4a483a672b66a13761583bc4f84d86d501","author":{"email":"lukaszcz18@wp.pl","name":"Jamaika1"},"message":"mythread.h: Fix typo error in Vista threads mythread_once().\n\nThe \"once_\" variable was accidentally referred to as just \"once\". This\nprevented building with Vista threads when\nHAVE_FUNC_ATTRIBUTE_CONSTRUCTOR was not defined.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/c0c0cd4a483a672b66a13761583bc4f84d86d501"},{"sha":"e919ebb29ac9f5270cd7176a39d0d3b4cea875a9","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Conditionally allow win95 threads and --enable-small.\n\nWhen the compiler supports __attribute__((__constructor__))\nmythread_once() is never used, even with --enable-small. A configuration\nwith win95 threads and --enable-small will compile and be thread safe so\nit can be allowed.\n\nThis isn't a very common configuration since MSVC does not support\n__attribute__((__constructor__)), but MINGW32 and CLANG32 environments\nfor MSYS2 can use win95 threads and have\n__attribute__((__constructor__)) support.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/e919ebb29ac9f5270cd7176a39d0d3b4cea875a9"},{"sha":"bfb623ad96fa6f1dbc0c560403c4296e3c8e26c9","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Conditionally allow win95 threads and --enable-small.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/bfb623ad96fa6f1dbc0c560403c4296e3c8e26c9"},{"sha":"6614e6d4bf8e2b5af6eb73930148e0ffc8d2265a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Update INSTALL for --enable-threads method win95.\n\nThe Autotools build allows win95 threads and --enable-small together now\nif the compiler supports __attribute__((__constructor__)).","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/6614e6d4bf8e2b5af6eb73930148e0ffc8d2265a"},{"sha":"b41bb79c602481d7ea93d65f5b3e3f08dc54233b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Esperanto translation.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/b41bb79c602481d7ea93d65f5b3e3f08dc54233b"},{"sha":"68bda971bb8b666a009331455fcedb4e18d837a4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add overflow check for Unpadded size in lzma_index_append().\n\nThis was not a security bug since there was no path to overflow\nUINT64_MAX in lzma_index_append() or when it calls index_file_size().\nThe bug was discovered by a failing assert() in vli_ceil4() when called\nfrom index_file_size() when unpadded_sum (the sum of the compressed size\nof current Stream and the unpadded_size parameter) exceeds LZMA_VLI_MAX.\n\nPreviously, the unpadded_size parameter was checked to be not greater\nthan UNPADDED_SIZE_MAX, but no check was done once compressed_base was\nadded.\n\nThis could not have caused an integer overflow in index_file_size() when\ncalled by lzma_index_append(). The calculation for file_size breaks down\ninto the sum of:\n\n- Compressed base from all previous Streams\n- 2 * LZMA_STREAM_HEADER_SIZE (size of the current Streams header and\n  footer)\n- stream_padding (can be set by lzma_index_stream_padding())\n- Compressed base from the current Stream\n- Unpadded size (parameter to lzma_index_append())\n\nThe sum of everything except for Unpadded size must be less than\nLZMA_VLI_MAX. This is guarenteed by overflow checks in the functions\nthat can set these values including lzma_index_stream_padding(),\nlzma_index_append(), and lzma_index_cat(). The maximum value for\nUnpadded size is enforced by lzma_index_append() to be less than or\nequal UNPADDED_SIZE_MAX. Thus, the sum cannot exceed UINT64_MAX since\nLZMA_VLI_MAX is half of UINT64_MAX.\n\nThanks to Joona Kannisto for reporting this.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/68bda971bb8b666a009331455fcedb4e18d837a4"},{"sha":"773f1e8622cb1465df528cb16a749517650acd93","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update assert in vli_ceil4().\n\nThe argument to vli_ceil4() should always guarantee the return value\nis also a valid lzma_vli. Thus the highest three valid lzma_vli values\nare invalid arguments. All uses of the function ensure this so the\nassert is updated to match this.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/773f1e8622cb1465df528cb16a749517650acd93"},{"sha":"4b23b84b89e39a5117e16f66c3b01db4f08ed3e7","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/4b23b84b89e39a5117e16f66c3b01db4f08ed3e7"},{"sha":"4a4180ce74788e97e90b9aab579bfd7c6dce3f59","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve comments in test_index.c.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/4a4180ce74788e97e90b9aab579bfd7c6dce3f59"},{"sha":"cf8ba7c3a89e37736b926dfbe85dffeff725db47","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve invalid unpadded size check in test_lzma_index_append().\n\nThis check was extended to test the code added to fix a failing assert\nin 68bda971bb8b666a009331455fcedb4e18d837a4.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/cf8ba7c3a89e37736b926dfbe85dffeff725db47"},{"sha":"ef71f83973a20cc28a3221f85681922026ea33f5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Fix a too relaxed assertion and remove uses of SSIZE_MAX.\n\nSSIZE_MAX isn't readily available on MSVC. Removing it means\nthat there is one thing less to worry when porting to MSVC.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/ef71f83973a20cc28a3221f85681922026ea33f5"},{"sha":"1f6e7c68fbdeeaa9482fc77de090be63d90912fd","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Refactor thousand separator detection and disable it on MSVC.\n\nNow the two variations of the format strings are created with\na macro, and the whole detection code can be easily disabled\non platforms where thousand separator formatting is known to\nnot work (MSVC has no support, and on DJGPP 2.05 it can have\nproblems in some cases).","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/1f6e7c68fbdeeaa9482fc77de090be63d90912fd"},{"sha":"d5275d83bd2a9701c5feb8666785007c074b1359","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Fix unconditionally defining HAVE_CLOCK_MONOTONIC.\n\nIf HAVE_CLOCK_GETTIME was defined, then HAVE_CLOCK_MONOTONIC was always\nadded as a compile definition even if the check for it failed.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/d5275d83bd2a9701c5feb8666785007c074b1359"},{"sha":"a70e96d2da761b8b3a77bf14e08002d871e5950b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Fix time.h checks not running on second CMake run.\n\nIf CMake was configured more than once, HAVE_CLOCK_GETTIME and\nHAVE_CLOCK_MONOTONIC would not be set as compile definitions. The check\nfor librt being needed to provide HAVE_CLOCK_GETTIME was also\nsimplified.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/a70e96d2da761b8b3a77bf14e08002d871e5950b"},{"sha":"caf00e0988ba47842cfd93dfbb17f7d30120d6e7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Mark crc64_clmul() with __attribute__((__no_sanitize_address__)).\n\nThanks to Agostino Sarubbo.\nFixes: https://github.com/tukaani-project/xz/issues/62","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/caf00e0988ba47842cfd93dfbb17f7d30120d6e7"},{"sha":"43728ed2267e921fbdfa699ee1e91b105ab0e98b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/43728ed2267e921fbdfa699ee1e91b105ab0e98b"},{"sha":"589b4cba22fccb1dbc919df5d134aefb2b5a6b01","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/sysfce2/liblzma/commits/589b4cba22fccb1dbc919df5d134aefb2b5a6b01"}]},"public":true,"created_at":"2023-12-23T23:02:58Z"}
