{"id":"27194478107","type":"IssueCommentEvent","actor":{"id":5265893,"login":"vfazio","display_login":"vfazio","gravatar_id":"","url":"https://api.github.com/users/vfazio","avatar_url":"https://avatars.githubusercontent.com/u/5265893?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/events","html_url":"https://github.com/tukaani-project/xz/pull/32","id":1574672110,"node_id":"PR_kwDOIQBEvs5Jcyc6","number":32,"title":"Detect symver attribute support","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":5016626567,"node_id":"LA_kwDOIQBEvs8AAAABKwOlhw","url":"https://api.github.com/repos/tukaani-project/xz/labels/5.4.2","name":"5.4.2","color":"006b75","default":false,"description":"Item earmarked for 5.4.2 release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-02-07T16:47:02Z","updated_at":"2023-02-20T03:08:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/32","html_url":"https://github.com/tukaani-project/xz/pull/32","diff_url":"https://github.com/tukaani-project/xz/pull/32.diff","patch_url":"https://github.com/tukaani-project/xz/pull/32.patch","merged_at":null},"body":"On Microblaze builds will fail when trying to add symver information because  `__attribute__((symver ..))` is not supported even though `__has_attribute(__symver__)` returns true.\r\n\r\nSupport for symver needs to be detected via a compile test since `__has_attribute` can report false positives [0].\r\n\r\nAdd a configure compile check for `__attribute__((symver ..))` to ensure it is supported and define a variable to advertise support.\r\n\r\n[0] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766#c1\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [ ] Build was run locally and without warnings or errors\r\n- [ ] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\nbuilds targeting the microblaze fail\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\n- Builds now succeed\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI tested compiles via GCC 12 and 9 for x86_64 and microblaze targets and didn't encounter issues.\r\n\r\n<!-- Any other information that is important to this PR. -->","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1436250377","html_url":"https://github.com/tukaani-project/xz/pull/32#issuecomment-1436250377","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/32","id":1436250377,"node_id":"IC_kwDOIQBEvs5Vm3EJ","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"created_at":"2023-02-20T03:08:45Z","updated_at":"2023-02-20T03:08:45Z","author_association":"NONE","body":"@Larhzu \r\n\r\ni did a quick build off of master via buildroot without applying our patch and tested via qemu-system-microblazeel. Things _seem_ to work OK.\r\n\r\n```\r\nvfazio@Zephyrus:~/development/buildroot$ readelf -W --dyn-syms output/build/xz-b9f171dd00a3cc32b6d41ea8e082cf545640ec2a/src/liblzma/.libs/liblzma.so.5.5.99 | grep stream\r\n    46: 00013428   516 FUNC    GLOBAL DEFAULT   12 lzma_stream_buffer_decode@@XZ_5.0\r\n    48: 00013f64   436 FUNC    GLOBAL DEFAULT   12 lzma_stream_footer_decode@@XZ_5.0\r\n    63: 00013e80   228 FUNC    GLOBAL DEFAULT   12 lzma_stream_header_decode@@XZ_5.0\r\n    64: 000063c8   240 FUNC    GLOBAL DEFAULT   12 lzma_index_stream_flags@@XZ_5.0\r\n    75: 00007618   272 FUNC    GLOBAL DEFAULT   12 lzma_stream_flags_compare@@XZ_5.0\r\n    77: 0000be7c   108 FUNC    GLOBAL DEFAULT   12 lzma_stream_buffer_bound@@XZ_5.0\r\n    78: 00013dc4   188 FUNC    GLOBAL DEFAULT   12 lzma_stream_decoder@@XZ_5.0\r\n    99: 000064b8   356 FUNC    GLOBAL DEFAULT   12 lzma_index_stream_padding@@XZ_5.0\r\n   108: 0000bee8   932 FUNC    GLOBAL DEFAULT   12 lzma_stream_buffer_encode@@XZ_5.0\r\n   112: 0000cca8   336 FUNC    GLOBAL DEFAULT   12 lzma_stream_footer_encode@@XZ_5.0\r\n   114: 00006060    28 FUNC    GLOBAL DEFAULT   12 lzma_index_stream_count@@XZ_5.0\r\n   120: 0000cb14   180 FUNC    GLOBAL DEFAULT   12 lzma_stream_encoder@@XZ_5.0\r\n   128: 0000ebfc   524 FUNC    GLOBAL DEFAULT   12 lzma_stream_encoder_mt_memusage@@XZ_5.2\r\n   129: 00016670   156 FUNC    GLOBAL DEFAULT   12 lzma_stream_decoder_mt@@XZ_5.4\r\n   131: 0000eb58   164 FUNC    GLOBAL DEFAULT   12 lzma_stream_encoder_mt@@XZ_5.2\r\n   132: 0000cbc8   224 FUNC    GLOBAL DEFAULT   12 lzma_stream_header_encode@@XZ_5.0\r\n   152: 00006118   160 FUNC    GLOBAL DEFAULT   12 lzma_index_stream_size@@XZ_5.0\r\nvfazio@Zephyrus:~/development/buildroot$ output/images/start-qemu.sh serial-only\r\nRamdisk addr 0x00000000, \r\nFDT at 0x90861a8c\r\nLinux version 5.15.18 (vfazio@Zephyrus) (microblazeel-buildroot-linux-gnu-gcc.br_real (Buildroot 2022.11-1506-g1d18e0245a) 11.3.0, GNU ld (GNU Binutils) 2.38) #5 Sun Feb 19 11:06:27 CST 2023\r\nsetup_memory: max_mapnr: 0x8000\r\nsetup_memory: min_low_pfn: 0x90000\r\nsetup_memory: max_low_pfn: 0x98000\r\nsetup_memory: max_pfn: 0x98000\r\nZone ranges:\r\n  DMA      [mem 0x0000000090000000-0x0000000097ffffff]\r\n  Normal   empty\r\nMovable zone start for each node\r\nEarly memory node ranges\r\n  node   0: [mem 0x0000000090000000-0x0000000097ffffff]\r\nInitmem setup node 0 [mem 0x0000000090000000-0x0000000097ffffff]\r\nsetup_cpuinfo: initialising\r\nsetup_cpuinfo: No PVR support. Using static CPU info from FDT\r\nwt_msr\r\npcpu-alloc: s0 r0 d32768 u32768 alloc=1*32768\r\npcpu-alloc: [0] 0 \r\nBuilt 1 zonelists, mobility grouping on.  Total pages: 32512\r\nKernel command line: \r\nDentry cache hash table entries: 16384 (order: 4, 65536 bytes, linear)\r\nInode-cache hash table entries: 8192 (order: 3, 32768 bytes, linear)\r\nmem auto-init: stack:off, heap alloc:off, heap free:off\r\nMemory: 120996K/131072K available (4176K kernel code, 505K rwdata, 748K rodata, 3074K init, 195K bss, 10076K reserved, 0K cma-reserved)\r\nSLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1\r\nNR_IRQS: 64, nr_irqs: 64, preallocated irqs: 0\r\nirq-xilinx: /plb/interrupt-controller@81800000: num_irq=4, edge=0xa\r\nERROR: CPU CCF input clock not found\r\n/plb/timer@83c00000: irq=1\r\nERROR: timer CCF input clock not found\r\nERROR: Using CPU clock frequency\r\nclocksource: xilinx_clocksource: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 30580167144 ns\r\nxilinx_timer_shutdown\r\nxilinx_timer_set_periodic\r\nsched_clock: 32 bits at 62MHz, resolution 16ns, wraps every 34359738360ns\r\nConsole: colour dummy device 80x25\r\nprintk: console [tty0] enabled\r\nCalibrating delay loop... 3063.80 BogoMIPS (lpj=6127616)\r\npid_max: default: 32768 minimum: 301\r\nMount-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)\r\nMountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)\r\ndevtmpfs: initialized\r\nrandom: get_random_u32 called from bucket_table_alloc.isra.0+0x70/0x1f0 with crng_init=0\r\nclocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns\r\nfutex hash table entries: 256 (order: -1, 3072 bytes, linear)\r\nNET: Registered PF_NETLINK/PF_ROUTE protocol family\r\nDMA: preallocated 128 KiB GFP_KERNEL pool for atomic allocations\r\nDMA: preallocated 128 KiB GFP_KERNEL|GFP_DMA pool for atomic allocations\r\npps_core: LinuxPPS API ver. 1 registered\r\npps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>\r\nPTP clock support registered\r\nclocksource: Switched to clocksource xilinx_clocksource\r\nNET: Registered PF_INET protocol family\r\nIP idents hash table entries: 2048 (order: 2, 16384 bytes, linear)\r\ntcp_listen_portaddr_hash hash table entries: 512 (order: 0, 4096 bytes, linear)\r\nTCP established hash table entries: 1024 (order: 0, 4096 bytes, linear)\r\nTCP bind hash table entries: 1024 (order: 0, 4096 bytes, linear)\r\nTCP: Hash tables configured (established 1024 bind 1024)\r\nUDP hash table entries: 256 (order: 0, 4096 bytes, linear)\r\nUDP-Lite hash table entries: 256 (order: 0, 4096 bytes, linear)\r\nNET: Registered PF_UNIX/PF_LOCAL protocol family\r\nworkingset: timestamp_bits=30 max_order=15 bucket_order=0\r\nio scheduler mq-deadline registered\r\nio scheduler kyber registered\r\n84000000.serial: ttyUL0 at MMIO 0x84000000 (irq = 4, base_baud = 0) is a uartlite\r\nprintk: console [ttyUL0] enabled\r\nxilinx_emaclite 81000000.ethernet: Device Tree Probing\r\nxilinx_emaclite 81000000.ethernet: Failed to register mdio bus.\r\nxilinx_emaclite 81000000.ethernet: MAC address is now 02:00:00:00:00:00\r\nxilinx_emaclite 81000000.ethernet: Xilinx EmacLite at 0x81000000 mapped to 0x(ptrval), irq=2\r\nNET: Registered PF_INET6 protocol family\r\nSegment Routing with IPv6\r\nIn-situ OAM (IOAM) with IPv6\r\nsit: IPv6, IPv4 and MPLS over IPv4 tunneling driver\r\nNET: Registered PF_PACKET protocol family\r\nFreeing unused kernel image (initmem) memory: 3072K\r\nThis architecture does not have kernel memory protection.\r\nRun /init as init process\r\n  with arguments:\r\n    /init\r\n  with environment:\r\n    HOME=/\r\n    TERM=linux\r\nStarting syslogd: OK\r\nStarting klogd: OK\r\nRunning sysctl: OK\r\nSaving 2048 bits of non-creditable seed for next boot\r\nStarting network: random: fast init done\r\nudhcpc: started, v1.36.0\r\nudhcpc: broadcasting discover\r\nudhcpc: broadcasting select for 10.0.2.15, server 10.0.2.2\r\nudhcpc: lease of 10.0.2.15 obtained from 10.0.2.2, lease time 86400\r\ndeleting routers\r\nadding dns 10.0.2.3\r\nOK\r\n\r\nWelcome to Buildroot\r\nbuildroot login: root\r\n\r\n# xz -h\r\nUsage: xz [OPTION]... [FILE]...\r\nCompress or decompress FILEs in the .xz format.\r\n\r\n  -z, --compress      force compression\r\n  -d, --decompress    force decompression\r\n  -t, --test          test compressed file integrity\r\n  -l, --list          list information about .xz files\r\n  -k, --keep          keep (don't delete) input files\r\n  -f, --force         force overwrite of output file and (de)compress links\r\n  -c, --stdout        write to standard output and don't delete input files\r\n  -0 ... -9           compression preset; default is 6; take compressor *and*\r\n                      decompressor memory usage into account before using 7-9!\r\n  -e, --extreme       try to improve compression ratio by using more CPU time;\r\n                      does not affect decompressor memory requirements\r\n  -T, --threads=NUM   use at most NUM threads; the default is 1; set to 0\r\n                      to use as many threads as there are processor cores\r\n  -q, --quiet         suppress warnings; specify twice to suppress errors too\r\n  -v, --verbose       be verbose; specify twice for even more verbose\r\n  -h, --help          display this short help and exit\r\n  -H, --long-help     display the long help (lists also the advanced options)\r\n  -V, --version       display the version number and exit\r\n\r\nWith no FILE, or when FILE is -, read standard input.\r\n\r\nReport bugs to <xz@tukaani.org> (in English or Finnish).\r\nXZ Utils home page: <https://tukaani.org/xz/>\r\nTHIS IS A DEVELOPMENT VERSION NOT INTENDED FOR PRODUCTION USE.\r\n\r\n# xz -V\r\nxz (XZ Utils) 5.5.0alpha\r\nliblzma 5.5.0alpha\r\n\r\n# fallocate -l 100000 test.file\r\n# xz test.file \r\n# ls -la\r\ntotal 8\r\ndrwx------    2 root     root            80 Jan  1 00:00 .\r\ndrwxr-xr-x   17 root     root           400 Feb 19  2023 ..\r\n-rw-------    1 root     root           102 Jan  1 00:00 .ash_history\r\n-rw-r--r--    1 root     root           148 Jan  1 00:00 test.file.xz\r\n# xzcat test.file.xz |  hexdump\r\n0000000 0000 0000 0000 0000 0000 0000 0000 0000\r\n*\r\n00186a0\r\n```\r\n\r\nWhile i think i personally prefer the compile time check, even if that means i need to tweak it to be more accurate, it's ultimately your call and i'm OK with closing this PR if quirking microblaze is the solution you're happy with. But if gcc gets fixed (assuming it's actually a gcc bug), that means microblaze is now an edge case different from other architectures.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1436250377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-20T03:08:45Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
