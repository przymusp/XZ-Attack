{"id":"38820700968","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":18642045856,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"9284f1aea31f0eb23e2ea72f7218b271e2234762","before":"4beba1cd62d7f8f7a6f1e899b68292d94c53b599","commits":[{"sha":"9284f1aea31f0eb23e2ea72f7218b271e2234762","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Update po/*.po files only when needed\n\nWhen po/xz.pot doesn't exist, running \"make\" or \"make dist\" will\ncreate it. Then the .po files will be updated but only if they\nactually would change more than the POT-Creation-Date line.\nThen the .gmo files would be generated from the .po files.\nThis is the case before and after this commit.\n\nHowever, \"make dist\" and thus \"make mydist\" did a forced update\nto the files, updating them even if the only change was the\nPOT-Creation-Date line. This had pros and cons: It made it clear\nthat the .po file really is in sync with the recent strings in\nthe package. On the other hand, it added noise in form of changed\nfiles in the source tree and distribution tarballs. It can be\nignored with something like \"diff -I'^\"POT-Creation-Date: '\" but\nit's still a minor annoyance *if* there's not enough value in\nhaving the most recent timestamp.\n\nSetting DIST_DEPENDS_ON_UPDATE_PO = no means that such forced\nupdate won't happen in \"make dist\" anymore. However, the \"mydist\"\ntarget will use xz.pot-update target which is the same target that\nis run when xz.pot doesn't exist at all yet. Thus \"mydist\" will\nensure that the translations are up to date, without noise from\nchanges that would affect only the POT-Creation-Date line.\n\nNote that po4a always uses msgmerge with --update, so POT-Creation-Date\nin the man page translations is never the only change in .po files.\nIn that sense this commit makes the message translations behave more\nsimilarly to the man page translations.\n\nDistribution tarballs will still have non-reproducible POT-Creation-Date\nin po/xz.pot and po4a/xz-man.pot but those are just two files. Even they\ncould be made reproducible from a Git timestamp if desired.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9284f1aea31f0eb23e2ea72f7218b271e2234762"}]},"public":true,"created_at":"2024-05-29T16:08:21Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38821651529","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"v5.4_dev","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-05-29T16:39:03Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38821651548","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"v5.2_dev","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-05-29T16:39:03Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38821651549","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"v5.6_dev","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-05-29T16:39:03Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38822014463","type":"CreateEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"v5.2.13","ref_type":"tag","master_branch":"master","description":"XZ Utils","pusher_type":"user"},"public":true,"created_at":"2024-05-29T16:51:32Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38822014523","type":"CreateEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"v5.6.2","ref_type":"tag","master_branch":"master","description":"XZ Utils","pusher_type":"user"},"public":true,"created_at":"2024-05-29T16:51:32Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38822014543","type":"CreateEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"v5.4.7","ref_type":"tag","master_branch":"master","description":"XZ Utils","pusher_type":"user"},"public":true,"created_at":"2024-05-29T16:51:32Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"38822014724","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":18642663274,"size":84,"distinct_size":84,"ref":"refs/heads/v5.2","head":"e17caec12e14eb46ae90f4a5e59401ada4ab2842","before":"774145adfda4c33c07ef6543c081230edf63ba04","commits":[{"sha":"b276ef1f490e6ad53f880db8e12e5406538e1387","author":{"email":"bebuch@users.noreply.github.com","name":"Benjamin Buch"},"message":"CMake: Protects against double find_package\n\nBoost iostream uses `find_package` in quiet mode and then again uses\n`find_package` with required. This second call triggers a\n`add_library cannot create imported target \"LibLZMA::LibLZMA\"\nbecause another target with the same name already exists.`\n\nThis can simply be fixed by skipping the alias part on secondary\n`find_package` runs.\n\n(cherry picked from commit d04eb78ab3892d3678c180437dd66379efa051fd)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b276ef1f490e6ad53f880db8e12e5406538e1387"},{"sha":"6174ac8e60a5a9d202cc302917f007e07b38cf8b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update THANKS.\n\n(cherry picked from commit 62dd1c9bf0c66679ceeebc8b99bca136ca43bcb9)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6174ac8e60a5a9d202cc302917f007e07b38cf8b"},{"sha":"5f9bf810441d37a1ab3626a67c9369ea27243915","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent uninitialzed warning in mt stream encoder.\n\nThis change only impacts the compiler warning since it was impossible\nfor the wait_abs struct in stream_encode_mt() to be used before it was\ninitialized since mythread_condtime_set() will always be called before\nmythread_cond_timedwait().\n\nSince the mythread.h code is different between the POSIX and\nWindows versions, this warning was only present on Windows builds.\n\nThanks to Arthur S for reporting the warning and providing an initial\npatch.\n\n(cherry picked from commit 1155471651ad456c5f90aee6435931fae65682bf)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5f9bf810441d37a1ab3626a67c9369ea27243915"},{"sha":"eede1df4afdbed8e5dde2ebbf699f7e23f0dd594","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent warning for MSYS2 Windows build.\n\nIn lzma_memcmplen(), the <intrin.h> header file is only included if\n_MSC_VER and _M_X64 are both defined but _BitScanForward64() was\npreviously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but\nnot _MSC_VER so _BitScanForward64() was used without including\n<intrin.h>.\n\nNow, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as\nexpected.\n\n(cherry picked from commit 64ee0caaea06654b28afaee850fb187a11bf9cb2)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/eede1df4afdbed8e5dde2ebbf699f7e23f0dd594"},{"sha":"0c53f52657ca7c0bab66a2694ecbd21721b3ee6d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Omit unnecessary parenthesis in a preprocessor directive.\n\n(cherry picked from commit ef4a07ad9434f81417395f6fe0bb331e027a703b)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/0c53f52657ca7c0bab66a2694ecbd21721b3ee6d"},{"sha":"5a87d91321b73ccb60381c808da3cdc1554ae3ca","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Tweak #if condition in memcmplen.h.\n\nMaybe ICC always #defines _MSC_VER on Windows but now\nit's very clear which code will get used.\n\n(cherry picked from commit b406828a6dfd3caa4f77efe3ff3e3eea263eee62)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5a87d91321b73ccb60381c808da3cdc1554ae3ca"},{"sha":"9d4bf2d06f6a85fd107f2d58c744fe4880dd4b02","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent an empty translation unit in Windows builds.\n\nTo workaround Automake lacking Windows resource compiler support, an\nempty source file is compiled to overwrite the resource files for static\nlibrary builds. Translation units without an external declaration are\nnot allowed by the C standard and result in a warning when used with\n-Wempty-translation-unit (Clang) or -pedantic (GCC).\n\n(cherry picked from commit 19899340cf74d98304f9f5b726c72e85c7017d72)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9d4bf2d06f6a85fd107f2d58c744fe4880dd4b02"},{"sha":"f1123eefe16401614430b827913554496ebb17eb","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"build-aux/manconv.sh: Fix US-ASCII and UTF-8 output.\n\ngroff defaults to SGR escapes. Using -P-c passes -c to grotty\nwhich restores the old behavior. Perhaps there is a better way to\nget pure plain text output but this works for now.\n\n(cherry picked from commit 6a1093c0004c42eeaef312456c295671496dd67a)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f1123eefe16401614430b827913554496ebb17eb"},{"sha":"ec0d5c99c3ff785dd9d555fb1effe6ef7ad284da","author":{"email":"lukaszcz18@wp.pl","name":"Jamaika1"},"message":"mythread.h: Fix typo error in Vista threads mythread_once().\n\nThe \"once_\" variable was accidentally referred to as just \"once\". This\nprevented building with Vista threads when\nHAVE_FUNC_ATTRIBUTE_CONSTRUCTOR was not defined.\n\n(cherry picked from commit c0c0cd4a483a672b66a13761583bc4f84d86d501)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ec0d5c99c3ff785dd9d555fb1effe6ef7ad284da"},{"sha":"591ac56d42dfe543bdf8290bc361d800f0209bc5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add overflow check for Unpadded size in lzma_index_append().\n\nThis was not a security bug since there was no path to overflow\nUINT64_MAX in lzma_index_append() or when it calls index_file_size().\nThe bug was discovered by a failing assert() in vli_ceil4() when called\nfrom index_file_size() when unpadded_sum (the sum of the compressed size\nof current Stream and the unpadded_size parameter) exceeds LZMA_VLI_MAX.\n\nPreviously, the unpadded_size parameter was checked to be not greater\nthan UNPADDED_SIZE_MAX, but no check was done once compressed_base was\nadded.\n\nThis could not have caused an integer overflow in index_file_size() when\ncalled by lzma_index_append(). The calculation for file_size breaks down\ninto the sum of:\n\n- Compressed base from all previous Streams\n- 2 * LZMA_STREAM_HEADER_SIZE (size of the current Streams header and\n  footer)\n- stream_padding (can be set by lzma_index_stream_padding())\n- Compressed base from the current Stream\n- Unpadded size (parameter to lzma_index_append())\n\nThe sum of everything except for Unpadded size must be less than\nLZMA_VLI_MAX. This is guarenteed by overflow checks in the functions\nthat can set these values including lzma_index_stream_padding(),\nlzma_index_append(), and lzma_index_cat(). The maximum value for\nUnpadded size is enforced by lzma_index_append() to be less than or\nequal UNPADDED_SIZE_MAX. Thus, the sum cannot exceed UINT64_MAX since\nLZMA_VLI_MAX is half of UINT64_MAX.\n\nThanks to Joona Kannisto for reporting this.\n\n(cherry picked from commit 68bda971bb8b666a009331455fcedb4e18d837a4)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/591ac56d42dfe543bdf8290bc361d800f0209bc5"},{"sha":"519896fc94ed2a1518c9083db06575f1813e94ce","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Update assert in vli_ceil4().\n\nThe argument to vli_ceil4() should always guarantee the return value\nis also a valid lzma_vli. Thus the highest three valid lzma_vli values\nare invalid arguments. All uses of the function ensure this so the\nassert is updated to match this.\n\n(cherry picked from commit 773f1e8622cb1465df528cb16a749517650acd93)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/519896fc94ed2a1518c9083db06575f1813e94ce"},{"sha":"f2aea3d4546152699fa5855bc1ddd6001ded5c64","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update THANKS.\n\n(cherry picked from commit 4b23b84b89e39a5117e16f66c3b01db4f08ed3e7)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f2aea3d4546152699fa5855bc1ddd6001ded5c64"},{"sha":"df8daea2825d1857c82bf96a8772b792475af9fb","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Fix a too relaxed assertion and remove uses of SSIZE_MAX.\n\nSSIZE_MAX isn't readily available on MSVC. Removing it means\nthat there is one thing less to worry when porting to MSVC.\n\n(cherry picked from commit ef71f83973a20cc28a3221f85681922026ea33f5)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/df8daea2825d1857c82bf96a8772b792475af9fb"},{"sha":"ba791978d5f3d86d22b8f75c9e047fbd5794ed08","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Fix time.h checks not running on second CMake run.\n\nIf CMake was configured more than once, HAVE_CLOCK_GETTIME and\nHAVE_CLOCK_MONOTONIC would not be set as compile definitions. The check\nfor librt being needed to provide HAVE_CLOCK_GETTIME was also\nsimplified.\n\n(cherry picked from commit a70e96d2da761b8b3a77bf14e08002d871e5950b)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ba791978d5f3d86d22b8f75c9e047fbd5794ed08"},{"sha":"015e62b18d38cd3a67fea631375ebbab610274fe","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove incorrect uses of __attribute__((__malloc__)).\n\nxrealloc() is obviously incorrect, modern GCC docs even\nmention realloc() as an example where this attribute\ncannot be used.\n\nliblzma's lzma_alloc() and lzma_alloc_zero() would be\ncorrect uses most of the time but custom allocators\nmay use a memory pool or otherwise hold the pointer\nso aliasing issues could happen in theory.\n\nThe xstrdup() case likely was correct but I removed it anyway.\nNow there are no __malloc__ attributes left in the code.\nThe allocations aren't in hot paths so this should make\nno practical difference.\n\n(cherry picked from commit 359e5c6cb128dab64ea6070d21d1c240f96cea6b)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/015e62b18d38cd3a67fea631375ebbab610274fe"},{"sha":"737318447a25c2fddacef2c20ecc883c6186e0c6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.\n\nFor compatibility with C23's [[noreturn]], tuklib_attr_noreturn\nmust be at the beginning of declaration (before \"extern\" or\n\"static\", and even before any GNU C's __attribute__).\n\nThis commit also moves all other function attributes to\nthe beginning of function declarations. \"extern\" is kept\nat the beginning of a line so the attributes are listed on\nseparate lines before \"extern\" or \"static\".\n\n(cherry picked from commit b71b8922ef3971e5ccffd1e213888d44abe21d11)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/737318447a25c2fddacef2c20ecc883c6186e0c6"},{"sha":"a3de1b841e7ee19d9f51f450b45b7dde82a1e03e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Move a few __attribute__ uses in function declarations.\n\nThe API headers have many attributes but these were left\nas is for now.\n\n(cherry picked from commit e3478ae4f36cd06522a2fef023860893f068434d)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a3de1b841e7ee19d9f51f450b45b7dde82a1e03e"},{"sha":"3d70e66ecb9a3d9bce9a2fad3df746ab861dc94a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Bump maximum policy version to 3.27.\n\nThere are several new policies. CMP0149 may affect the Windows SDK\nversion that CMake will choose by default. The new behavior is more\npredictable, always choosing the latest SDK version by default.\n\nThe other new policies shouldn't affect this package.\n\n(cherry picked from commit 5be6275f19784cdd5a954f0188045c8ff4934d54)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3d70e66ecb9a3d9bce9a2fad3df746ab861dc94a"},{"sha":"1456a9d94334226be115eb9926d79b98bd69770d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Windows: Don't (de)compress to special files like \"con\" or \"nul\".\n\nBefore this commit, the following writes \"foo\" to the\nconsole and deletes the input file:\n\n    echo foo | xz > con_xz\n    xz --suffix=_xz --decompress con_xz\n\nIt cannot happen without --suffix because names like con.xz\nare also special and so attempting to decompress con.xz\n(or compress con to con.xz) will already fail when opening\nthe input file.\n\nSimilar thing is possible when compressing. The following\nwrites to \"nul\" and the input file \"n\" is deleted.\n\n    echo foo | xz > n\n    xz --suffix=ul n\n\nNow xz checks if the destination is a special file before\ncontinuing. DOS/DJGPP version had a check for this but\nWindows (and OS/2) didn't.\n\n(cherry picked from commit 660c8c29e57d30dbd5009ef1f0ec1bbe195ccef6)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1456a9d94334226be115eb9926d79b98bd69770d"},{"sha":"cf003b3ac27d0091eb3f97eae1ab9dc56904251b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"sysdefs.h: Update the comment about __USE_MINGW_ANSI_STDIO.\n\n(cherry picked from commit 4ae13cfe0dedb8ddc3cf9ded8cd1ac09361b3bd1)","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cf003b3ac27d0091eb3f97eae1ab9dc56904251b"}]},"public":true,"created_at":"2024-05-29T16:51:33Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
