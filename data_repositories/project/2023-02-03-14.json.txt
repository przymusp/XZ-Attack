{"id":"26856454630","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"push_id":12501141532,"size":31,"distinct_size":31,"ref":"refs/heads/v5.4","head":"e970c28ac3cb2e8051925f81db2fe953664c2645","before":"18b845e69752c975dfeda418ec00eda22605c2ee","commits":[{"sha":"c55157ed7437ab14f2afb7fecf331e321f2edf9a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: test_lzip_decoder: Silence warnings from -Wsign-conversion.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c55157ed7437ab14f2afb7fecf331e321f2edf9a"},{"sha":"977dd2e26bc50efec8d30fb90380394042d24558","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: test_lzip_decoder: Remove trailing white-space.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/977dd2e26bc50efec8d30fb90380394042d24558"},{"sha":"d3e833ca1d2abda54648494c33aca73a40a47efe","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Fix warnings from clang -Wdocumentation.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d3e833ca1d2abda54648494c33aca73a40a47efe"},{"sha":"6671d0fe46b77f0fafce860836b7a12dc3cda14a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Silence warnings from clang -Wconditional-uninitialized.\n\nThis is similar to 2ce4f36f179a81d0c6e182a409f363df759d1ad0.\nThe actual initialization of the variables is done inside\nmythread_sync() macro. Clang doesn't seem to see that\nthe initialization code inside the macro is always executed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6671d0fe46b77f0fafce860836b7a12dc3cda14a"},{"sha":"34e13ce015232968731de2a9ec3440a08b0084b1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: Silence warnings from -Wsign-conversion.\n\nNote that assigning an unsigned int to lzma_check doesn't warn\non GNU/Linux x86-64 since the enum type is unsigned on that\nplatform. The enum can be signed on some other platform though\nso it's best to use enumeration type lzma_check in these situations.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/34e13ce015232968731de2a9ec3440a08b0084b1"},{"sha":"c47ecd6d3909d0d3ff48dfd6e2ee41e7c7130b94","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: Fix warnings from clang --Wassign-enum.\n\nExplicitly casting the integer to lzma_check silences the warning.\nSince such an invalid value is needed in multiple tests, a constant\nINVALID_LZMA_CHECK_ID was added to tests.h.\n\nThe use of 0x1000 for lzma_block.check wasn't optimal as if\nthe underlying type is a char then 0x1000 will be truncated to 0.\nHowever, in these test cases the value is ignored, thus even with\nsuch truncation the test would have passed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c47ecd6d3909d0d3ff48dfd6e2ee41e7c7130b94"},{"sha":"b16b9c0d22227012518595c2222facc73bd833a8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Make configure add more warning flags for GCC and Clang.\n\n-Wstrict-aliasing was removed from the list since it is enabled\nby -Wall already.\n\nA normal build is clean with these on GNU/Linux x86-64 with\nGCC 12.2.0 and Clang 14.0.6.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b16b9c0d22227012518595c2222facc73bd833a8"},{"sha":"2b8062ef94a38d0f9ad0d1b309e8748db52f5c15","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Silence a warning from -Wsign-conversion in a 32-bit build.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2b8062ef94a38d0f9ad0d1b309e8748db52f5c15"},{"sha":"683d3f178ef1487b5418be49f331b0131a101b40","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Silence another warning from -Wsign-conversion in a 32-bit build.\n\nIt doesn't warn on a 64-bit system because truncating\na ptrdiff_t (signed long) to uint32_t is diagnosed under\n-Wconversion by GCC and -Wshorten-64-to-32 by Clang.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/683d3f178ef1487b5418be49f331b0131a101b40"},{"sha":"09fbd2f0527def89e839c8907de4fe7ef6bc5019","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Silence warnings from -Wsign-conversion in a 32-bit build.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/09fbd2f0527def89e839c8907de4fe7ef6bc5019"},{"sha":"3ccedb09724c998c39d708c945f6da5852c39e13","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Use ssize_t for the to-be-ignored return value from write(fd, ptr, 1).\n\nIt makes no difference here as the return value fits into an int\ntoo and it then gets ignored but this looks better.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3ccedb09724c998c39d708c945f6da5852c39e13"},{"sha":"718f7a60e740b26b8353965edaaddc7d4deb4d85","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit -Wmissing-noreturn from the default warnings.\n\nIt's not that important. It can be annoying in builds that\ndisable many features since in those cases the tests programs\nwill correctly trigger this warning with Clang.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/718f7a60e740b26b8353965edaaddc7d4deb4d85"},{"sha":"039e0ab13efb144642f9d99eeeb9c668e76bb430","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Brazilian Portuguese translation.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/039e0ab13efb144642f9d99eeeb9c668e76bb430"},{"sha":"88dc19163421282369c0989e997c05f9a447edc6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Do not set compression settings with raw format in list mode.\n\nCalling coder_set_compression_settings() in list mode with verbose mode\non caused the filter chain and memory requirements to print. This was\nunnecessary since the command results in an error and not consistent\nwith other formats like lzma and alone.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/88dc19163421282369c0989e997c05f9a447edc6"},{"sha":"720ad4a44282a7ee59aa9920eaf495d85d245d97","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Add missing comment for coder_set_compression_settings()","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/720ad4a44282a7ee59aa9920eaf495d85d245d97"},{"sha":"257dbff0ba1a7bc45a74d203ece015c9f70c88cd","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"tuklib_physmem: Silence warning from -Wcast-function-type on MinGW-w64.\n\ntuklib_physmem depends on GetProcAddress() for both MSVC and MinGW-w64\nto retrieve a function address. The proper way to do this is to cast the\nreturn value to the type of function pointer retrieved. Unfortunately,\nthis causes a cast-function-type warning, so the best solution is to\nsimply ignore the warning.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/257dbff0ba1a7bc45a74d203ece015c9f70c88cd"},{"sha":"bd213d06ebf92cf42eeb97e7c578bddc857f8ea8","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Highlight liblzma API headers should not be included directly.\n\nThis improves the generated Doxygen HTML files to better highlight\nhow to properly use the liblzma API header files.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bd213d06ebf92cf42eeb97e7c578bddc857f8ea8"},{"sha":"76dec92fcca4a9ccd2063ed6d5d9e3474665baad","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Set documentation on all reserved fields to private.\n\nThis prevents the reserved fields from being part of the generated\nDoxygen documentation.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/76dec92fcca4a9ccd2063ed6d5d9e3474665baad"},{"sha":"99575947a58a60416c570eb78038d18a1ea4cef4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Refactor duplicated check for custom suffix when using --format=raw","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/99575947a58a60416c570eb78038d18a1ea4cef4"},{"sha":"e9c47e79c9584ba1126f5fa0dbe6c96e67411aa6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Fix documentation in filter.h for lzma_str_to_filters()\n\nThe previous documentation for lzma_str_to_filters() was technically\ncorrect, but misleading. lzma_str_to_filters() returns NULL on success,\nwhich is in practice always defined to 0. This is the same value as\nLZMA_OK, but lzma_str_to_filters() does not return lzma_ret so we should\nbe more clear.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e9c47e79c9584ba1126f5fa0dbe6c96e67411aa6"}]},"public":true,"created_at":"2023-02-03T14:58:18Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
