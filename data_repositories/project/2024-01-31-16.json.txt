{"id":"35282818159","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":16881630799,"size":1,"distinct_size":1,"ref":"refs/heads/arm64_crc32","head":"9aa790889e392e95b6b156396306c04be7214f0d","before":"f31340c319a97dbe3fec1da97ea1c32815c3fee4","commits":[{"sha":"9aa790889e392e95b6b156396306c04be7214f0d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add macOS ARM64 CPU feature runtime detection.\n\nThis allows the ARM64 CRC32 instruction to be used on macOS when runtime\ndetection is needed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9aa790889e392e95b6b156396306c04be7214f0d"}]},"public":true,"created_at":"2024-01-31T16:04:26Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"35283508870","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":16881960800,"size":8,"distinct_size":8,"ref":"refs/heads/arm64_crc32","head":"98bf4f6b229f9f1902cf237cd692f0c7725c74cd","before":"9aa790889e392e95b6b156396306c04be7214f0d","commits":[{"sha":"795e723dca6e2a1006697ba21d2fa3a830f870d6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add support for ARM64 CRC32 instruction detection.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/795e723dca6e2a1006697ba21d2fa3a830f870d6"},{"sha":"3f1aff9b587fcec6e8369b6110732d15893041a3","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Refactor crc_common.h.\n\nThe CRC_GENERIC is now split into CRC32_GENERIC and CRC64_GENERIC, since\nthe ARM64 optimizations will be different between CRC32 and CRC64.\n\nFor the same reason, CRC_ARCH_OPTIMIZED is split into\nCRC32_ARCH_OPTIMIZED and CRC64_ARCH_OPTIMIZED.\n\nifunc will only be used with x86-64 CLMUL because the runtime detection\nmethods needed with ARM64 are not compatible with ifunc.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3f1aff9b587fcec6e8369b6110732d15893041a3"},{"sha":"52e987e3f65b16d09cb286861fc955383eb37858","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Rename crc32_aarch64.h to crc32_arm64.h.\n\nEven though the proper name for the architecture is aarch64, this\nproject uses ARM64 throughout. So the rename is for consistency.\n\nAdditionally, crc32_arm64.h was slightly refactored for the following\nchanges:\n\n   * Added MSVC and FreeBSD support for is_arch_extension_supported().\n\n   * crc32_arch_optimized() now checks the size when aligning the\n     buffer.\n\n   * crc32_arch_optimized() loop conditions were slightly modified to\n     avoid both decrementing the size and incrementing the buffer\n     pointer .\n\n   * Use the intrinsic wrappers defined in <arm_acle.h> because GCC and\n     Clang name them differently.\n\n   * Minor spacing and comment changes.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/52e987e3f65b16d09cb286861fc955383eb37858"},{"sha":"aa6c8f5518f8d1d8e6a47b11e009b4cbe42c8de5","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Omit CRC tables when not needed with ARM64 optimizations.\n\nThis is similar to the existing x86-64 CLMUL conditions to omit the\ntables. They were slightly refactored to improve readability.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aa6c8f5518f8d1d8e6a47b11e009b4cbe42c8de5"},{"sha":"8c972db0aa13c863f6ba0468252d7b692e61e809","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Add --disable-arm64-crc32 description to INSTALL.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8c972db0aa13c863f6ba0468252d7b692e61e809"},{"sha":"5b31ca881834c5c81232fbbdfe8fb0cdf76ee79a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Only use ifunc in crcXX_fast.c if its needed.\n\nThe code was using HAVE_FUNC_ATTRIBUTE_IFUNC instead of CRC_USE_IFUNC.\nWith ARM64, ifunc is incompatible because it requires non-inline\nfunction calls for runtime detection.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5b31ca881834c5c81232fbbdfe8fb0cdf76ee79a"},{"sha":"47d55670052822cd89a5d93f8e80432ff2a15ab9","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Check HAVE_USABLE_CLMUL before omitting CRC tables.\n\nIf liblzma is configured with --disable-clmul-crc\nCFLAGS=\"-msse4.1 -mpclmul\", then it will fail to compile because the\ngeneric version must be used but the CRC tables were not included.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/47d55670052822cd89a5d93f8e80432ff2a15ab9"},{"sha":"98bf4f6b229f9f1902cf237cd692f0c7725c74cd","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add macOS ARM64 CPU feature runtime detection.\n\nThis allows the ARM64 CRC32 instruction to be used on macOS when runtime\ndetection is needed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/98bf4f6b229f9f1902cf237cd692f0c7725c74cd"}]},"public":true,"created_at":"2024-01-31T16:24:51Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"35284044733","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":16882219816,"size":9,"distinct_size":9,"ref":"refs/heads/arm64_crc32","head":"1710f258934fe9729ea3458512d5c1a5fb14f2b4","before":"98bf4f6b229f9f1902cf237cd692f0c7725c74cd","commits":[{"sha":"e65ce168fbb5172f8a08132c299229a5bffca713","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Add support for ARM64 CRC32 instruction detection.\n\nThis adds --enable-arm64-crc32/--disable-arm64-crc32 (enabled by\ndefault) for using the ARM64 CRC32 instruction. This can be disabled if\none knows the binary will never need to run on an ARM64 machine\nwith this instruction extension.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e65ce168fbb5172f8a08132c299229a5bffca713"},{"sha":"6fb898c2bc6a8f1b30ae430baf37da995213a521","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add support for ARM64 CRC32 instruction detection.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6fb898c2bc6a8f1b30ae430baf37da995213a521"},{"sha":"a90e974ddc69f2a413d4db3c762bede2422eeda8","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Refactor crc_common.h.\n\nThe CRC_GENERIC is now split into CRC32_GENERIC and CRC64_GENERIC, since\nthe ARM64 optimizations will be different between CRC32 and CRC64.\n\nFor the same reason, CRC_ARCH_OPTIMIZED is split into\nCRC32_ARCH_OPTIMIZED and CRC64_ARCH_OPTIMIZED.\n\nifunc will only be used with x86-64 CLMUL because the runtime detection\nmethods needed with ARM64 are not compatible with ifunc.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a90e974ddc69f2a413d4db3c762bede2422eeda8"},{"sha":"d4cdb43c23786620bd4f4c219a266f84d88a36ce","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Rename crc32_aarch64.h to crc32_arm64.h.\n\nEven though the proper name for the architecture is aarch64, this\nproject uses ARM64 throughout. So the rename is for consistency.\n\nAdditionally, crc32_arm64.h was slightly refactored for the following\nchanges:\n\n   * Added MSVC and FreeBSD support for is_arch_extension_supported().\n\n   * crc32_arch_optimized() now checks the size when aligning the\n     buffer.\n\n   * crc32_arch_optimized() loop conditions were slightly modified to\n     avoid both decrementing the size and incrementing the buffer\n     pointer .\n\n   * Use the intrinsic wrappers defined in <arm_acle.h> because GCC and\n     Clang name them differently.\n\n   * Minor spacing and comment changes.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d4cdb43c23786620bd4f4c219a266f84d88a36ce"},{"sha":"91ccdfc1f216b5c7697ef23bf10945e96ce51133","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Omit CRC tables when not needed with ARM64 optimizations.\n\nThis is similar to the existing x86-64 CLMUL conditions to omit the\ntables. They were slightly refactored to improve readability.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/91ccdfc1f216b5c7697ef23bf10945e96ce51133"},{"sha":"d755e9ecb374b28e6b68f27fd29c4d4fe3e10701","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Add --disable-arm64-crc32 description to INSTALL.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d755e9ecb374b28e6b68f27fd29c4d4fe3e10701"},{"sha":"3d964bb9d79d8d265ed1c1e77246b8396cc35006","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Only use ifunc in crcXX_fast.c if its needed.\n\nThe code was using HAVE_FUNC_ATTRIBUTE_IFUNC instead of CRC_USE_IFUNC.\nWith ARM64, ifunc is incompatible because it requires non-inline\nfunction calls for runtime detection.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/3d964bb9d79d8d265ed1c1e77246b8396cc35006"},{"sha":"384b927e2b54e8a8b8eb51997ad2b7e6f8fd16a1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Check HAVE_USABLE_CLMUL before omitting CRC tables.\n\nIf liblzma is configured with --disable-clmul-crc\nCFLAGS=\"-msse4.1 -mpclmul\", then it will fail to compile because the\ngeneric version must be used but the CRC tables were not included.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/384b927e2b54e8a8b8eb51997ad2b7e6f8fd16a1"},{"sha":"1710f258934fe9729ea3458512d5c1a5fb14f2b4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add macOS ARM64 CPU feature runtime detection.\n\nThis allows the ARM64 CRC32 instruction to be used on macOS when runtime\ndetection is needed.\n\nCloses: https://github.com/tukaani-project/xz/pull/77","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1710f258934fe9729ea3458512d5c1a5fb14f2b4"}]},"public":true,"created_at":"2024-01-31T16:41:08Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
