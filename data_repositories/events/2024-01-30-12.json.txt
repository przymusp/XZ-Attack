{"id":"35240167261","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":16859997848,"size":8,"distinct_size":8,"ref":"refs/heads/arm64_crc32","head":"b3d3c99cb144ae3a9886ccf17bffa68e0795e60a","before":"b1cc0b5a710037deb608d6d3745b3286e1cc06aa","commits":[{"sha":"79959cdea59e578a430dcc6818fca1900eefa8fd","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Add support for ARM64 CRC32 instruction detection.\n\nThis adds --enable_arm64_crc32/--disable_arm64_crc32 (enabled by\ndefault) for using the ARM64 CRC32 instruction. This can be disabled if\none knows the binary will never need to run on an ARM64 machine\nwith this instruction extension.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/79959cdea59e578a430dcc6818fca1900eefa8fd"},{"sha":"ef3c81d5cc4e2ff8d5bbdf753a7aa832b3a25c34","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add support for ARM64 CRC32 instruction detection.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ef3c81d5cc4e2ff8d5bbdf753a7aa832b3a25c34"},{"sha":"a1923e8f53eb525fe91b8e8f63830b88cb697893","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Refactor crc_common.h.\n\nThe CRC_GENERIC is now split into CRC32_GENERIC and CRC64_GENERIC, since\nthe ARM64 optimizations will be different between CRC32 and CRC64.\n\nFor the same reason, CRC_ARCH_OPTIMIZED is split into\nCRC32_ARCH_OPTIMIZED and CRC64_ARCH_OPTIMIZED.\n\nifunc will only be used with x86-64 CLMUL because the runtime detection\nmethods needed with ARM64 are not compatible with ifunc.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a1923e8f53eb525fe91b8e8f63830b88cb697893"},{"sha":"bd998fc3bc26ede832af8b13c2d83fe866fad3c1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Rename crc32_aarch64.h to crc32_arm64.h.\n\nEven though the proper name for the architecture is aarch64, this\nproject uses ARM64 throughout. So the rename is for consistency.\n\nAdditionally, crc32_arm64.h was slightly refactored for the following\nchanges:\n\n   * Added MSVC and FreeBSD support for is_arch_extension_supported().\n\n   * crc32_arch_optimized() now checks the size when aligning the\n     buffer.\n\n   * crc32_arch_optimized() loop conditions were slightly modified to\n     avoid both decrementing the size and incrementing the buffer\n     pointer .\n\n   * Use the intrinsic wrappers defined in <arm_acle.h> because GCC and\n     Clang name them differently.\n\n   * Minor spacing and comment changes.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bd998fc3bc26ede832af8b13c2d83fe866fad3c1"},{"sha":"9dd3747c43758188eec70847a93fc83da47e2f0a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Omit CRC tables when not needed with ARM64 optimizations.\n\nThis is similar to the existing x86-64 CLMUL conditions to omit the\ntables. They were slightly refactored to improve readability.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9dd3747c43758188eec70847a93fc83da47e2f0a"},{"sha":"d6f75bf111edc12bb74bb6dbda6ac324519e7c5c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Add --disable-arm64-crc32 description to INSTALL.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d6f75bf111edc12bb74bb6dbda6ac324519e7c5c"},{"sha":"e070b2d6a1e1d2ae68afafaa5d972cd16d1881f8","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Only use ifunc in crcXX_fast.c if its needed.\n\nThe code was using HAVE_FUNC_ATTRIBUTE_IFUNC instead of CRC_USE_IFUNC.\nWith ARM64, ifunc is incompatible because it requires non-inline\nfunction calls for runtime detection.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e070b2d6a1e1d2ae68afafaa5d972cd16d1881f8"},{"sha":"b3d3c99cb144ae3a9886ccf17bffa68e0795e60a","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Check HAVE_USABLE_CLMUL before omitting CRC tables.\n\nIf liblzma is configured with --disable-clmul-crc\nCFLAGS=\"-msse4.1 -mpclmul\", then it will fail to compile because the\ngeneric version must be used but the CRC tables were not included.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b3d3c99cb144ae3a9886ccf17bffa68e0795e60a"}]},"public":true,"created_at":"2024-01-30T12:51:15Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
