{"id":"32977707592","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15634721930,"size":34,"distinct_size":34,"ref":"refs/heads/v5.4_dev","head":"7bc814ddef659befe7000eca86bba23a8fe9efcd","before":"623e34c14a9d050c76d64e84ab81c5f167058aa7","commits":[{"sha":"5be6275f19784cdd5a954f0188045c8ff4934d54","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Bump maximum policy version to 3.27.\n\nThere are several new policies. CMP0149 may affect the Windows SDK\nversion that CMake will choose by default. The new behavior is more\npredictable, always choosing the latest SDK version by default.\n\nThe other new policies shouldn't affect this package.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5be6275f19784cdd5a954f0188045c8ff4934d54"},{"sha":"1595f454d5c8257c668cccd6a86dd68175d5c430","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add a comment about threads on Cygwin.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1595f454d5c8257c668cccd6a86dd68175d5c430"},{"sha":"b7ce6e80786fc0c08ed129e8ee262ea96a5473a1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Wrap two overlong lines that are possible to wrap.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b7ce6e80786fc0c08ed129e8ee262ea96a5473a1"},{"sha":"660c8c29e57d30dbd5009ef1f0ec1bbe195ccef6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Windows: Don't (de)compress to special files like \"con\" or \"nul\".\n\nBefore this commit, the following writes \"foo\" to the\nconsole and deletes the input file:\n\n    echo foo | xz > con_xz\n    xz --suffix=_xz --decompress con_xz\n\nIt cannot happen without --suffix because names like con.xz\nare also special and so attempting to decompress con.xz\n(or compress con to con.xz) will already fail when opening\nthe input file.\n\nSimilar thing is possible when compressing. The following\nwrites to \"nul\" and the input file \"n\" is deleted.\n\n    echo foo | xz > n\n    xz --suffix=ul n\n\nNow xz checks if the destination is a special file before\ncontinuing. DOS/DJGPP version had a check for this but\nWindows (and OS/2) didn't.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/660c8c29e57d30dbd5009ef1f0ec1bbe195ccef6"},{"sha":"4ae13cfe0dedb8ddc3cf9ded8cd1ac09361b3bd1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"sysdefs.h: Update the comment about __USE_MINGW_ANSI_STDIO.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4ae13cfe0dedb8ddc3cf9ded8cd1ac09361b3bd1"},{"sha":"46cb133ce7360496eecca1255b364c05f0205855","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Remove /lib from tests include path.\n\nThe tests never included anything from /lib, so this was not needed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/46cb133ce7360496eecca1255b364c05f0205855"},{"sha":"edec253e418562f3164a01ecc8805295fa022efa","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Remove Gnulib dependency from tests.\n\nThe tests do not use any Gnulib replacements so they do not need to link\nlibgnu.a or have /lib in the include path.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/edec253e418562f3164a01ecc8805295fa022efa"},{"sha":"7dd57f2f2c8fde93fa42b4dbf6d9860717723b41","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Silence Autoconf warning.\n\nThere was a use of AC_COMPILE_IFELSE that didn't use\nAC_LANG_SOURCE and Autoconf warned about this. The omission\nhad been intentional but it turned out that this didn't do\nwhat I thought it would.\n\nAutoconf 2.71 manual gives an impression that AC_LANG_SOURCE\ninserts all #defines that have been made with AC_DEFINE so\nfar (confdefs.h). The idea was that omitting AC_LANG_SOURCE\nwould mean that only the exact code included in the\nAC_COMPILE_IFELSE call would be compiled.\n\nWith C programs this is not true: the #defines get added without\nAC_LANG_SOURCE too. There seems to be no neat way to avoid this.\nThus, with the C language at least, adding AC_LANG_SOURCE makes\nno other difference than silencing a warning from Autoconf. The\ngenerated \"configure\" remains identical. (Docs of AC_LANG_CONFTEST\nsay that the #defines have been inserted since Autoconf 2.63b and\nthat AC_COMPILE_IFELSE uses AC_LANG_CONFTEST. So the behavior is\ndocumented if one also reads the docs of macros that one isn't\ncalling directly.)\n\nAny extra code, including #defines, can cause problems for\nthese two tests because these tests must use -Werror.\nCC=clang CFLAGS=-Weverything is the most extreme example.\nIt enables -Wreserved-macro-identifier which warns about\nIt's possible to write a test file that passes -Weverything but\nit becomes impossible when Autoconf inserts confdefs.h.\n\nSo this commit adds AC_LANG_SOURCE to silence Autoconf warnings.\nA different solution is needed for -Werror tests.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7dd57f2f2c8fde93fa42b4dbf6d9860717723b41"},{"sha":"f3c32762ae309afa2fe330e7fb397acfdedc4d37","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Fix underquoted AC_LANG_SOURCE.\n\nIt made no practical difference in this case.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f3c32762ae309afa2fe330e7fb397acfdedc4d37"},{"sha":"dce95a593e6cd9779110aa1e314abd8b35c75f6b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Update the comment about -Werror usage in checks.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dce95a593e6cd9779110aa1e314abd8b35c75f6b"},{"sha":"1bce6fe48334b5df33d0487a9cbe41950122230e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Avoid compiler warning without creating extra symbol.\n\nWhen the generic fast crc64 method is used, then we omit\nlzma_crc64_table[][].\n\nThe C standards don't allow an empty translation unit which can be\navoided by declaring something, without exporting any symbols.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1bce6fe48334b5df33d0487a9cbe41950122230e"},{"sha":"38171492ded6426ddf53d0c200fa8c93fcd02a60","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Fix Windows build with Clang/LLVM 17.\n\nllvm-windres 17.0.0 has more accurate emulation of GNU windres, so\nthe hack for GNU windres must now be used with llvm-windres too.\n\nLLVM 16.0.6 has the old behavior and there likely won't be more\n16.x releases. So we can simply check for >= 17.0.0.\n\nThe workaround must not be used with Clang that is acting in\nMSVC mode. This checks for the known environments that need\nthe workaround instead of using \"NOT MSVC\".\n\nSee also:\nhttps://github.com/llvm/llvm-project/commit/2bcc0fdc58a220cb9921b47ec8a32c85f2511a47","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/38171492ded6426ddf53d0c200fa8c93fcd02a60"},{"sha":"8fdc71a27d07b10a3da52432432e080b6d577642","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Rename xz and man page symlink custom targets.\n\nThe Ninja Generator for CMake cannot have a custom target and its\nBYPRODUCTS have the same name. This has prevented Ninja builds on\nUnix-like systems since the xz symlinks were introduced in\n80a1a8bb838842a2be343bd88ad1462c21c5e2c9.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8fdc71a27d07b10a3da52432432e080b6d577642"},{"sha":"1824a6007cb1c8d5d7abcc7bf649148bc06fa72c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1824a6007cb1c8d5d7abcc7bf649148bc06fa72c"},{"sha":"4cc91ceb3992ef4f51302b56178c3b2c2aeaaaad","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Update visibility.m4 from Gnulib.\n\nUpdating from version 6 -> 8 from upstream. Declarations for variables\nand function bodies were added to avoid unnecessary failures with\n-Werror.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/4cc91ceb3992ef4f51302b56178c3b2c2aeaaaad"},{"sha":"9e14743ee5ba79181076bc33952245d5b18fbc58","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib_integer: Add missing write64be and write64le fallback functions.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9e14743ee5ba79181076bc33952245d5b18fbc58"},{"sha":"5056bc51071d1a07097c5667a0d5bd85242e31b9","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib_integer: Revise unaligned reads and writes on strict-align archs.\n\nIn XZ Utils context this doesn't matter much because\nunaligned reads and writes aren't used in hot code\nwhen TUKLIB_FAST_UNALIGNED_ACCESS isn't #defined.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5056bc51071d1a07097c5667a0d5bd85242e31b9"},{"sha":"1695021e4a233a9388ddd428654c1447f0ea3bfb","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Add ALLOW_CLMUL_CRC option to enable/disable CLMUL.\n\nThe option is enabled by default, but will only be visible to a user\nlisting cache variables or using a CMake GUI application if the\nimmintrin.h header file is found.\n\nThis mirrors our Autotools build --disable-clmul-crc functionality.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1695021e4a233a9388ddd428654c1447f0ea3bfb"},{"sha":"f8edcf3da689aad4b21e139197725450f2c456a0","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Use FATAL_ERROR if user-supplied options aren't understood.\n\nThis way typos are caught quickly and compounding error messages\nare avoided (a single typo could cause more than one error).\n\nThis keeps using SEND_ERROR when the system is lacking a feature\n(like threading library or sandboxing method). This way the whole\nconfiguration log will be generated in case someone wishes to\nreport a problem upstream.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/f8edcf3da689aad4b21e139197725450f2c456a0"},{"sha":"7d01de67ee3dd76cfc12c23220e2e4cdc59708f1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Edit threading related messages.\n\nIt's mostly to change from \"thread method\" to \"threading method\".","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7d01de67ee3dd76cfc12c23220e2e4cdc59708f1"}]},"public":true,"created_at":"2023-10-31T10:49:24Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
