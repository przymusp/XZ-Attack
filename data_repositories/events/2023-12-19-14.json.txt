{"id":"34282198767","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":16338984194,"size":158,"distinct_size":9,"ref":"refs/heads/riscv_filter","head":"888d752ae0bd399eb9e716a0029218692badd1e7","before":"f32f55ec8a005b5b92463365a21c686d1ab50ecd","commits":[{"sha":"cfd1054b9b539ee92524901e95d7bb5a1fe670a0","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: Don't #include <unistd.h>.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cfd1054b9b539ee92524901e95d7bb5a1fe670a0"},{"sha":"c4edd367678e6a38c42b149856159bf417da7fe1","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xzdec: Use _fileno and _setmode.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c4edd367678e6a38c42b149856159bf417da7fe1"},{"sha":"d14bba8fc2be02a9fed8c9bcaaf61103451755f8","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _fileno() instead of fileno().","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d14bba8fc2be02a9fed8c9bcaaf61103451755f8"},{"sha":"e241051f50044259d174e8b4633dd9a1c4478408","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _isatty() from <io.h> to implement isatty().","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e241051f50044259d174e8b4633dd9a1c4478408"},{"sha":"5c6f892d411670e3060f4bc309402617a209e57c","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _stricmp() instead of strcasecmp() in suffix.c.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5c6f892d411670e3060f4bc309402617a209e57c"},{"sha":"c660b8d78b7bda43b12b285550d8c70e8ccec698","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Use GetTickCount64() to implement mytime_now().\n\nIt's available since Windows Vista.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c660b8d78b7bda43b12b285550d8c70e8ccec698"},{"sha":"79334e7f20f2bf9e0de095835b48868f1238f584","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.\n\nThanks to Kelvin Lee for the original patches\nand testing the modifications I made.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/79334e7f20f2bf9e0de095835b48868f1238f584"},{"sha":"189f72581329ab281ad6af37f60135910cb1b146","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/189f72581329ab281ad6af37f60135910cb1b146"},{"sha":"90c94dddfd57b7d744bfad64c54e10d15778144b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.\n\nThis makes no difference for GCC or Clang as they support\nGNU C's __attribute__((__noreturn__)) but this helps with MSVC:\n\n  - VS 2019 version 16.7 and later support _Noreturn if the\n    options /std:c11 or /std:c17 are used. This gets handled\n    with the check for __STDC_VERSION__ >= 201112.\n\n  - When MSVC isn't in C11/C17 mode, __declspec(noreturn) is used.\n\nC23 will deprecate _Noreturn (and <stdnoreturn.h>)\nfor [[noreturn]]. This commit anticipates that but\nthe final __STDC_VERSION__ value isn't known yet.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/90c94dddfd57b7d744bfad64c54e10d15778144b"},{"sha":"74b0e900c92d5b222b36f474f1efa431f8e262f7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit -Wc99-c11-compat since it warns about _Noreturn.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/74b0e900c92d5b222b36f474f1efa431f8e262f7"},{"sha":"18a66fbac031c98f9c2077fc88846e4d07849197","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove incorrect uses of __attribute__((__malloc__)).\n\nxrealloc() is obviously incorrect, modern GCC docs even\nmention realloc() as an example where this attribute\ncannot be used.\n\nliblzma's lzma_alloc() and lzma_alloc_zero() would be\ncorrect uses most of the time but custom allocators\nmay use a memory pool or otherwise hold the pointer\nso aliasing issues could happen in theory.\n\nThe xstrdup() case likely was correct but I removed it anyway.\nNow there are no __malloc__ attributes left in the code.\nThe allocations aren't in hot paths so this should make\nno practical difference.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/18a66fbac031c98f9c2077fc88846e4d07849197"},{"sha":"217958d88713b5dc73d366d24dd64b2b311b86fe","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.\n\nFor compatibility with C23's [[noreturn]], tuklib_attr_noreturn\nmust be at the beginning of declaration (before \"extern\" or\n\"static\", and even before any GNU C's __attribute__).\n\nThis commit also moves all other function attributes to\nthe beginning of function declarations. \"extern\" is kept\nat the beginning of a line so the attributes are listed on\nseparate lines before \"extern\" or \"static\".","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/217958d88713b5dc73d366d24dd64b2b311b86fe"},{"sha":"ee7709bae53637e1765ce142ef102914f1423cb5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Move a few __attribute__ uses in function declarations.\n\nThe API headers have many attributes but these were left\nas is for now.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ee7709bae53637e1765ce142ef102914f1423cb5"},{"sha":"aa0cd585d2ed1455d35732798e0d90e3520e8ba5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Doxygen: Add more C macro names to PREDEFINED.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aa0cd585d2ed1455d35732798e0d90e3520e8ba5"},{"sha":"aff1b479c7b168652bd20305ceed4317d5db6661","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"lib/getopt*.c: Include <config.h> only HAVE_CONFIG_H is defined.\n\nThe CMake-based build doesn't use config.h.\n\nUp-to-date getopt_long in Gnulib is LGPLv2 so at some\npoint it could be included in XZ Utils too but for now\nthis commit is enough to make CMake-based build possible.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aff1b479c7b168652bd20305ceed4317d5db6661"},{"sha":"e3288fdb45c580cb849f6799cf419c4922004ae5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Bump maximum policy version to 3.27.\n\nThere are several new policies. CMP0149 may affect the Windows SDK\nversion that CMake will choose by default. The new behavior is more\npredictable, always choosing the latest SDK version by default.\n\nThe other new policies shouldn't affect this package.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e3288fdb45c580cb849f6799cf419c4922004ae5"},{"sha":"af66cd585902045e5689a0418103ec81f19f1d0a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for replacement getopt_long (lib/getopt*).\n\nThanks to Jia Tan for the initial work. I added the libgnu target\nand made a few related minor edits.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/af66cd585902045e5689a0418103ec81f19f1d0a"},{"sha":"8c2d197c940d246849b2ec48109bb22e54036927","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: #define inline and restrict only when needed.\n\nThis also drops the check for _WIN32 as that shouldn't be needed.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8c2d197c940d246849b2ec48109bb22e54036927"},{"sha":"daea64d158a7151ca6c255a0e4554c6d521cd589","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Allow building xz with Visual Studio 2015 and later.\n\nBuilding the command line tools xz and xzdec with the combination\nof CMake + Visual Studio 2015/2017/2019/2022 works now.\n\nVS2013 update 2 should still be able to build liblzma.\nVS2013 cannot build the xz command line tool because xz\nneeds snprintf() that roughly conforms to C99.\nVS2013 is old and no extra code will be added to support it.\n\nThanks to Kelvin Lee and Jia Tan for testing.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/daea64d158a7151ca6c255a0e4554c6d521cd589"},{"sha":"edd563daf0da1d00018684614803c77ab62efcd6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Require VS2015 or later for building xzdec.\n\nxzdec might build with VS2013 but it hasn't been tested.\nIt was never supported before and VS2013 is old anyway\nso for simplicity only liblzma is supported with VS2013.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/edd563daf0da1d00018684614803c77ab62efcd6"}]},"public":true,"created_at":"2023-12-19T14:23:02Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
