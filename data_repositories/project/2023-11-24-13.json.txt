{"id":"33600747896","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15953995379,"size":6,"distinct_size":6,"ref":"refs/heads/ifunc_detect_fix","head":"81399dcd262b0b06d82738257d9cc0beb9d3ac75","before":"b7b157b65c142b237f9c3179977faa780473b343","commits":[{"sha":"505238bac9b08f91e23b968d73aa7a98c28ead01","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Change __attribute__((__ifunc__())) detection.\n\nBefore, if the compiler supported __attribute__((__ifunc__())) but the\ndynamic linker did not then it was possible to create a broken liblzma.\nThis is possible with libc implementations that do not support the\nnecessary relocation type required by ifuncs, such as musl.\n\nNow, ALLOW_ATTR_IFUNC has three accepted values:\n\n    - auto. This is the default. This will try to detect linker support\n      by testing the system type and if Linux testing the macros defined\n      by libc. Then it will try to compile a simple feature test to\n      check if the compiler supports the attribute.\n\n    - ON. This skips the system test performed by auto mode. This throws an\n      error if the compiler does not support ifunc since users setting this\n      flag likely need to know this.\n\n    - OFF. This disables ifunc support completely.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/505238bac9b08f91e23b968d73aa7a98c28ead01"},{"sha":"8017173f2bbb6840f072299694c21ca870d49f7c","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CMake: Use consistent indentation with check_c_source_compiles().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8017173f2bbb6840f072299694c21ca870d49f7c"},{"sha":"9324e8c10c617ef9a1152f030f6b63673ca7294d","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Build: Change --enable-ifunc handling.\n\nThe default value for enable_ifunc is auto, which performs the system\ntest to be sure we are on GNU/Linux or FreeBSD. Setting --enable-ifunc\nduring configure will override the system test and only do the compiler\ntest.\n\nDisabling ifunc with --disable-ifunc is still supported and will skip\nboth the compiler and system tests and not allow ifunc usage.\n\nSimilar to CMake, if --enable-func is used but the compiler does not\nsupport __attribute__((__ifunc__())) then the configuration will fail\nand provide an error message.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/9324e8c10c617ef9a1152f030f6b63673ca7294d"},{"sha":"6beb487331199bef44933f1c6788665e5c5a1796","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Update INSTALL for --enable_ifunc change.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/6beb487331199bef44933f1c6788665e5c5a1796"},{"sha":"99c69d433df255241204b79ca13a2b01b79b88fd","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Allow ci_build.sh to set a different C compiler.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/99c69d433df255241204b79ca13a2b01b79b88fd"},{"sha":"81399dcd262b0b06d82738257d9cc0beb9d3ac75","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Test musl libc builds on Ubuntu runner.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/81399dcd262b0b06d82738257d9cc0beb9d3ac75"}]},"public":true,"created_at":"2023-11-24T13:56:12Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
