{"id":"27214875419","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/36","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/events","html_url":"https://github.com/tukaani-project/xz/issues/36","id":1590668850,"node_id":"I_kwDOIQBEvs5ez64y","number":36,"title":"[Bug]: Undefined behavior: NULL + 0","user":{"login":"QrczakMK","id":8471716,"node_id":"MDQ6VXNlcjg0NzE3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/8471716?v=4","gravatar_id":"","url":"https://api.github.com/users/QrczakMK","html_url":"https://github.com/QrczakMK","followers_url":"https://api.github.com/users/QrczakMK/followers","following_url":"https://api.github.com/users/QrczakMK/following{/other_user}","gists_url":"https://api.github.com/users/QrczakMK/gists{/gist_id}","starred_url":"https://api.github.com/users/QrczakMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QrczakMK/subscriptions","organizations_url":"https://api.github.com/users/QrczakMK/orgs","repos_url":"https://api.github.com/users/QrczakMK/repos","events_url":"https://api.github.com/users/QrczakMK/events{/privacy}","received_events_url":"https://api.github.com/users/QrczakMK/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-02-19T12:23:49Z","updated_at":"2023-02-20T20:26:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Describe the bug\r\n\r\nWhen given empty buffers with `next_in == NULL` and `avail_in == 0` (or same for `out`), liblzma sometimes computes `NULL + 0`, which has undefined behavior in C (it is defined in C++).\r\n\r\nThis gets detected by ubsan.\r\n\r\nThe following places are affected (possibly more):\r\n\r\nhttps://github.com/tukaani-project/xz/blob/913ddc5572b9455fa0cf299be2e35c708840e922/src/liblzma/common/common.c#L291-L297\r\nThe first 3 lines can be guarded with `if (in_pos != 0)`, the last 3 lines can be guarded with `if (out_pos != 0)`.\r\n\r\nhttps://github.com/tukaani-project/xz/blob/75f1a6c26df4ce329da0882786403e3ccf5cd898/src/liblzma/common/block_encoder.c#L81\r\nWrite `in_start != 0 ? in + in_start : in`.\r\n\r\n### Version\r\n\r\n5.4.1\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Relevant log output\r\n\r\n_No response_","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/36/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/36/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1437514247","html_url":"https://github.com/tukaani-project/xz/issues/36#issuecomment-1437514247","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/36","id":1437514247,"node_id":"IC_kwDOIQBEvs5VrroH","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-02-20T20:26:52Z","updated_at":"2023-02-20T20:26:52Z","author_association":"MEMBER","body":"I have read about this a bit now. Sounds like it probably needs to be fixed. Quite a few functions have to be reviewed to spot all such cases as there definitely are more than those you already found. XZ Embedded needs to be reviewed too.\r\n\r\nAt least with a trivial test program, the method in `in_start != 0 ? in + in_start : in;` seems to be optimized to the same code as `in + in_start`, at least with modern GCC and Clang. So there won't be an extra branch in reality.\r\n\r\nTo me this seems like a bug in the standard that could have been fixed by adding an extra sentence to explicitly allow null-pointer + 0. Based on search engine results, it seems that it was decided that it's better to change hundreds of codebases instead, hopefully spotting every problematic case. Feels a bit similar to the `memcpy(NULL, NULL, 0)` issue that was (hopefully) fixed in XZ Utils in 2019.\r\n\r\nThanks for reporting this!","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1437514247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-20T20:26:52Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"27215249629","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/events","html_url":"https://github.com/tukaani-project/xz/pull/32","id":1574672110,"node_id":"PR_kwDOIQBEvs5Jcyc6","number":32,"title":"Detect symver attribute support","user":{"login":"vfazio","id":5265893,"node_id":"MDQ6VXNlcjUyNjU4OTM=","avatar_url":"https://avatars.githubusercontent.com/u/5265893?v=4","gravatar_id":"","url":"https://api.github.com/users/vfazio","html_url":"https://github.com/vfazio","followers_url":"https://api.github.com/users/vfazio/followers","following_url":"https://api.github.com/users/vfazio/following{/other_user}","gists_url":"https://api.github.com/users/vfazio/gists{/gist_id}","starred_url":"https://api.github.com/users/vfazio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfazio/subscriptions","organizations_url":"https://api.github.com/users/vfazio/orgs","repos_url":"https://api.github.com/users/vfazio/repos","events_url":"https://api.github.com/users/vfazio/events{/privacy}","received_events_url":"https://api.github.com/users/vfazio/received_events","type":"User","site_admin":false},"labels":[{"id":4687621022,"node_id":"LA_kwDOIQBEvs8AAAABF2drng","url":"https://api.github.com/repos/tukaani-project/xz/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":5016626567,"node_id":"LA_kwDOIQBEvs8AAAABKwOlhw","url":"https://api.github.com/repos/tukaani-project/xz/labels/5.4.2","name":"5.4.2","color":"006b75","default":false,"description":"Item earmarked for 5.4.2 release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2023-02-07T16:47:02Z","updated_at":"2023-02-20T20:56:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/32","html_url":"https://github.com/tukaani-project/xz/pull/32","diff_url":"https://github.com/tukaani-project/xz/pull/32.diff","patch_url":"https://github.com/tukaani-project/xz/pull/32.patch","merged_at":null},"body":"On Microblaze builds will fail when trying to add symver information because  `__attribute__((symver ..))` is not supported even though `__has_attribute(__symver__)` returns true.\r\n\r\nSupport for symver needs to be detected via a compile test since `__has_attribute` can report false positives [0].\r\n\r\nAdd a configure compile check for `__attribute__((symver ..))` to ensure it is supported and define a variable to advertise support.\r\n\r\n[0] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766#c1\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [ ] Build was run locally and without warnings or errors\r\n- [ ] All previous and new tests pass\r\n\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other (please describe): \r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\nbuilds targeting the microblaze fail\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\n- Builds now succeed\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI tested compiles via GCC 12 and 9 for x86_64 and microblaze targets and didn't encounter issues.\r\n\r\n<!-- Any other information that is important to this PR. -->","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/32/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1437534919","html_url":"https://github.com/tukaani-project/xz/pull/32#issuecomment-1437534919","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/32","id":1437534919,"node_id":"IC_kwDOIQBEvs5VrwrH","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-02-20T20:56:48Z","updated_at":"2023-02-20T20:56:48Z","author_association":"MEMBER","body":"Fixing GCC would be the best but I guess the current GCC versions have to be supported for some time anyway.\r\n\r\nI have understood that MicroBlaze is for embedded use so I feel quite OK by making it a special case. The way symbol versioning is used in XZ Utils means that the downsides are very small: it sounds fairly unlikely that the issues caused by the patch from RHEL/CentOS 7 would affect MicroBlaze use cases. So the solution I committed is specific to XZ Utils and not trivially usable for other projects.\r\n\r\nChecking for features is obviously better most of the time (instead of checking for CPU/OS/whatever) so in general I don't disagree with you. In this case I feel the problem likely exists on just one platform and a generic test would be more complex than what is currently used on other platforms. If there is a bug in the test for the `__symver__` attribute, then LTO builds can silently break if the fallback is `asm(\".symver ...\")` or the compatibility symbols may silently be missing if the fallback is to use `liblzma_generic.map`. The method I committed has lower risk and it's simpler too.\r\n\r\nI plan to put the workaround in 5.4.2 and also 5.2.11 at the same time, whenever a new bugfix release will be made. Before that, it's safe to use the commit with both 5.2.10 and 5.4.1.\r\n\r\nIf GCC is fixed this year, perhaps this workaround can be omitted 2-3 years later when a new major release of XZ Utils is made.\r\n\r\nThanks for reporting the problem and testing!","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1437534919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-20T20:56:48Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
