{"id":"31867893284","type":"PushEvent","actor":{"id":133907478,"login":"hansjans162","display_login":"hansjans162","gravatar_id":"","url":"https://api.github.com/users/hansjans162","avatar_url":"https://avatars.githubusercontent.com/u/133907478?"},"repo":{"id":657271419,"name":"hansjans162/xz","url":"https://api.github.com/repos/hansjans162/xz"},"payload":{"repository_id":657271419,"push_id":15058694416,"size":105,"distinct_size":105,"ref":"refs/heads/master","head":"953e775941a25bfcfa353f802b13e66acb1edf2c","before":"dbb3a536ed9873ffa0870321f6873e564c6a9da8","commits":[{"sha":"23b5c36fb71904bfbe16bb20f976da38dadf6c3b","author":{"email":"hansjansen162@outlook.com","name":"Hans Jansen"},"message":"Add ifunc check to configure.ac\n\nconfigure.ac will now verify if __attribute__((__ifunc__())) can be used in\nthe build system. If so, HAVE_FUNC_ATTRIBUTE_IFUNC will be defined to 1.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/23b5c36fb71904bfbe16bb20f976da38dadf6c3b"},{"sha":"b72d21202402a603db6d512fb9271cfa83249639","author":{"email":"hansjansen162@outlook.com","name":"Hans Jansen"},"message":"Add ifunc check to CMakeLists.txt\n\nCMake build system will now verify if __attribute__((__ifunc__())) can be\nused in the build system. If so, HAVE_FUNC_ATTRIBUTE_IFUNC will be\ndefined to 1.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/b72d21202402a603db6d512fb9271cfa83249639"},{"sha":"ee44863ae88e377a5df10db007ba9bfadde3d314","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add ifunc implementation to crc64_fast.c.\n\nThe ifunc method avoids indirection via the function pointer\ncrc64_func. This works on GNU/Linux and probably on FreeBSD too.\nThe previous __attribute((__constructor__)) method is kept for\ncompatibility with ELF platforms which do support ifunc.\n\nThe ifunc method has some limitations, for example, building\nliblzma with -fsanitize=address will result in segfaults.\nThe configure option --disable-ifunc must be used for such builds.\n\nThanks to Hans Jansen for the original patch.\nCloses: https://github.com/tukaani-project/xz/pull/53","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/ee44863ae88e377a5df10db007ba9bfadde3d314"},{"sha":"23fb9e3a329117c2968c1e7388b6ef07c782dba1","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Rename CHECK_ATTR_IFUNC to ALLOW_ATTR_IFUNC.\n\nIt's so that there's a clear difference in wording compared\nto liblzma's integrity check types.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/23fb9e3a329117c2968c1e7388b6ef07c782dba1"},{"sha":"b4cf7a2822e8d30eb2b12a1a07fd04383b10ade3","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Minor tweaks to style and comments.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/b4cf7a2822e8d30eb2b12a1a07fd04383b10ade3"},{"sha":"3d1fdddf92321b516d55651888b9c669e254634e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Docs: Document the configure option --disable-ifunc in INSTALL.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/3d1fdddf92321b516d55651888b9c669e254634e"},{"sha":"86118ea320f867e09e98a8682cc08cbbdfd640e2","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/86118ea320f867e09e98a8682cc08cbbdfd640e2"},{"sha":"596ee722cd7ddf0afae584fc06365adc0e735977","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Upgrade checkout action from v2 to v3.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/596ee722cd7ddf0afae584fc06365adc0e735977"},{"sha":"45e250a9e9f3c3e8e8af2983366b170bf54f890e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Add test with -fsanitize=address,undefined.\n\nci_build.sh was updated to accept disabling of __attribute__ ifunc\nand CLMUL. This will allow -fsanitize=address to pass because ifunc\nis incompatible with -fsanitize=address. The CLMUL implementation has\noptimizations that potentially read past the buffer and mask out the\nunwanted bytes.\n\nThis test will only run on Autotools Linux.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/45e250a9e9f3c3e8e8af2983366b170bf54f890e"},{"sha":"e3356a204c5ae02db3ec4552b6c1be354e9b6142","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent warning for MSYS2 Windows build.\n\nIn lzma_memcmplen(), the <intrin.h> header file is only included if\n_MSC_VER and _M_X64 are both defined but _BitScanForward64() was\npreviously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but\nnot _MSC_VER so _BitScanForward64() was used without including\n<intrin.h>.\n\nNow, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as\nexpected.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/e3356a204c5ae02db3ec4552b6c1be354e9b6142"},{"sha":"78704f36e74205857c898a351c757719a6c8b666","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent uninitialzed warning in mt stream encoder.\n\nThis change only impacts the compiler warning since it was impossible\nfor the wait_abs struct in stream_encode_mt() to be used before it was\ninitialized since mythread_condtime_set() will always be called before\nmythread_cond_timedwait().\n\nSince the mythread.h code is different between the POSIX and\nWindows versions, this warning was only present on Windows builds.\n\nThanks to Arthur S for reporting the warning and providing an initial\npatch.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/78704f36e74205857c898a351c757719a6c8b666"},{"sha":"fe3bd438fb119f9bad3f08dc29d331e4956196e1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_block_header.\n\ntest_block_header was not properly freeing the filter options between\ncalls to lzma_block_header_decode(). The memory leaks were discovered by\nusing -fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/fe3bd438fb119f9bad3f08dc29d331e4956196e1"},{"sha":"66bdcfa85fef2911cc80f5f30fed3f9610faccb4","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_index.\n\nSeveral tests were missing calls to lzma_index_end() to clean up the\nlzma_index structs. The memory leaks were discovered by using\n-fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/66bdcfa85fef2911cc80f5f30fed3f9610faccb4"},{"sha":"3aca4f629cd577f0c54f594d5d88722edf0b0413","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Vietnamese translation.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/3aca4f629cd577f0c54f594d5d88722edf0b0413"},{"sha":"17f8844e6fc355abf997d77637a7447c4f7bbcbd","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Remove non-portable empty initializer.\n\nCommit 78704f36e74205857c898a351c757719a6c8b666 added an empty\ninitializer {} to prevent a warning. The empty initializer is a GNU\nextension and results in a build failure on MSVC. The -wpedantic flag\nwarns about empty initializers.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/17f8844e6fc355abf997d77637a7447c4f7bbcbd"},{"sha":"80a6b9bcad016c99c9ba3f3eeb4a619fcadfd357","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Translations: Update the Chinese (traditional) translation.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/80a6b9bcad016c99c9ba3f3eeb4a619fcadfd357"},{"sha":"2c189bb00af73dc7ba1a67a9d274d5be03ee3a88","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Improve feature testing for skipping.\n\nFixed a bug where test_compress_* would all fail if arm64 or armthumb\nfilters were enabled for compression but arm was disabled. Since the\ngrep tests only checked for \"define HAVE_ENCODER_ARM\", this would match\non HAVE_ENCODER_ARM64 or HAVE_ENCODER_ARMTHUMB.\n\nNow the config.h feature test requires \" 1\" at the end to prevent the\nprefix problem. have_feature() was also updated for this even though\nthere were known current bugs affecting it. This is just in case future\nfeatures have a similar prefix problem.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/2c189bb00af73dc7ba1a67a9d274d5be03ee3a88"},{"sha":"9ded880a0221f4d1256845fc4ab957ffd377c760","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Add --filters option to CLI.\n\nThe --filters option uses the new lzma_str_to_filters() function\nto convert a string into a full filter chain. Using this option\nwill reset all previous filters set by --preset, --[filter], or\n--filters.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/9ded880a0221f4d1256845fc4ab957ffd377c760"},{"sha":"5f3b898d07cc9b7160c7c88b3120b7edabb8a5b0","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"xz: Update --long-help and man page for new --filters option.","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/5f3b898d07cc9b7160c7c88b3120b7edabb8a5b0"},{"sha":"a6583726e5f950278f96abcf79c04f1056810be6","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Use new --filters option in test_compress.sh","distinct":true,"url":"https://api.github.com/repos/hansjans162/xz/commits/a6583726e5f950278f96abcf79c04f1056810be6"}]},"public":true,"created_at":"2023-09-15T15:20:45Z"}
