{"id":"32878818055","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15581654173,"size":14,"distinct_size":14,"ref":"refs/heads/w32_update","head":"c25f546f71a4041e8c187ad524308d70f67c8129","before":"680c8a237db6978bb01c762b444c1a5205feb428","commits":[{"sha":"08d12595f486890cf601b87f36ee0ddbce57728e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Change one CMAKE_CURRENT_SOURCE_DIR to CMAKE_CURRENT_LIST_DIR.\n\nIn this case they have identical values.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/08d12595f486890cf601b87f36ee0ddbce57728e"},{"sha":"80e0750e3996c1c659e972ce9cf789ca2e99f702","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Create liblzma.def when building liblzma.dll with MinGW-w64.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/80e0750e3996c1c659e972ce9cf789ca2e99f702"},{"sha":"a7d1b2825c49dc83f1910eeb8ba0f1dfbd886d91","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add Cflags.private to liblzma.pc.in for MSYS2.\n\nIt properly adds -DLZMA_API_STATIC when compiling code that\nwill be linked against static liblzma. Having it there on\nsystems other than Windows does no harm.\n\nSee: https://www.msys2.org/docs/pkgconfig/","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a7d1b2825c49dc83f1910eeb8ba0f1dfbd886d91"},{"sha":"2add71966f891d315105d6245f724ed4f43a4eff","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Rearrange the PACKAGE_ variables.\n\nThe windres workaround now replaces spaces with \\x20 so\nthe package name isn't repeated.\n\nThese changes will help with creation of liblzma.pc.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2add71966f891d315105d6245f724ed4f43a4eff"},{"sha":"1bc548b8210366e44ba35b0b11577a8e328c1228","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Generate and install liblzma.pc if not using MSVC.\n\nAutotools based build uses -pthread and thus adds it to Libs.private\nin liblzma.pc. CMake doesn't use -pthread at all if pthread functions\nare available in libc so Libs.private doesn't get -pthread either.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/1bc548b8210366e44ba35b0b11577a8e328c1228"},{"sha":"597f49b61475438a43a417236989b2acc968a686","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Use -D_FILE_OFFSET_BITS=64 if (and only if) needed.\n\nA CMake option LARGE_FILE_SUPPORT is created if and only if\n-D_FILE_OFFSET_BITS=64 affects sizeof(off_t).\n\nThis is needed on many 32-bit platforms and even with 64-bit builds\nwith MinGW-w64 to get support for files larger than 2 GiB.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/597f49b61475438a43a417236989b2acc968a686"},{"sha":"2c7ee92e44e1e66f0a427555233eb22c78f6c4f8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Refer to MinGW-w64 instead of MinGW in the API headers.\n\nMinGW (formely a MinGW.org Project, later the MinGW.OSDN Project\nat <https://osdn.net/projects/mingw/>) has GCC 9.2.0 as the\nmost recent GCC package (released 2021-02-02). The project might\nstill be alive but majority of people have switched to MinGW-w64.\nThus it seems clearer to refer to MinGW-w64 in our API headers too.\nBuilding with MinGW is likely to still work but I haven't tested it\nin the recent years.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2c7ee92e44e1e66f0a427555233eb22c78f6c4f8"},{"sha":"747732cae2a300a83b91173b537d67859a3db627","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for building and installing xz with translations.\n\nThis uses Autotools-created files po/*.po.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/747732cae2a300a83b91173b537d67859a3db627"},{"sha":"25bbd3e855d9915ff3c9aa417e9fe6190a63d252","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Simplify symlink creation and install translated man pages.\n\nIt helps that cmake_install.cmake doesn't parallelize installation\nso symlinks can be created so that the target is always known to\nexist (a requirement on Windows in some cases).","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/25bbd3e855d9915ff3c9aa417e9fe6190a63d252"},{"sha":"bedce1d4083a12356ce8f1821545fa9c1a86fcee","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Scripts: Use @PACKAGE_VERSION@ instead of @VERSION@.\n\nPACKAGE_VERSION was already used in liblzma.pc.in.\nThis way only one version @foo@ is used.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/bedce1d4083a12356ce8f1821545fa9c1a86fcee"},{"sha":"c1c1b68ddf4242c0799c5412a5dd9a51a4bc9811","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Install scripts.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c1c1b68ddf4242c0799c5412a5dd9a51a4bc9811"},{"sha":"7ca4268912a595b7c3d255c1a0c128bf45f1995d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add test_scripts.sh to the tests.\n\nIn contrast to Automake, skipping of this test when decoders\nare disabled is handled at CMake side instead of test_scripts.sh\nbecause CMake-build doesn't create config.h.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7ca4268912a595b7c3d255c1a0c128bf45f1995d"},{"sha":"fb2a273dd3cc9501c2a773f5552690a7a53987db","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Windows: Update windows/build.bash.\n\nSupport for the old MinGW was dropped. Only MinGW-w64 with GCC\nis supported now.\n\nThe script now supports also cross-compilation from GNU/Linux\n(tests are not run). MSYS2 and also the old MSYS 1.0.11 work\nfor building on Windows. The i686 and x86_64 toolchains must\nbe in PATH to build both 32-bit and 64-bit versions.\n\nParallel builds are done if \"nproc\" from GNU coreutils is available.\n\nMinGW-w64 runtime copyright information file was renamed from\nCOPYING-Windows.txt to COPYING.MinGW-w64-runtime.txt which\nis the filename used by MinGW-w64 itself. Its existence\nis now mandatory, it's checked at the beginning of the script.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/fb2a273dd3cc9501c2a773f5552690a7a53987db"},{"sha":"c25f546f71a4041e8c187ad524308d70f67c8129","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Windows: Update windows/README-Windows.txt.\n\nIt's for binary packages built with windows/build.bash.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c25f546f71a4041e8c187ad524308d70f67c8129"}]},"public":true,"created_at":"2023-10-26T18:48:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
