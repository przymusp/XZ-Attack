commit f41df2ac2fed347d3f107f3533e76e000d29c6cb
Author: Jia Tan <jiat0218@gmail.com>
Date:   Wed Apr 19 22:22:16 2023 +0800

    Windows: Include <intrin.h> when needed.
    
    Legacy Windows did not need to #include <intrin.h> to use the MSVC
    intrinsics. Newer versions likely just issue a warning, but the MSVC
    documentation says to include the header file for the intrinsics we use.
    
    GCC and Clang can "pretend" to be MSVC on Windows, so extra checks are
    needed in tuklib_integer.h to only include <intrin.h> when it will is
    actually needed.

diff --git a/src/common/tuklib_integer.h b/src/common/tuklib_integer.h
index 21256955..aee1ad0d 100644
--- a/src/common/tuklib_integer.h
+++ b/src/common/tuklib_integer.h
@@ -52,6 +52,12 @@
 // and such functions.
 #if defined(__INTEL_COMPILER) && (__INTEL_COMPILER >= 1500)
 #	include <immintrin.h>
+// Only include <intrin.h> when it is needed. GCC and Clang can both
+// use __builtin's, so we only need Windows instrincs when using MSVC.
+// GCC and Clang can set _MSC_VER on Windows, so we need to exclude these
+// cases explicitly.
+#elif defined(_MSC_VER) && !TUKLIB_GNUC_REQ(3, 4) && !defined(__clang__)
+#	include <intrin.h>
 #endif
 
 
diff --git a/src/liblzma/common/memcmplen.h b/src/liblzma/common/memcmplen.h
index 5372cfa8..db3fff60 100644
--- a/src/liblzma/common/memcmplen.h
+++ b/src/liblzma/common/memcmplen.h
@@ -19,6 +19,16 @@
 #	include <immintrin.h>
 #endif
 
+// Only include <intrin.h> if it is needed. The header is only needed
+// on Windows when using an MSVC compatible compiler. The Intel compiler
+// can use the intrinsics without the header file.
+#if defined(TUKLIB_FAST_UNALIGNED_ACCESS) \
+		&& (defined(_MSC_VER) \
+		&& defined(_M_X64) \
+		&& !defined(__INTEL_COMPILER))
+#	include <intrin.h>
+#endif
+
 
 /// Find out how many equal bytes the two buffers have.
 ///