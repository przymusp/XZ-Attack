{"id":"36733380703","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553669853,"name":"tukaani-project/xz-embedded","url":"https://api.github.com/repos/tukaani-project/xz-embedded"},"payload":{"ref":"misc","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-03-20T18:25:35Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36733383818","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553669853,"name":"tukaani-project/xz-embedded","url":"https://api.github.com/repos/tukaani-project/xz-embedded"},"payload":{"repository_id":553669853,"push_id":17632678044,"size":20,"distinct_size":20,"ref":"refs/heads/master","head":"143e4d1eb721ebb5b378713ff6a7334dd2eabc2e","before":"1b6defd544914bfb4065e343296e5db64ef400e6","commits":[{"sha":"428d2918fab6cc3be606b7f010801bd09652ff68","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Sync decompress_unxz.c and unxz.h from Linux 6.8.\n\nThis changes the API to use long instead of int,\nincludes <linux/decompress/unxz.h> to avoid a missing prototype,\nreplaces the \"decompress\" macro with __decompress function,\nand removes IA-64 support. These are all extremely simple changes.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/428d2918fab6cc3be606b7f010801bd09652ff68"},{"sha":"8921f9b20297212b69af0340ceb97ea8cce73f53","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Sync xz_wrap.sh from Linux 6.8.\n\nIA-64 support was removed from Linux.\n\nThe xz command name is now provided via the environment variable XZ.\nThis adds slight extra hassle for testing this script outside the\nkernel but it's best to keep the script the same as in Linux source.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/8921f9b20297212b69af0340ceb97ea8cce73f53"},{"sha":"e8ab5c05a6e0799a96e7022114a96dd46452128a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add linux/MAINTAINERS.\n\nIt includes only the lines that are relevant to this project.\nHaving the file here works as a reminder that those lines need\nto be updated in Linux if the information becomes outdated.\n\nNote that the file list (F: entries) must be in case-insensitive\nalphabetical order to make checkpatch.pl happy.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/e8ab5c05a6e0799a96e7022114a96dd46452128a"},{"sha":"ed7ba6db11d62e3d88a3a239289b112f0f20fec8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Switch to BSD Zero Clause License.\n\nAdd the file AUTHORS. The file COPYING now contains only\nthe copyright notice and license text.\n\nAdd SPDX license identifiers using the /* */ or // comments\nas required by Documentation/process/license-rules.rst\nin Linux: // for .c files, /* */ for .h files.\n\nChange MODULE_LICENSE from \"GPL\" to \"Dual BSD/GPL\" because 0BSD\nshould count as a BSD license variant here.\n\nThe switch to 0BSD is done because public domain has\n(real or perceived) legal issues in some jurisdictions.\nAll people mentioned in AUTHORS have confirmed that\ntheir works included in this project can be distributed\nunder the 0BSD license.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/ed7ba6db11d62e3d88a3a239289b112f0f20fec8"},{"sha":"a3cf4a55b5105f2498e7b2ff3e87cb535479137c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"userspace/Makefile: Switch from -std=gnu89 to -std=gnu11.\n\nLinux moved from -std=gnu89 to -std=gnu11 in 2022 so now we need\nmuch fewer extensions than in the past (long long, stdint.h, and\nstdbool.h are standard C99 and later).\n\nThe option is -Wdeclaration-after-statement there for now because\nmixed declarations and statements aren't used at the moment\n(even though I like those) but it's not worth it to change those\nat this point.\n\nThese are the known things that don't conform to C99/C11:\n\n  - Null pointer + 0 is assumed to be well defined:\n\n        char *p = NULL; p += 0; assert(p == NULL);\n\n    It's required if a pointer in struct xz_buf is NULL\n    and thus the matching foo_size is 0.\n\n  - LZMA decoder accesses arrays inside structures in a way that\n    goes beyond the array bounds (while still staying within\n    the structure). The initialization thing could be neatly\n    cleaned up with C11's anonymous union.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/a3cf4a55b5105f2498e7b2ff3e87cb535479137c"},{"sha":"52f81170c04083d5e7c80947c63ad99a7f0f3a49","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"userspace/xz_config.h: Remove the stdbool.h workaround for MSVC.\n\nMSVC 2013 and newer have stdbool.h. Support for the older versions\nhas ended.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/52f81170c04083d5e7c80947c63ad99a7f0f3a49"},{"sha":"6a044427660d3b1b349e48854918ac2bfa04a608","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"lib/decompress_unxz.c: Fix style and comments.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/6a044427660d3b1b349e48854918ac2bfa04a608"},{"sha":"1249f6f277e81c0f6138d186bc1ad1379054010d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"userspace/boottest.c: Make it build with the new __decompress API.\n\nThe __decompress() function takes a new extra argument to specify\noutput buffer size. Some decompressors in Linux use it, some don't.\nThose that don't, assume that output buffer is SIZE_MAX. It's not\na security problem because the code is used for decompressing the\nkernel image only but it was still one of odd things in the API design.\n\nBuffer sizes are now long instead of int (but not size_t)\nso that initramfs larger than 2 GiB works too.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/1249f6f277e81c0f6138d186bc1ad1379054010d"},{"sha":"20a7cedeb388cb1583d12911e45038e4bb28b2e6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"userspace/boottest.c: #undef XZ_DEC_ANY_CHECK.\n\nIt's not defined in Linux and decompress_unxz.c doesn't check for it.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/20a7cedeb388cb1583d12911e45038e4bb28b2e6"},{"sha":"3a930383422430c63b6dffc569713d92cd39307a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use a fallthrough macro instead of a fall through comment.\n\nThis change was made in Linux in 2020.\n\nThe macro name \"fallthrough\" might be problematic outside of Linux\nif XZ Embedded code is mixed with C23 code that uses [[fallthrough]]\nbut let's not worry about that for now.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/3a930383422430c63b6dffc569713d92cd39307a"},{"sha":"b251e10673a0dff40cf85d3014f720baf9ecdd46","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Optimize the ARM64 BCJ decoder for-loop condition.\n\nCompilers cannot optimize the addition \"i + 4\" away since\ntheoretically it could overflow.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/b251e10673a0dff40cf85d3014f720baf9ecdd46"},{"sha":"7f886790fc5592e9702ba6d2499cc05d741be640","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Optimize five other BCJ decoder for-loop conditions.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/7f886790fc5592e9702ba6d2499cc05d741be640"},{"sha":"8b2382b5a99550e74eaf07684e026f60601d99c8","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add RISC-V BCJ decoder.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/8b2382b5a99550e74eaf07684e026f60601d99c8"},{"sha":"be33142907de10926222b2079bcd7cf20fec7c59","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update xz_dec.ko MODULE_AUTHOR and MODULE_VERSION.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/be33142907de10926222b2079bcd7cf20fec7c59"},{"sha":"5f391237761ecaa43b45f6eb4daf366416572f7e","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz_wrap.sh: Use 128 MiB dictionary and force single-threaded mode.\n\nDesktop kernels on x86-64 are already around 60 MiB. Using a dictionary\nlarger than 32 MiB should have no downsides nowadays as anyone building\nthe kernel should have plenty of RAM. 128 MiB dictionary needs 1346 MiB\nof RAM with xz versions 5.0.x - 5.6.x in single-threaded mode. On archs\nthat use xz_wrap.sh, kernel decompression is done in single-call mode so\na larger dictionary doesn't affect boot-time memory requirements.\n\nxz >= 5.6.0 uses multithreaded mode by default which compresses slightly\nworse than single-threaded mode. Kernel compression rarely used more\nthan one thread anyway because with 32 MiB dictionary size the default\nblock size was 96 MiB in multithreaded mode. So only a single thread\nwas used anyway unless the kernel was over 96 MiB.\n\nEspecially with the new larger dictionary size, the benefit of\nforcing single-threaded mode is reduced RAM usage.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/5f391237761ecaa43b45f6eb4daf366416572f7e"},{"sha":"75d7052e93e4b0bd557d3061557a9e1a91dccf0b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz_wrap.sh: Adjust arch-specific options for better compression.\n\nUse LZMA2 options that match the arch-specific alignment of instructions.\nThis change reduces compressed kernel size 0-2 % depending on the arch.\nOn 1-byte-aligned x86 it makes no difference and on 4-byte-aligned archs\nit helps the most.\n\nUse the ARM-Thumb filter for ARM-Thumb2 kernels. This reduces compressed\nkernel size about 5 %. Previously such kernels were compressed using\nthe ARM filter which didn't do anything useful with ARM-Thumb2 code.\n\nAdd BCJ filter support for ARM64 and RISC-V. On ARM64 the compressed\nkernel size is reduced about 5 % and on RISC-V by 7-8 %. These require\nnew enough version of the xz tool. With an old xz version a message is\nprinted to standard error and compression is done without the filter.\n\nUpdate lib/decompress_unxz.c to match the changes to xz_wrap.sh.\n\nThanks to Jubin Zhong for pointing out that CONFIG_THUMB2_KERNEL\nshould be used to detect which BCJ filter is used on 32-bit ARM.\n\n    https://lore.kernel.org/lkml/1637379771-39449-1-git-send-email-zhongjubin@huawei.com/\n\nIt never got merged into Linux. That patch sourced the whole auto.conf\nfile as a shell script instead of using grep like is done in this commit.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/75d7052e93e4b0bd557d3061557a9e1a91dccf0b"},{"sha":"39c0a923c20b6723c8e70e834d0f224a6f2ac315","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Replace xz.txt with xz.rst, update the contents, and update README.\n\nThe old xz.txt had been moved and trivially converted to xz.rst\nin Linux already without changing the contents. This updates\nthe content too as some of it was outdated.\n\nxz.rst:\n\n  - Add SPDX license identifier to xz.rst.\n\n  - Omit xz_dec_test paragraph from xz.rst as no one needs to care\n    about that module unless they plan to modify the code and then\n    they will spot the xz_dec_test.c file too (and the Kconfig option).\n\n  - Omit the separate paragraph about xz_wrap.sh as it shouldn't be\n    called directly. Mention it in the bullet point of xzkern instead.\n\n  - Revise the docs about xzkern and add xzkern_with_size.\n    The latter was added to scripts/Makefile.lib in Linux in\n    the commit 7ce7e984ab2b218d\n    (\"kbuild: rename cmd_{bzip2,lzma,lzo,lz4,xzkern,zstd22}\").\n\n  - Omit future plans as those don't seem to happen.\n\nBoth xz.rst and README:\n\n  - Move contact info from xz.rst to README. The contact info will\n    be in MAINTAINERS in Linux. Few will look at xz.rst for maintainer\n    contact info.\n\n  - Move the .xz conformance section from xz.rst to README as that\n    info isn't that useful in Linux docs.\n\nREADME:\n\n  - Add a note that some features are missing from the version in\n    the Linux kernel.\n\n  - Omit out-of-tree kernel module build instructions from README.\n    It's unlikely to be useful at this point.\n\n  - Update the C standard info in README.\n\n  - Update the path to xz.rst.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/39c0a923c20b6723c8e70e834d0f224a6f2ac315"},{"sha":"d20d8b8de50cac133ad5a1c9f8675c64007ecdbf","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update the path to xz.rst in Kconfig.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/d20d8b8de50cac133ad5a1c9f8675c64007ecdbf"},{"sha":"844ba4b70797f19d0e6769725e34d8c9fca06163","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"codespell: Add .codespellrc to set default options.\n\nThere are no false positives so far, but these can be added later if\nneeded by using the \"ignore-words-list\" option.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/844ba4b70797f19d0e6769725e34d8c9fca06163"},{"sha":"143e4d1eb721ebb5b378713ff6a7334dd2eabc2e","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Fix typos discovered by codespell.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-embedded/commits/143e4d1eb721ebb5b378713ff6a7334dd2eabc2e"}]},"public":true,"created_at":"2024-03-20T18:25:41Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
