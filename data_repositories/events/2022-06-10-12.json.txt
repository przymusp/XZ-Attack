{"id":"22271262313","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":453091377,"name":"JiaT75/XZ_Utils_Unofficial","url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial"},"payload":{"push_id":10126774244,"size":39,"distinct_size":1,"ref":"refs/heads/no_end_marker_API_export","head":"3b1b2b9f9546616f1e83b9794a3732058a267807","before":"256b682e62cc59db35b25df6fe359641e7f4a358","commits":[{"sha":"f0da507f22e7f4e3edb75b45b74d344244ca03fb","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Translations: Fix po4a failure with the French man page translations.\n\nThanks to Mario BlÃ¤ttermann for the patch.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/f0da507f22e7f4e3edb75b45b74d344244ca03fb"},{"sha":"555de11873eb00c9b94a8be70645db502e5a9dbd","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Tests: Add bad-1-lzma2-11.xz.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/555de11873eb00c9b94a8be70645db502e5a9dbd"},{"sha":"1c9a5786d206b4abc8e427326651c8174baea753","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Make Block decoder catch certain types of errors better.\n\nNow it limits the input and output buffer sizes that are\npassed to a raw decoder. This way there's no need to check\nif the sizes can grow too big or overflow when updating\nCompressed Size and Uncompressed Size counts. This also means\nthat a corrupt file cannot cause the raw decoder to process\nuseless extra input or output that would exceed the size info\nin Block Header (and thus cause LZMA_DATA_ERROR anyway).\n\nMore importantly, now the size information is verified more\ncarefully in case raw decoder returns LZMA_OK. This doesn't\nreally matter with the current single-threaded .xz decoder\nas the errors would be detected slightly later anyway. But\nthis helps avoiding corner cases in the upcoming threaded\ndecompressor, and it might help other Block decoder uses\noutside liblzma too.\n\nThe test files bad-1-lzma2-{9,10,11}.xz test these conditions.\nWith the single-threaded .xz decoder the only difference is\nthat LZMA_DATA_ERROR is detected in a difference place now.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/1c9a5786d206b4abc8e427326651c8174baea753"},{"sha":"865e0a3689a25a7ee8eecae1a34c1775e3aa676e","author":{"email":"emaste@FreeBSD.org","name":"Ed Maste"},"message":"liblzma: Use non-executable stack on FreeBSD as on Linux","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/865e0a3689a25a7ee8eecae1a34c1775e3aa676e"},{"sha":"5313ad66b40aab822ddca3e9905254cb99a4080d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/5313ad66b40aab822ddca3e9905254cb99a4080d"},{"sha":"4f78f5fcf63592f2d77e921cfe0d5de300867374","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Check the return value of lzma_index_append() in threaded encoder.\n\nIf lzma_index_append() failed (most likely memory allocation failure)\nit could have gone unnoticed and the resulting .xz file would have\nan incorrect Index. Decompressing such a file would produce the\ncorrect uncompressed data but then an error would occur when\nverifying the Index field.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/4f78f5fcf63592f2d77e921cfe0d5de300867374"},{"sha":"20e7a33e2d59c6a814447d3991f21e2702174b20","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Minor addition to lzma_vli_size() API doc.\n\nThanks to Jia Tan.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/20e7a33e2d59c6a814447d3991f21e2702174b20"},{"sha":"ddbc6f58c2de388eed24cd7ea91b523d397da5f4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Index hash: Change return value type of hash_append() to void.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/ddbc6f58c2de388eed24cd7ea91b523d397da5f4"},{"sha":"1a4bb97a00936535e30ac61945aeee38882b5d1a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add new output queue (lzma_outq) features.\n\nAdd lzma_outq_clear_cache2() which may leave one buffer allocated\nin the cache.\n\nAdd lzma_outq_outbuf_memusage() to get the memory needed for\na single lzma_outbuf. This is now used internally in outqueue.c too.\n\nTrack both the total amount of memory allocated and the amount of\nmemory that is in active use (not in cache).\n\nIn lzma_outbuf, allow storing the current input position that\nmatches the current output position. This way the main thread\ncan notice when no more output is possible without first providing\nmore input.\n\nAllow specifying return code for lzma_outq_read() in a finished\nlzma_outbuf.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/1a4bb97a00936535e30ac61945aeee38882b5d1a"},{"sha":"717631b9788dc9c100ee0c87d3c14a2782638ff4","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix docs: lzma_block_decoder() cannot return LZMA_UNSUPPORTED_CHECK.\n\nIf Check is unsupported, it will be silently ignored.\nIt's the caller's job to handle it.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/717631b9788dc9c100ee0c87d3c14a2782638ff4"},{"sha":"4cce3e27f529af33e0e7749a8cbcec59954946b5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add threaded .xz decompressor.\n\nI realize that this is about a decade late.\n\nBig thanks to Sebastian Andrzej Siewior for the original patch.\nI made a bunch of smaller changes but after a while quite a few\nthings got rewritten. So any bugs in the commit were created by me.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/4cce3e27f529af33e0e7749a8cbcec59954946b5"},{"sha":"6c6da57ae2aa962aabde6892442227063d87e88c","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Add initial support for threaded decompression.\n\nIf threading support is enabled at build time, this will\nuse lzma_stream_decoder_mt() even for single-threaded mode.\nWith memlimit_threading=0 the behavior should be identical.\n\nThis needs some work like adding --memlimit-threading=LIMIT.\n\nThe original patch from Sebastian Andrzej Siewior included\na method to get currently available RAM on Linux. It might\nbe one way to go but as it is Linux-only, the available-RAM\napproach needs work for portability or using a fallback method\non other OSes.\n\nThe man page wasn't updated yet.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/6c6da57ae2aa962aabde6892442227063d87e88c"},{"sha":"487c77d48760564b1949c5067630b675b87be4de","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Threaded decoder: Don't stop threads on LZMA_TIMED_OUT.\n\nLZMA_TIMED_OUT is not an error and thus stopping threads on\nLZMA_TIMED_OUT breaks the decoder badly.\n\nThanks to Jia Tan for finding the bug and for the patch.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/487c77d48760564b1949c5067630b675b87be4de"},{"sha":"e0394e94230f208682ac1e1f4c41f22f9ad79916","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/e0394e94230f208682ac1e1f4c41f22f9ad79916"},{"sha":"bd93b776c1bd15e90661033c918cdeb354dbcc38","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Fix a deadlock in threaded decoder.\n\nIf a worker thread has consumed all input so far and it's\nwaiting on thr->cond and then the main thread enables\npartial update for that thread, the code used to deadlock.\nThis commit allows one dummy decoding pass to occur in this\nsituation which then also does the partial update.\n\nAs part of the fix, this moves thr->progress_* updates to\navoid the second thr->mutex locking.\n\nThanks to Jia Tan for finding, debugging, and reporting the bug.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/bd93b776c1bd15e90661033c918cdeb354dbcc38"},{"sha":"69d1b3fc29677af8ade8dc15dba83f0589cb63d6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xzgrep: Fix escaping of malicious filenames (ZDI-CAN-16587).\n\nMalicious filenames can make xzgrep to write to arbitrary files\nor (with a GNU sed extension) lead to arbitrary code execution.\n\nxzgrep from XZ Utils versions up to and including 5.2.5 are\naffected. 5.3.1alpha and 5.3.2alpha are affected as well.\nThis patch works for all of them.\n\nThis bug was inherited from gzip's zgrep. gzip 1.12 includes\na fix for zgrep.\n\nThe issue with the old sed script is that with multiple newlines,\nthe N-command will read the second line of input, then the\ns-commands will be skipped because it's not the end of the\nfile yet, then a new sed cycle starts and the pattern space\nis printed and emptied. So only the last line or two get escaped.\n\nOne way to fix this would be to read all lines into the pattern\nspace first. However, the included fix is even simpler: All lines\nexcept the last line get a backslash appended at the end. To ensure\nthat shell command substitution doesn't eat a possible trailing\nnewline, a colon is appended to the filename before escaping.\nThe colon is later used to separate the filename from the grep\noutput so it is fine to add it here instead of a few lines later.\n\nThe old code also wasn't POSIX compliant as it used \\n in the\nreplacement section of the s-command. Using \\<newline> is the\nPOSIX compatible method.\n\nLC_ALL=C was added to the two critical sed commands. POSIX sed\nmanual recommends it when using sed to manipulate pathnames\nbecause in other locales invalid multibyte sequences might\ncause issues with some sed implementations. In case of GNU sed,\nthese particular sed scripts wouldn't have such problems but some\nother scripts could have, see:\n\n    info '(sed)Locale Considerations'\n\nThis vulnerability was discovered by:\ncleemy desu wayo working with Trend Micro Zero Day Initiative\n\nThanks to Jim Meyering and Paul Eggert discussing the different\nways to fix this and for coordinating the patch release schedule\nwith gzip.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/69d1b3fc29677af8ade8dc15dba83f0589cb63d6"},{"sha":"2ba8173e27be4793edb46497e499ac2ae753a316","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/2ba8173e27be4793edb46497e499ac2ae753a316"},{"sha":"e671bc8828b9c0c5406c3a22c541301d0eb54518","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Threaded decoder: Support zpipe.c-style decoding loop.\n\nThis makes it possible to call lzma_code() in a loop that only\nreads new input when lzma_code() didn't fill the output buffer\ncompletely. That isn't the calling style suggested by the\nliblzma example program 02_decompress.c so perhaps the usefulness\nof this feature is limited.\n\nAlso, it is possible to write such a loop so that it works\nwith the single-threaded decoder but not with the threaded\ndecoder even after this commit, or so that it works only if\nlzma_mt.timeout = 0.\n\nThe zlib tutorial <https://zlib.net/zlib_how.html> is a well-known\nexample of a loop where more input is read only when output isn't\nfull. Porting this as is to liblzma would work with the\nsingle-threaded decoder (if LZMA_CONCATENATED isn't used) but it\nwouldn't work with threaded decoder even after this commit because\nthe loop assumes that no more output is possible when it cannot\nread more input (\"if (strm.avail_in == 0) break;\"). This cannot\nbe fixed at liblzma side; the loop has to be modified at least\na little.\n\nI'm adding this in any case because the actual code is simple\nand short and should have no harmful side-effects in other\nsituations.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/e671bc8828b9c0c5406c3a22c541301d0eb54518"},{"sha":"64b6d496dc815a176d8307f418f6834a26783484","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Threaded decoder: Always wait for output if LZMA_FINISH is used.\n\nThis makes the behavior consistent with the single-threaded\ndecoder when handling truncated .xz files.\n\nThanks to Jia Tan for finding this issue.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/64b6d496dc815a176d8307f418f6834a26783484"},{"sha":"90621da7f6e1bfd6d91d60415eae04b2bca274c2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Add a new flag LZMA_FAIL_FAST for threaded decoder.\n\nIn most cases if the input file is corrupt the application won't\ncare about the uncompressed content at all. With this new flag\nthe threaded decoder will return an error as soon as any thread\nhas detected an error; it won't wait to copy out the data before\nthe location of the error.\n\nI don't plan to use this in xz to keep the behavior consistent\nbetween single-threaded and multi-threaded modes.","distinct":false,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/90621da7f6e1bfd6d91d60415eae04b2bca274c2"}]},"public":true,"created_at":"2022-06-10T12:35:58Z"}
{"id":"22271399901","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":453091377,"name":"JiaT75/XZ_Utils_Unofficial","url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial"},"payload":{"push_id":10126845198,"size":1,"distinct_size":1,"ref":"refs/heads/no_end_marker_API_export","head":"ad336e44f628c23040bfe0e3defe69f6ec5644ca","before":"3b1b2b9f9546616f1e83b9794a3732058a267807","commits":[{"sha":"ad336e44f628c23040bfe0e3defe69f6ec5644ca","author":{"email":"jiat0218@gmail.com","name":"jiat75"},"message":"trivial format cleanup","distinct":true,"url":"https://api.github.com/repos/JiaT75/XZ_Utils_Unofficial/commits/ad336e44f628c23040bfe0e3defe69f6ec5644ca"}]},"public":true,"created_at":"2022-06-10T12:43:29Z"}
