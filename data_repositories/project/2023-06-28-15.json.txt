{"id":"30069941648","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":14141372007,"size":5,"distinct_size":5,"ref":"refs/heads/CI","head":"dc95e60f209ff4be0befb988d4028efa660f61c2","before":"032e22b9c817216f7e34bb00c2138d131f6b3223","commits":[{"sha":"7c0ca26173d59ad1b3a29f960e203a61ec15e354","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Add test with -fsanitize=address,undefined.\n\nci_build.sh was updated to accept disabling of __attribute__ ifunc\nand CLMUL. This will allow -fsanitize=address to pass because ifunc\nis incompatible with -fsanitize=address. The CLMUL implementation has\noptimizations that potentially read past the buffer and mask out the\nunwanted bytes.\n\nThis test will only run on Autotools Linux.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7c0ca26173d59ad1b3a29f960e203a61ec15e354"},{"sha":"496c0314df759567aa12fdb3c165a8847fd410c1","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent warning for MSYS2 Windows build.\n\nIn lzma_memcmplen(), the <intrin.h> header file is only included if\n_MSC_VER and _M_X64 are both defined but _BitScanForward64() was\npreviously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but\nnot _MSC_VER so _BitScanForward64() was used without including\n<intrin.h>.\n\nNow, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as\nexpected.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/496c0314df759567aa12fdb3c165a8847fd410c1"},{"sha":"b28d6f42fba8bacf8bf030fa4a9fe72a8750e16b","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent uninitialzed warning in mt stream encoder.\n\nThis change only impacts the compiler warning since it was impossible\nfor the wait_abs struct in stream_encode_mt() to be used before it was\ninitialized since mythread_condtime_set() will always be called before\nmythread_cond_timedwait().\n\nSince the mythread.h code is slightly different between the POSIX and\nWindows versions, this warning was only present on Windows builds.\n\nThanks to Arthur S for reporting the warning and providing a patch.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/b28d6f42fba8bacf8bf030fa4a9fe72a8750e16b"},{"sha":"52384e4763c8f07f1c4bae6be892d6038987b072","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_block_header.\n\ntest_block_header was not properly freeing the filter options between\ncalls to lzma_block_header_decode(). The memory leaks were discoverd by\nusing -fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/52384e4763c8f07f1c4bae6be892d6038987b072"},{"sha":"dc95e60f209ff4be0befb988d4028efa660f61c2","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_index.\n\nSeveral tests were missing calls to lzma_index_end() to clean up the\nlzma_index structs. The memory leaks were discovered by using\n-fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/dc95e60f209ff4be0befb988d4028efa660f61c2"}]},"public":true,"created_at":"2023-06-28T15:56:14Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"30069974073","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":14141387079,"size":5,"distinct_size":5,"ref":"refs/heads/CI","head":"77f039f7101b5ba03fbe9485f45cae52f19e7497","before":"dc95e60f209ff4be0befb988d4028efa660f61c2","commits":[{"sha":"7cd6bb9fefe7a3d261d5a803720d79d1f83cb123","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"CI: Add test with -fsanitize=address,undefined.\n\nci_build.sh was updated to accept disabling of __attribute__ ifunc\nand CLMUL. This will allow -fsanitize=address to pass because ifunc\nis incompatible with -fsanitize=address. The CLMUL implementation has\noptimizations that potentially read past the buffer and mask out the\nunwanted bytes.\n\nThis test will only run on Autotools Linux.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/7cd6bb9fefe7a3d261d5a803720d79d1f83cb123"},{"sha":"8aa5f650079b1c4ff283730f15977b40a3251fd7","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent warning for MSYS2 Windows build.\n\nIn lzma_memcmplen(), the <intrin.h> header file is only included if\n_MSC_VER and _M_X64 are both defined but _BitScanForward64() was\npreviously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but\nnot _MSC_VER so _BitScanForward64() was used without including\n<intrin.h>.\n\nNow, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as\nexpected.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8aa5f650079b1c4ff283730f15977b40a3251fd7"},{"sha":"a87555424d50ac2d886a378c09028aee9e7bc7d7","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Prevent uninitialzed warning in mt stream encoder.\n\nThis change only impacts the compiler warning since it was impossible\nfor the wait_abs struct in stream_encode_mt() to be used before it was\ninitialized since mythread_condtime_set() will always be called before\nmythread_cond_timedwait().\n\nSince the mythread.h code is slightly different between the POSIX and\nWindows versions, this warning was only present on Windows builds.\n\nThanks to Arthur S for reporting the warning and providing a patch.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/a87555424d50ac2d886a378c09028aee9e7bc7d7"},{"sha":"eccf5ceb814134546a035b184812a41277a89826","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_block_header.\n\ntest_block_header was not properly freeing the filter options between\ncalls to lzma_block_header_decode(). The memory leaks were discoverd by\nusing -fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/eccf5ceb814134546a035b184812a41277a89826"},{"sha":"77f039f7101b5ba03fbe9485f45cae52f19e7497","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"Tests: Fix memory leaks in test_index.\n\nSeveral tests were missing calls to lzma_index_end() to clean up the\nlzma_index structs. The memory leaks were discovered by using\n-fsanitize=address with GCC.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/77f039f7101b5ba03fbe9485f45cae52f19e7497"}]},"public":true,"created_at":"2023-06-28T15:57:32Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
