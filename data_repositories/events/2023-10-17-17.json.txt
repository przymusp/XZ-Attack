{"id":"32632529901","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15455688643,"size":4,"distinct_size":4,"ref":"refs/heads/crc_clmul","head":"5eb8f6572c7d1db18d566f0a88dc755993e3ca93","before":"fdb3697a933597258c7092f7b5a7693db57fb5dd","commits":[{"sha":"ed6910b7a4230a5f734d4edce70917dd9769fe93","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Create crc_clmul.c.\n\nBoth crc32_clmul() and crc64_clmul() are now exported from\ncrc32_clmul.c. This ensures that is_clmul_supported() is not duplicated\nbetween crc32_fast.c and crc64_fast.c.\n\nAlso, it encapsulates the complexity of the CLMUL implementations into a\nsingle file and reduces the complexity of crc32_fast.c and crc64_fast.c.\nBefore, CLMUL code was present in crc32_fast.c, crc64_fast.c, and\ncrc_common.h.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ed6910b7a4230a5f734d4edce70917dd9769fe93"},{"sha":"2d0c54f8acd4a8ffb60f9a66ebda1e4aeeac9a82","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Refactor CRC comments.\n\nA detailed description of the three dispatch methods was added. Also,\nduplicated comments now only appear in crc32_fast.c or were removed from\nboth crc32_fast.c and crc64_fast.c if they appeared in crc_clmul.c.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2d0c54f8acd4a8ffb60f9a66ebda1e4aeeac9a82"},{"sha":"70ade2ef31aee435bf620ec36db7f5314420eded","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Force inlining for crc_simd_body().\n\nIf crc_simd_body() is not inlined, it reduces performance by as much as\n50%.\n\nMSVC uses a different keyword \"__forceinline\" instead of inline so it\nwill give a warning if __forceinline and inline are both used.\n\nGCC (since at least version 4.1.2) and Clang (since at least version\n3.0.0) support __attribute__((__always_inline__))","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/70ade2ef31aee435bf620ec36db7f5314420eded"},{"sha":"5eb8f6572c7d1db18d566f0a88dc755993e3ca93","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Add include guards to crc_common.h.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5eb8f6572c7d1db18d566f0a88dc755993e3ca93"}]},"public":true,"created_at":"2023-10-17T17:26:16Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
