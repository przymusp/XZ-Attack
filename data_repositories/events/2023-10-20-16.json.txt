{"id":"32727856621","type":"PushEvent","actor":{"id":78042786,"login":"JiaT75","display_login":"JiaT75","gravatar_id":"","url":"https://api.github.com/users/JiaT75","avatar_url":"https://avatars.githubusercontent.com/u/78042786?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15503025513,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"988e09f27b9b04a43d45d10f92782e0092ee27a9","before":"105c7ca90d4152942e0798580a37f736d02faa22","commits":[{"sha":"988e09f27b9b04a43d45d10f92782e0092ee27a9","author":{"email":"jiat0218@gmail.com","name":"Jia Tan"},"message":"liblzma: Move is_clmul_supported() back to crc_common.h.\n\nThis partially reverts creating crc_clmul.c\n(8c0f9376f58c0696d5d6719705164d35542dd891) where is_clmul_supported()\nwas moved, extern'ed, and renamed to lzma_is_clmul_supported(). This\ncaused a problem when the function call to lzma_is_clmul_supported()\nresults in a call through the PLT. ifunc resolvers run very early in\nthe dynamic loading sequence, so the PLT may not be setup properly at\nthis point. Whether the PLT is used or not for\nlzma_is_clmul_supported() depened upon the compiler-toolchain used and\nflags.\n\nIn liblzma compiled with GCC, for instance, GCC will go through the PLT\nfor function calls internal to liblzma if the version scripts and\nsymbol visibility hiding are not used. If lazy-binding is disabled,\nthen it would have made any program linked with liblzma fail during\ndynamic loading in the ifunc resolver.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/988e09f27b9b04a43d45d10f92782e0092ee27a9"}]},"public":true,"created_at":"2023-10-20T16:05:33Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
