{"id":"36798528350","type":"CreateEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553668398,"name":"tukaani-project/xz-java","url":"https://api.github.com/repos/tukaani-project/xz-java"},"payload":{"ref":"bytearrayview","ref_type":"branch","master_branch":"master","description":"XZ for Java","pusher_type":"user"},"public":true,"created_at":"2024-03-22T13:47:34Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36798547206","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553668398,"name":"tukaani-project/xz-java","url":"https://api.github.com/repos/tukaani-project/xz-java"},"payload":{"ref":"array_compare","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-03-22T13:48:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36798547216","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553668398,"name":"tukaani-project/xz-java","url":"https://api.github.com/repos/tukaani-project/xz-java"},"payload":{"ref":"crc64_varhandle2","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-03-22T13:48:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36798547280","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553668398,"name":"tukaani-project/xz-java","url":"https://api.github.com/repos/tukaani-project/xz-java"},"payload":{"ref":"crc64_varhandle","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2024-03-22T13:48:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"36798574620","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553668398,"name":"tukaani-project/xz-java","url":"https://api.github.com/repos/tukaani-project/xz-java"},"payload":{"repository_id":553668398,"push_id":17662972193,"size":9,"distinct_size":9,"ref":"refs/heads/bytearrayview","head":"46c32850a51921aff3534954040fbd66ee06fbce","before":"b029a61b2b8b9ea190e8479456a2129f567a2548","commits":[{"sha":"493ff5bc7e847c0c6819053da43dc8c303e9a75d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add ByteArrayView.\n\nThis provides static methods to get and set 16/32/64-bit\nbig and little endian integers from/to byte[]. Also constants\nfor calculating the array offset for aligned memory access\n(faster with VarHandle) is provided.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/493ff5bc7e847c0c6819053da43dc8c303e9a75d"},{"sha":"f1306b6e71fbf3fcb77de5390a9c0e13ff05dcd2","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use ByteArrayView in CRC32 and CRC64.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/f1306b6e71fbf3fcb77de5390a9c0e13ff05dcd2"},{"sha":"fe82e48248062c85b00d388f47984780634a6782","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add VarHandle-based CRC64 for Java >= 9.\n\nNow the slicing-by-4 is done properly in terms of performance\nsince it reads 32-bit integers at a time.\n\nThis is 20-25 % faster on x86-64. It should be faster on all\narchs and it's compatible with strict-align archs too. In\ncontrast to XZ Utils, this implementation is little-endian only\nto keep it simpler.\n\nGood speed on big endian requires that byteswap in VarHandle is\nfast. Testing this code on x86-64 with getIntBE, the difference\nis maybe 1 % or maybe no difference at all. So on x86-64 it\ndoesn't matter much which endianness is used. Hopefully it's\nlike that on the few big endian systems with Java too.\n\nSeparate big endian version might be considered *if* it seems valuable\nenough and that someone can also properly test it on real hardware.\n\nThe flattening of TABLE[] helped here. Testing it on the pre-VarHandle\ncode, it didn't matter much with OpenJDK 21 (maybe a tiny bit faster)\nbut it was slower on Java 8. Now that the old code is for Java 8 only,\nit seems best to leave it unchanged.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/fe82e48248062c85b00d388f47984780634a6782"},{"sha":"c0ad1f09f55749f4b4813ef847cc8af1d153133d","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"LZMAEncoderNormal: Don't call lz.getMatchLen with negative lenLimit.\n\nDoing so is fine for now but optimized versions of getMatchLen\nwon't like it.\n\nThe second hunk is mostly white space change as the if-block was\nindented more.\n\nThis doesn't affect speed.\n\nThanks to Brett Okken.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/c0ad1f09f55749f4b4813ef847cc8af1d153133d"},{"sha":"dc7e6c98cb85d884b758a742656aed76ddbf60de","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add minimal MatchLength with a static getLen method.\n\nEventually this will be used only by Java 8 (or older).","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/dc7e6c98cb85d884b758a742656aed76ddbf60de"},{"sha":"6faa2e18de9769cf1b60da1b3ace9b720cda8558","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Use MatchLength.getLen in LZEncoder, BT4, and HC4.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/6faa2e18de9769cf1b60da1b3ace9b720cda8558"},{"sha":"02e6bd76f7b5c03e8d6a0d75828cb9eaeead6221","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Add MatchLength.EXTRA_SIZE and use it in LZEncoder.\n\nIt's not needed with the basic MatchLength version but\nan optimized version will need it.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/02e6bd76f7b5c03e8d6a0d75828cb9eaeead6221"},{"sha":"32f4f21e468b70b8d4bcc7c1478b1105ce6abf75","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MatchLength: Add getLenBasic and getLenUnalignedLE64.\n\nThese require Java 9 or later. Multi-release JAR is used\nto keep the package compatible with Java 8.\n\nThese improve speed especially when a file compresses\nvery well (matches are long).\n\nUsing sun.misc.Unsafe could be slightly faster in\ngetLenUnalignedLE64 but I think it's not worth it.\nBetter stick to standard Java and memory safety. In any\ncase XZ for Java is significantly slower than XZ Utils.\n\nBig thanks to Brett Okken for providing his versions and\nbenchmarking them!","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/32f4f21e468b70b8d4bcc7c1478b1105ce6abf75"},{"sha":"46c32850a51921aff3534954040fbd66ee06fbce","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MatchLength: Point to the src9 directory for the docs.\n\nSome day the Java < 9 files will be gone so it's nicer if\nthe internal docs are then already in the files that will remain.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz-java/commits/46c32850a51921aff3534954040fbd66ee06fbce"}]},"public":true,"created_at":"2024-03-22T13:48:59Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
