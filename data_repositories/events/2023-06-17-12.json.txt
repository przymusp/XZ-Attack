{"id":"29824230747","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":503096977,"name":"riscv/riscv-cfi","url":"https://api.github.com/repos/riscv/riscv-cfi"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118","repository_url":"https://api.github.com/repos/riscv/riscv-cfi","labels_url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118/labels{/name}","comments_url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118/comments","events_url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118/events","html_url":"https://github.com/riscv/riscv-cfi/issues/118","id":1760903594,"node_id":"I_kwDOHfymkc5o9UGq","number":118,"title":"Does the pseudo-instruction CALL require LPAD?","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-06-16T16:00:19Z","updated_at":"2023-06-17T12:37:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The expansion of `call` uses `jalr` with rs1=x1. After [the commit 157ebd](https://github.com/riscv/riscv-cfi/commit/157ebdf42e3d3fbad87c4636fa15b459583a1715) this seems to no longer require a landing pad at the target address. I wonder if this is a bug.","reactions":{"url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/riscv/riscv-cfi/issues/comments/1595734160","html_url":"https://github.com/riscv/riscv-cfi/issues/118#issuecomment-1595734160","issue_url":"https://api.github.com/repos/riscv/riscv-cfi/issues/118","id":1595734160,"node_id":"IC_kwDOHfymkc5fHPiQ","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-06-17T12:37:12Z","updated_at":"2023-06-17T12:37:12Z","author_association":"NONE","body":"The final `)` is missing but otherwise the PR looks correct. The line is then fairly long, I didn't check how it looks as PDF.\r\n\r\nNot a real suggestion, just thinking out aloud that it might look good this way:\r\n\r\n```\r\nis_lp_expected = ( (JALR || C.JR || C.JALR) &&\r\n                   !(rd == x0 && (rs1 == x1 || rs1 == x5)) &&\r\n                   !(rd == x7 && rs1 == x7) ) ? 1 : 0;\r\n```\r\n\r\nBut keeping the helper variables is good, for example, if support for software guarded branches was optional. The [issue 84](https://github.com/riscv/riscv-cfi/issues/84) was about adding software guarded branches and it the linked to a [gcc thread](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104816) and that linked to a [lkml post](https://lkml.org/lkml/2022/3/7/1068) which were good reads. On x86-64 the `notrack` prefix is similar to the software guarded branch but `notrack` support in the processor can be disabled so that a landing pad is always required, making CFI protection stronger. x86-64 Linux intentionally keeps `notrack` disabled in kernel mode. It is possible to create jump tables for `switch` statements with landing pads, and this can help against speculative execution problems better than software guarded branches (speculation may bypass jump table bounds checks).\r\n\r\nReading those links made me feel that the pros and cons of supporting software guarded branches should be understood well. I was reading the Zicfisslp spec for fun only and the value of software guarded branches is beoynd my skills and knowledge. So I won't comment it any further.\r\n\r\nThanks!\r\n","reactions":{"url":"https://api.github.com/repos/riscv/riscv-cfi/issues/comments/1595734160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-17T12:37:12Z","org":{"id":10872782,"login":"riscv","gravatar_id":"","url":"https://api.github.com/orgs/riscv","avatar_url":"https://avatars.githubusercontent.com/u/10872782?"}}
