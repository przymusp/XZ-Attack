{"id":"32038421891","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15146508220,"size":24,"distinct_size":24,"ref":"refs/heads/xz_for_msvc","head":"f692f0c49b9e179dee86c4cea73d27226c815dfc","before":"3ebff0adfe1080e17c983bc943177033a5267743","commits":[{"sha":"cfd1054b9b539ee92524901e95d7bb5a1fe670a0","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: Don't #include <unistd.h>.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cfd1054b9b539ee92524901e95d7bb5a1fe670a0"},{"sha":"c4edd367678e6a38c42b149856159bf417da7fe1","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xzdec: Use _fileno and _setmode.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c4edd367678e6a38c42b149856159bf417da7fe1"},{"sha":"d14bba8fc2be02a9fed8c9bcaaf61103451755f8","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _fileno() instead of fileno().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d14bba8fc2be02a9fed8c9bcaaf61103451755f8"},{"sha":"e241051f50044259d174e8b4633dd9a1c4478408","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _isatty() from <io.h> to implement isatty().","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e241051f50044259d174e8b4633dd9a1c4478408"},{"sha":"5c6f892d411670e3060f4bc309402617a209e57c","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _stricmp() instead of strcasecmp() in suffix.c.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5c6f892d411670e3060f4bc309402617a209e57c"},{"sha":"c660b8d78b7bda43b12b285550d8c70e8ccec698","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Use GetTickCount64() to implement mytime_now().\n\nIt's available since Windows Vista.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c660b8d78b7bda43b12b285550d8c70e8ccec698"},{"sha":"79334e7f20f2bf9e0de095835b48868f1238f584","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.\n\nThanks to Kelvin Lee for the original patches\nand testing the modifications I made.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/79334e7f20f2bf9e0de095835b48868f1238f584"},{"sha":"189f72581329ab281ad6af37f60135910cb1b146","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/189f72581329ab281ad6af37f60135910cb1b146"},{"sha":"90c94dddfd57b7d744bfad64c54e10d15778144b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.\n\nThis makes no difference for GCC or Clang as they support\nGNU C's __attribute__((__noreturn__)) but this helps with MSVC:\n\n  - VS 2019 version 16.7 and later support _Noreturn if the\n    options /std:c11 or /std:c17 are used. This gets handled\n    with the check for __STDC_VERSION__ >= 201112.\n\n  - When MSVC isn't in C11/C17 mode, __declspec(noreturn) is used.\n\nC23 will deprecate _Noreturn (and <stdnoreturn.h>)\nfor [[noreturn]]. This commit anticipates that but\nthe final __STDC_VERSION__ value isn't known yet.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/90c94dddfd57b7d744bfad64c54e10d15778144b"},{"sha":"74b0e900c92d5b222b36f474f1efa431f8e262f7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit -Wc99-c11-compat since it warns about _Noreturn.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/74b0e900c92d5b222b36f474f1efa431f8e262f7"},{"sha":"18a66fbac031c98f9c2077fc88846e4d07849197","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove incorrect uses of __attribute__((__malloc__)).\n\nxrealloc() is obviously incorrect, modern GCC docs even\nmention realloc() as an example where this attribute\ncannot be used.\n\nliblzma's lzma_alloc() and lzma_alloc_zero() would be\ncorrect uses most of the time but custom allocators\nmay use a memory pool or otherwise hold the pointer\nso aliasing issues could happen in theory.\n\nThe xstrdup() case likely was correct but I removed it anyway.\nNow there are no __malloc__ attributes left in the code.\nThe allocations aren't in hot paths so this should make\nno practical difference.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/18a66fbac031c98f9c2077fc88846e4d07849197"},{"sha":"217958d88713b5dc73d366d24dd64b2b311b86fe","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.\n\nFor compatibility with C23's [[noreturn]], tuklib_attr_noreturn\nmust be at the beginning of declaration (before \"extern\" or\n\"static\", and even before any GNU C's __attribute__).\n\nThis commit also moves all other function attributes to\nthe beginning of function declarations. \"extern\" is kept\nat the beginning of a line so the attributes are listed on\nseparate lines before \"extern\" or \"static\".","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/217958d88713b5dc73d366d24dd64b2b311b86fe"},{"sha":"ee7709bae53637e1765ce142ef102914f1423cb5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Move a few __attribute__ uses in function declarations.\n\nThe API headers have many attributes but these were left\nas is for now.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ee7709bae53637e1765ce142ef102914f1423cb5"},{"sha":"aa0cd585d2ed1455d35732798e0d90e3520e8ba5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Doxygen: Add more C macro names to PREDEFINED.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aa0cd585d2ed1455d35732798e0d90e3520e8ba5"},{"sha":"aff1b479c7b168652bd20305ceed4317d5db6661","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"lib/getopt*.c: Include <config.h> only HAVE_CONFIG_H is defined.\n\nThe CMake-based build doesn't use config.h.\n\nUp-to-date getopt_long in Gnulib is LGPLv2 so at some\npoint it could be included in XZ Utils too but for now\nthis commit is enough to make CMake-based build possible.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aff1b479c7b168652bd20305ceed4317d5db6661"},{"sha":"e3288fdb45c580cb849f6799cf419c4922004ae5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Bump maximum policy version to 3.27.\n\nThere are several new policies. CMP0149 may affect the Windows SDK\nversion that CMake will choose by default. The new behavior is more\npredictable, always choosing the latest SDK version by default.\n\nThe other new policies shouldn't affect this package.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e3288fdb45c580cb849f6799cf419c4922004ae5"},{"sha":"af66cd585902045e5689a0418103ec81f19f1d0a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for replacement getopt_long (lib/getopt*).\n\nThanks to Jia Tan for the initial work. I added the libgnu target\nand made a few related minor edits.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/af66cd585902045e5689a0418103ec81f19f1d0a"},{"sha":"8c2d197c940d246849b2ec48109bb22e54036927","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: #define inline and restrict only when needed.\n\nThis also drops the check for _WIN32 as that shouldn't be needed.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8c2d197c940d246849b2ec48109bb22e54036927"},{"sha":"daea64d158a7151ca6c255a0e4554c6d521cd589","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Allow building xz with Visual Studio 2015 and later.\n\nBuilding the command line tools xz and xzdec with the combination\nof CMake + Visual Studio 2015/2017/2019/2022 works now.\n\nVS2013 update 2 should still be able to build liblzma.\nVS2013 cannot build the xz command line tool because xz\nneeds snprintf() that roughly conforms to C99.\nVS2013 is old and no extra code will be added to support it.\n\nThanks to Kelvin Lee and Jia Tan for testing.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/daea64d158a7151ca6c255a0e4554c6d521cd589"},{"sha":"edd563daf0da1d00018684614803c77ab62efcd6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Require VS2015 or later for building xzdec.\n\nxzdec might build with VS2013 but it hasn't been tested.\nIt was never supported before and VS2013 is old anyway\nso for simplicity only liblzma is supported with VS2013.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/edd563daf0da1d00018684614803c77ab62efcd6"}]},"public":true,"created_at":"2023-09-22T17:11:03Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32038639699","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15146624851,"size":1,"distinct_size":1,"ref":"refs/heads/xz_for_msvc","head":"2a9929af0ab7e6c0ab725565034afe3293e51d71","before":"f692f0c49b9e179dee86c4cea73d27226c815dfc","commits":[{"sha":"2a9929af0ab7e6c0ab725565034afe3293e51d71","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz: Windows: Don't (de)compress to special files like \"con\" or \"nul\".\n\nBefore this commit, the following writes \"foo\" to the\nconsole and deletes the input file:\n\n    echo foo | xz > con_xz\n    xz --suffix=_xz --decompress con_xz\n\nIt cannot happen without --suffix because names like con.xz\nare also special and so attempting to decompress con.xz\n(or compress con to con.xz) will already fail when opening\nthe input file.\n\nSimilar thing is possible when compressing. The following\nwrites to \"nul\" and the input file \"n\" is deleted.\n\n    echo foo | xz > n\n    xz --suffix=ul n\n\nNow xz checks if the destination is a special file before\ncontinuing. DOS/DJGPP version had a check for this but\nWindows (and OS/2) didn't.","distinct":true,"url":"https://api.github.com/repos/tukaani-project/xz/commits/2a9929af0ab7e6c0ab725565034afe3293e51d71"}]},"public":true,"created_at":"2023-09-22T17:21:02Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32038830541","type":"PushEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"repository_id":553665726,"push_id":15146724508,"size":24,"distinct_size":0,"ref":"refs/heads/master","head":"2a9929af0ab7e6c0ab725565034afe3293e51d71","before":"adef92f23563a2cc088b31ddee9040ecc96bc996","commits":[{"sha":"cfd1054b9b539ee92524901e95d7bb5a1fe670a0","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: Don't #include <unistd.h>.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/cfd1054b9b539ee92524901e95d7bb5a1fe670a0"},{"sha":"c4edd367678e6a38c42b149856159bf417da7fe1","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xzdec: Use _fileno and _setmode.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c4edd367678e6a38c42b149856159bf417da7fe1"},{"sha":"d14bba8fc2be02a9fed8c9bcaaf61103451755f8","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _fileno() instead of fileno().","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/d14bba8fc2be02a9fed8c9bcaaf61103451755f8"},{"sha":"e241051f50044259d174e8b4633dd9a1c4478408","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _isatty() from <io.h> to implement isatty().","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e241051f50044259d174e8b4633dd9a1c4478408"},{"sha":"5c6f892d411670e3060f4bc309402617a209e57c","author":{"email":"kiyolee@gmail.com","name":"Kelvin Lee"},"message":"MSVC: xz: Use _stricmp() instead of strcasecmp() in suffix.c.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/5c6f892d411670e3060f4bc309402617a209e57c"},{"sha":"c660b8d78b7bda43b12b285550d8c70e8ccec698","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Use GetTickCount64() to implement mytime_now().\n\nIt's available since Windows Vista.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/c660b8d78b7bda43b12b285550d8c70e8ccec698"},{"sha":"79334e7f20f2bf9e0de095835b48868f1238f584","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.\n\nThanks to Kelvin Lee for the original patches\nand testing the modifications I made.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/79334e7f20f2bf9e0de095835b48868f1238f584"},{"sha":"189f72581329ab281ad6af37f60135910cb1b146","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Update THANKS.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/189f72581329ab281ad6af37f60135910cb1b146"},{"sha":"90c94dddfd57b7d744bfad64c54e10d15778144b","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.\n\nThis makes no difference for GCC or Clang as they support\nGNU C's __attribute__((__noreturn__)) but this helps with MSVC:\n\n  - VS 2019 version 16.7 and later support _Noreturn if the\n    options /std:c11 or /std:c17 are used. This gets handled\n    with the check for __STDC_VERSION__ >= 201112.\n\n  - When MSVC isn't in C11/C17 mode, __declspec(noreturn) is used.\n\nC23 will deprecate _Noreturn (and <stdnoreturn.h>)\nfor [[noreturn]]. This commit anticipates that but\nthe final __STDC_VERSION__ value isn't known yet.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/90c94dddfd57b7d744bfad64c54e10d15778144b"},{"sha":"74b0e900c92d5b222b36f474f1efa431f8e262f7","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Build: Omit -Wc99-c11-compat since it warns about _Noreturn.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/74b0e900c92d5b222b36f474f1efa431f8e262f7"},{"sha":"18a66fbac031c98f9c2077fc88846e4d07849197","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Remove incorrect uses of __attribute__((__malloc__)).\n\nxrealloc() is obviously incorrect, modern GCC docs even\nmention realloc() as an example where this attribute\ncannot be used.\n\nliblzma's lzma_alloc() and lzma_alloc_zero() would be\ncorrect uses most of the time but custom allocators\nmay use a memory pool or otherwise hold the pointer\nso aliasing issues could happen in theory.\n\nThe xstrdup() case likely was correct but I removed it anyway.\nNow there are no __malloc__ attributes left in the code.\nThe allocations aren't in hot paths so this should make\nno practical difference.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/18a66fbac031c98f9c2077fc88846e4d07849197"},{"sha":"217958d88713b5dc73d366d24dd64b2b311b86fe","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.\n\nFor compatibility with C23's [[noreturn]], tuklib_attr_noreturn\nmust be at the beginning of declaration (before \"extern\" or\n\"static\", and even before any GNU C's __attribute__).\n\nThis commit also moves all other function attributes to\nthe beginning of function declarations. \"extern\" is kept\nat the beginning of a line so the attributes are listed on\nseparate lines before \"extern\" or \"static\".","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/217958d88713b5dc73d366d24dd64b2b311b86fe"},{"sha":"ee7709bae53637e1765ce142ef102914f1423cb5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"liblzma: Move a few __attribute__ uses in function declarations.\n\nThe API headers have many attributes but these were left\nas is for now.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/ee7709bae53637e1765ce142ef102914f1423cb5"},{"sha":"aa0cd585d2ed1455d35732798e0d90e3520e8ba5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"Doxygen: Add more C macro names to PREDEFINED.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aa0cd585d2ed1455d35732798e0d90e3520e8ba5"},{"sha":"aff1b479c7b168652bd20305ceed4317d5db6661","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"lib/getopt*.c: Include <config.h> only HAVE_CONFIG_H is defined.\n\nThe CMake-based build doesn't use config.h.\n\nUp-to-date getopt_long in Gnulib is LGPLv2 so at some\npoint it could be included in XZ Utils too but for now\nthis commit is enough to make CMake-based build possible.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/aff1b479c7b168652bd20305ceed4317d5db6661"},{"sha":"e3288fdb45c580cb849f6799cf419c4922004ae5","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Bump maximum policy version to 3.27.\n\nThere are several new policies. CMP0149 may affect the Windows SDK\nversion that CMake will choose by default. The new behavior is more\npredictable, always choosing the latest SDK version by default.\n\nThe other new policies shouldn't affect this package.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/e3288fdb45c580cb849f6799cf419c4922004ae5"},{"sha":"af66cd585902045e5689a0418103ec81f19f1d0a","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Add support for replacement getopt_long (lib/getopt*).\n\nThanks to Jia Tan for the initial work. I added the libgnu target\nand made a few related minor edits.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/af66cd585902045e5689a0418103ec81f19f1d0a"},{"sha":"8c2d197c940d246849b2ec48109bb22e54036927","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"MSVC: #define inline and restrict only when needed.\n\nThis also drops the check for _WIN32 as that shouldn't be needed.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/8c2d197c940d246849b2ec48109bb22e54036927"},{"sha":"daea64d158a7151ca6c255a0e4554c6d521cd589","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Allow building xz with Visual Studio 2015 and later.\n\nBuilding the command line tools xz and xzdec with the combination\nof CMake + Visual Studio 2015/2017/2019/2022 works now.\n\nVS2013 update 2 should still be able to build liblzma.\nVS2013 cannot build the xz command line tool because xz\nneeds snprintf() that roughly conforms to C99.\nVS2013 is old and no extra code will be added to support it.\n\nThanks to Kelvin Lee and Jia Tan for testing.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/daea64d158a7151ca6c255a0e4554c6d521cd589"},{"sha":"edd563daf0da1d00018684614803c77ab62efcd6","author":{"email":"lasse.collin@tukaani.org","name":"Lasse Collin"},"message":"CMake: Require VS2015 or later for building xzdec.\n\nxzdec might build with VS2013 but it hasn't been tested.\nIt was never supported before and VS2013 is old anyway\nso for simplicity only liblzma is supported with VS2013.","distinct":false,"url":"https://api.github.com/repos/tukaani-project/xz/commits/edd563daf0da1d00018684614803c77ab62efcd6"}]},"public":true,"created_at":"2023-09-22T17:30:01Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32038853900","type":"IssueCommentEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60","repository_url":"https://api.github.com/repos/tukaani-project/xz","labels_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/comments","events_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/events","html_url":"https://github.com/tukaani-project/xz/pull/60","id":1867809603,"node_id":"PR_kwDOIQBEvs5Y1e5_","number":60,"title":"Make xz buildable with MSVC and add 64-bit filesize support","user":{"login":"kiyolee","id":1015967,"node_id":"MDQ6VXNlcjEwMTU5Njc=","avatar_url":"https://avatars.githubusercontent.com/u/1015967?v=4","gravatar_id":"","url":"https://api.github.com/users/kiyolee","html_url":"https://github.com/kiyolee","followers_url":"https://api.github.com/users/kiyolee/followers","following_url":"https://api.github.com/users/kiyolee/following{/other_user}","gists_url":"https://api.github.com/users/kiyolee/gists{/gist_id}","starred_url":"https://api.github.com/users/kiyolee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiyolee/subscriptions","organizations_url":"https://api.github.com/users/kiyolee/orgs","repos_url":"https://api.github.com/users/kiyolee/repos","events_url":"https://api.github.com/users/kiyolee/events{/privacy}","received_events_url":"https://api.github.com/users/kiyolee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2023-08-26T00:21:40Z","updated_at":"2023-09-22T17:31:10Z","closed_at":"2023-09-06T09:10:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/tukaani-project/xz/pulls/60","html_url":"https://github.com/tukaani-project/xz/pull/60","diff_url":"https://github.com/tukaani-project/xz/pull/60.diff","patch_url":"https://github.com/tukaani-project/xz/pull/60.patch","merged_at":null},"body":"To support files larger than 4 GiB on Windows, all calls of stat() and lseek() have to be redirected to 64-bit filesize capable calls.\r\n\r\n## Pull request checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\r\n- [X] Build was run locally and without warnings or errors\r\n- [X] All previous and new tests pass\r\n\r\nNote: Compile warnings are inevitable for MSVC when some variables can be either 64-bit (target x64) or 32-bit (target Win32) at compile time. Those warnings need extensive changes to clean up.\r\n\r\n## Pull request type\r\n\r\n<!-- Please try to limit your pull request to one type, submit multiple\r\npull requests if needed. --> \r\n\r\nPlease check the type of change your PR introduces:\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, renaming, typo fix)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] Documentation content changes\r\n- [X] Other (please describe): \r\n\r\nMake xz buildable with MSVC.\r\nAdd 64-bit filesize support on Windows.\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying. -->\r\n\r\nxz does not build with MSVC.\r\nxz would refuse to handle files larger than 4 GiB.\r\n\r\n<!-- Related issue this PR addresses, if applicable -->\r\nRelated Issue URL: \r\n\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the behavior or changes that are being added by this\r\nPR. -->\r\n\r\nxz can be built with MSVC.\r\nxz can handle files larger than 4 GiB on Windows.\r\n\r\n\r\n## Does this introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n<!-- If this introduces a breaking change, please describe the impact and\r\nmigration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n<!-- Any other information that is important to this PR. -->\r\n\r\nI have added extensive MSVC build support in my own repo https://github.com/kiyolee/xz-win-build.\r\nIn addition to building xz, I have added support to build all tests as well.\r\nThis PR only covers code changes that were done while setting up my own repo.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/60/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/tukaani-project/xz/issues/60/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1731790698","html_url":"https://github.com/tukaani-project/xz/pull/60#issuecomment-1731790698","issue_url":"https://api.github.com/repos/tukaani-project/xz/issues/60","id":1731790698,"node_id":"IC_kwDOIQBEvs5nOQdq","user":{"login":"Larhzu","id":120408189,"node_id":"U_kgDOBy1IfQ","avatar_url":"https://avatars.githubusercontent.com/u/120408189?v=4","gravatar_id":"","url":"https://api.github.com/users/Larhzu","html_url":"https://github.com/Larhzu","followers_url":"https://api.github.com/users/Larhzu/followers","following_url":"https://api.github.com/users/Larhzu/following{/other_user}","gists_url":"https://api.github.com/users/Larhzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Larhzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larhzu/subscriptions","organizations_url":"https://api.github.com/users/Larhzu/orgs","repos_url":"https://api.github.com/users/Larhzu/repos","events_url":"https://api.github.com/users/Larhzu/events{/privacy}","received_events_url":"https://api.github.com/users/Larhzu/received_events","type":"User","site_admin":false},"created_at":"2023-09-22T17:31:09Z","updated_at":"2023-09-22T17:31:09Z","author_association":"MEMBER","body":"I merged xz_for_msvc to master except the tuklib_physmem W2k commits.","reactions":{"url":"https://api.github.com/repos/tukaani-project/xz/issues/comments/1731790698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-22T17:31:10Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
{"id":"32038882452","type":"DeleteEvent","actor":{"id":120408189,"login":"Larhzu","display_login":"Larhzu","gravatar_id":"","url":"https://api.github.com/users/Larhzu","avatar_url":"https://avatars.githubusercontent.com/u/120408189?"},"repo":{"id":553665726,"name":"tukaani-project/xz","url":"https://api.github.com/repos/tukaani-project/xz"},"payload":{"ref":"xz_for_msvc","ref_type":"branch","pusher_type":"user"},"public":true,"created_at":"2023-09-22T17:32:35Z","org":{"id":116083088,"login":"tukaani-project","gravatar_id":"","url":"https://api.github.com/orgs/tukaani-project","avatar_url":"https://avatars.githubusercontent.com/u/116083088?"}}
